---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: catalogsources.operators.coreos.com
  annotations:
    displayName: CatalogSource
    description: A source configured to find packages and updates.
spec:
  group: operators.coreos.com
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: catalogsources
    singular: catalogsource
    kind: CatalogSource
    listKind: CatalogSourceList
    shortNames:
    - catsrc
    categories:
    - olm
  additionalPrinterColumns:
  - name: Display
    type: string
    description: The pretty name of the catalog
    JSONPath: .spec.displayName
  - name: Type
    type: string
    description: The type of the catalog
    JSONPath: .spec.sourceType
  - name: Publisher
    type: string
    description: The publisher of the catalog
    JSONPath: .spec.publisher
  - name: Age
    type: date
    JSONPath: .metadata.creationTimestamp
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A source configured to find packages and updates.
      properties:
        spec:
          type: object
          description: Spec for a catalog source.
          required:
          - sourceType
          properties:
            sourceType:
              type: string
              description: The type of the source. `configmap` is the new name for `internal`
              enum:
              - internal   # deprecated
              - configmap
              - grpc

            configMap:
              type: string
              description: The name of a ConfigMap that holds the entries for an in-memory catalog.

            address:
              type: string
              description: An optional address. When set, directs OLM to connect to use a pre-existing registry server at this address.

            image:
              type: string
              description: An image that serves a grpc registry. Only valid for `grpc` sourceType. If both image and address are set, OLM does not use the address field.

            displayName:
              type: string
              description: Pretty name for display

            publisher:
              type: string
              description: The name of an entity that publishes this catalog

            secrets:
              type: array
              description: A set of secrets that can be used to access the contents of the catalog. It is best to keep this list small, since each will need to be tried for every catalog entry.
              items:
                type: string
                description: A name of a secret in the namespace where the CatalogSource is defined.
        status:
          type: object
          description: The status of the CatalogSource
          properties:
            configMapReference:
              type: object
              description: If sourceType is `internal` or `configmap`, then this holds a reference to the configmap associated with this CatalogSource.
              properties:
                name:
                  type: string
                  description: name of the configmap
                namespace:
                  type: string
                  description: namespace of the configmap
                resourceVersion:
                  type: string
                  description: resourceVersion of the configmap
                uid:
                  type: string
                  description: uid of the configmap
            registryService:
              type: object
              properties:
                protocol:
                  type: string
                  description: protocol of the registry service
                  enum:
                    - grpc
                serviceName:
                  type: string
                  description: name of the registry service
                serviceNamespace:
                  type: string
                  description: namespace of the registry service
                port:
                  type: string
                  description: port of the registry service
            lastSync:
                type: string
                description: the last time the catalog was updated. If this time is less than the last updated time on the object, the catalog will be re-cached.

---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: clusterserviceversions.operators.coreos.com
  annotations:
    displayName: Operator Version
    description: Represents an Operator that should be running on the cluster, including requirements and install strategy.
spec:
  names:
    plural: clusterserviceversions
    singular: clusterserviceversion
    kind: ClusterServiceVersion
    listKind: ClusterServiceVersionList
    shortNames:
    - csv
    - csvs
    categories:
    - olm
  additionalPrinterColumns:
  - name: Display
    type: string
    description: The name of the CSV
    JSONPath: .spec.displayName
  - name: Version
    type: string
    description: The version of the CSV
    JSONPath: .spec.version
  - name: Replaces
    type: string
    description: The name of a CSV that this one replaces
    JSONPath: .spec.replaces
  - name: Phase
    type: string
    JSONPath: .status.phase
  group: operators.coreos.com
  version: v1alpha1
  versions:
    - name: v1alpha1
      served: true
      storage: true
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Represents an Operator that should be running on the cluster, including requirements and install strategy.
      properties:
        spec:
          type: object
          description: Spec for a ClusterServiceVersion
          required:
          - displayName
          - install
          properties:
            displayName:
              type: string
              description: Human readable name of the application that will be displayed in the ALM UI

            description:
              type: string
              description: Human readable description of what the application does

            minKubeVersion:
              type: string
              description: Minimum kubernetes version requirement on the server to deploy operator
              pattern: ^\bv?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$

            keywords:
              type: array
              description: List of keywords which will be used to discover and categorize app types
              items:
                type: string

            maintainers:
              type: array
              description: Those responsible for the creation of this specific app type
              items:
                type: object
                description: Information for a single maintainer
                required:
                - name
                - email
                properties:
                  name:
                    type: string
                    description: Maintainer's name
                  email:
                    type: string
                    description: Maintainer's email address
                    format: email
                optionalProperties:
                  type: string
                  description: "Any additional key-value metadata you wish to expose about the maintainer, e.g. github: <username>"

            links:
              type: array
              description: Interesting links to find more information about the project, such as marketing page, documentation, or github page
              items:
                type: object
                description: A single link to describe one aspect of the project
                required:
                - name
                - url
                properties:
                  name:
                    type: string
                    description: Name of the link type, e.g. homepage or github url
                  url:
                    type: string
                    description: URL to which the link should point
                    format: uri

            icon:
              type: array
              description: Icon which should be rendered with the application information
              items:
                type: object
                required:
                - base64data
                - mediatype
                properties:
                  base64data:
                    type: string
                    description: Base64 binary representation of the icon image
                  mediatype:
                    type: string
                    description: Mediatype for the binary data specified in the base64data property
                    enum:
                    - image/gif
                    - image/jpeg
                    - image/png
                    - image/svg+xml
            version:
              type: string
              description: Version string, recommended that users use semantic versioning
              pattern: ^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(-(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(\.(0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*)?(\+[0-9a-zA-Z-]+(\.[0-9a-zA-Z-]+)*)?$

            replaces:
              type: string
              description: Name of the ClusterServiceVersion custom resource that this version replaces

            maturity:
              type: string
              description: What level of maturity the software has achieved at this version
              enum:
              - planning
              - pre-alpha
              - alpha
              - beta
              - stable
              - mature
              - inactive
              - deprecated
            labels:
              type: object
              description: Labels that will be applied to associated resources created by the operator.
            selector:
              type: object
              description: Label selector to find resources associated with or managed by the operator
              properties:
                matchLabels:
                  type: object
                  description: Label key:value pairs to match directly
                matchExpressions:
                  type: array
                  description: A set of expressions to match against the resource.
                  items:
                    allOf:
                      - type: object
                        required:
                        - key
                        - operator
                        - values
                        properties:
                          key:
                            type: string
                            description: the key to match
                          operator:
                            type: string
                            description: the operator for the expression
                            enum:
                            - In
                            - NotIn
                            - Exists
                            - DoesNotExist
                          values:
                            type: array
                            description: set of values for the expression
            nativeAPIs:
              type: array
              description: What resources are required by the Operator, but must be provided by the underlying cluster and not as an extension.
              items:
                type: object
                required:
                - group
                - version
                - kind
                properties:
                  group:
                    type: string
                    description: Group of the API resource
                  version:
                    type: string
                    description: Version of the API resource
                  kind:
                    type: string
                    description: Kind of the API resource
            apiservicedefinitions:
              type: object
              properties:
                owned:
                  type: array
                  description: What resources this operator is responsible for managing. No two running operators should manage the same resource.
                  items:
                    type: object
                    required:
                    - group
                    - version
                    - kind
                    - name
                    - deploymentName
                    - displayName
                    - description
                    properties:
                      group:
                        type: string
                        description: Group of the APIService (e.g. app.coreos.com)
                      name:
                        type: string
                        description: The plural name for the APIService provided
                      version:
                        type: string
                        description: The version field of the APIService
                      kind:
                        type: string
                        description: The kind field of the APIService
                      deploymentName:
                        type: string
                        description: Name of the extension api-server's deployment
                      containerPort:
                        type: number
                        description: Port where the extension api-server serves TLS traffic
                      displayName:
                        type: string
                        description: A human-readable name for the APIService.
                      description:
                        type: string
                        description: A description of the APIService
                      resources:
                        type: array
                        items:
                          type: object
                          description: A list of resources that should be displayed for the APIService
                          required:
                          - kind
                          - version
                          properties:
                            name:
                              type: string
                              description: If a APIService, the fully qualified name of the APIService (e.g. my-resource-v1.app.coreos.com)
                            version:
                              type: string
                              description: The version of the resource kind
                            kind:
                              type: string
                              description: The kind field of the resource kind
                      statusDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for a field in the status block of the API resource
                          required:
                          - path
                          - displayName
                          - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the status object on the API resource where the the status value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the status entry.
                            description:
                              type: string
                              description: A description of the status entry.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the status entry that indicate the meaning of the field.
                              items:
                                type: string
                            value:
                              description: If present, the value of this status is the same for all instances of the API resource and can be found here instead of on the API resource.
                      specDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for a field in the spec block of the APIService resource.
                          required:
                          - path
                          - displayName
                          - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the spec object on the API resource where the the spec value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the spec entry.
                            description:
                              type: string
                              description: A description of the spec entry.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the spec entry that indicate the meaning of the field.
                              items:
                                type: string
                            value:
                              description: If present, the value of this spec is the same for all instances of the API Resource and can be found here instead of on the API resource.
                      actionDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for actions that can be performed on instances of the API resource
                          required:
                          - path
                          - displayName
                          - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the spec object on the API resource where the the spec value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the action.
                            description:
                              type: string
                              description: A description of the action.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the action that indicate the meaning of the action.
                              items:
                                type: string
                            value:
                              description: If present, the value of this action is the same for all instances of the API resource and can be found here instead of on the API resource.
                required:
                  type: array
                  description: What resources this operator is responsible for managing. No two running operators should manage the same resource.
                  items:
                    type: object
                    required:
                    - group
                    - version
                    - kind
                    - name
                    - displayName
                    - description
                    properties:
                      group:
                        type: string
                        description: Group of the APIService (e.g. app.coreos.com)
                      version:
                        type: string
                        description: The version field of the APIService
                      kind:
                        type: string
                        description: The kind field of the APIService
                      name:
                        type: string
                        description: The plural name for the APIService provided
                      deploymentName:
                        type: string
                        description: Name of the extension api-server's deployment
                      containerPort:
                        type: number
                        description: Port where the extension api-server serves TLS traffic
                      displayName:
                        type: string
                        description: A human-readable name for the APIService.
                      description:
                        type: string
                        description: A description of the APIService
                      statusDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for a field in the status block of the APIService
                          required:
                          - path
                          - displayName
                          - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the status object on the API Resource where the the status value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the status entry.
                            description:
                              type: string
                              description: A description of the status entry.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the status entry that indicate the meaning of the field.
                              items:
                                type: string
                            value:
                              description: If present, the value of this status is the same for all instances of the API Resource and can be found here instead of on the API Resource.

            customresourcedefinitions:
              type: object
              properties:
                owned:
                  type: array
                  description: What resources this operator is responsible for managing. No two running operators should manage the same resource.
                  items:
                    type: object
                    required:
                      - name
                      - version
                      - kind
                      - displayName
                      - description
                    properties:
                      name:
                        type: string
                        description: Fully qualified name of the CustomResourceDefinition (e.g. my-resource-v1.app.coreos.com)
                      version:
                        type: string
                        description: The version field of the CustomResourceDefinition
                      kind:
                        type: string
                        description: The kind field of the CustomResourceDefinition
                      displayName:
                        type: string
                        description: A human-readable name for the CRD.
                      description:
                        type: string
                        description: A description of the CRD
                      resources:
                        type: array
                        items:
                          type: object
                          description: A list of resources that should be displayed for the CRD
                          required:
                            - kind
                            - version
                          properties:
                            name:
                              type: string
                              description: If a CRD, the fully qualified name of the CustomResourceDefinition (e.g. my-resource-v1.app.coreos.com)
                            version:
                              type: string
                              description: The version of the resource kind
                            kind:
                              type: string
                              description: The kind field of the resource kind
                      statusDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for a field in the status block of the CRD
                          required:
                            - path
                            - displayName
                            - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the status object on the CR where the the status value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the status entry.
                            description:
                              type: string
                              description: A description of the status entry.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the status entry that indicate the meaning of the field.
                              items:
                                type: string
                            value:
                              description: If present, the value of this status is the same for all instances of the CRD and can be found here instead of on the CR.
                      specDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for a field in the spec block of the CRD
                          required:
                            - path
                            - displayName
                            - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the spec object on the CR where the the spec value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the spec entry.
                            description:
                              type: string
                              description: A description of the spec entry.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the spec entry that indicate the meaning of the field.
                              items:
                                type: string
                            value:
                              description: If present, the value of this spec is the same for all instances of the CRD and can be found here instead of on the CR.
                      actionDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for actions that can be performed on instances of the CRD
                          required:
                            - path
                            - displayName
                            - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the spec object on the CR where the the spec value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the action.
                            description:
                              type: string
                              description: A description of the action.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the action that indicate the meaning of the action.
                              items:
                                type: string
                            value:
                              description: If present, the value of this action is the same for all instances of the CRD and can be found here instead of on the CR.
                required:
                  type: array
                  description: What resources this operator is responsible for managing. No two running operators should manage the same resource.
                  items:
                    type: object
                    required:
                      - name
                      - version
                      - kind
                      - displayName
                      - description
                    properties:
                      name:
                        type: string
                        description: Fully qualified name of the CustomResourceDefinition (e.g. my-resource-v1.app.coreos.com)
                      version:
                        type: string
                        description: The version field of the CustomResourceDefinition
                      kind:
                        type: string
                        description: The kind field of the CustomResourceDefinition
                      displayName:
                        type: string
                        description: A human-readable name for the CRD.
                      description:
                        type: string
                        description: A description of the CRD
                      statusDescriptors:
                        type: array
                        items:
                          type: object
                          description: A spec for a field in the status block of the CRD
                          required:
                            - path
                            - displayName
                            - description
                          properties:
                            path:
                              type: string
                              description: A jsonpath indexing into the status object on the CR where the the status value can be found.
                            displayName:
                              type: string
                              description: A human-readable name for the status entry.
                            description:
                              type: string
                              description: A description of the status entry.
                            x-descriptors:
                              type: array
                              description: A list of descriptors for the status entry that indicate the meaning of the field.
                              items:
                                type: string
                            value:
                              description: If present, the value of this status is the same for all instances of the CRD and can be found here instead of on the CR.


            install:
              type: object
              description: Information required to install this specific version of the operator software
              oneOf:
              - type: object
                required:
                - strategy
                - spec
                properties:
                  strategy:
                    type: string
                    enum: ['image']
                  spec:
                    type: object
                    required:
                    - image
                    properties:
                      image:
                        type: string
              - type: object
                required:
                - strategy
                - spec
                properties:
                  strategy:
                    type: string
                    enum: ['deployment']
                  spec:
                    type: object
                    required:
                    - deployments
                    properties:
                      installModes:
                        type: array
                        description: List of supported install modes for the operator
                        items:
                          type: object
                          description: A tuple representing a mode of installation and whether the operator supports it
                          required:
                            - type
                            - supported
                          properties:
                            type:
                              type: string
                              description: A type of install mode
                              enum:
                                - OwnNamespace
                                - SingleNamespace
                                - MultiNamespace
                                - AllNamespaces
                            supported:
                              type: boolean
                              description: Represents if the install mode type is supported
                      deployments:
                        type: array
                        description: List of deployments to create
                        items:
                          type: object
                          description: A name and deployment to create in the cluster
                          required:
                            - name
                            - spec
                          properties:
                            name:
                              type: string
                              description: the consistent name of the deployment
                            spec:
                              type: object
                              description: The deployment spec to create in the cluster
                      permissions:
                        type: array
                        description: Permissions needed by the deployement to run correctly
                        items:
                          type: object
                          required:
                            - serviceAccountName
                            - rules
                          properties:
                            serviceAccountName:
                              type: string
                              description: The service account name to create for the deployment
                            rules:
                              type: array
                              items:
                                type: object
                                description: a rule required by the service account
                                properties:
                                  apiGroups:
                                    type: array
                                    description: apiGroups the rule applies to
                                    items:
                                      type: string
                                  resources:
                                    type: array
                                    items:
                                      type: string
                                  resourceNames:
                                    type: array
                                    items:
                                      type: string
                                  verbs:
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                        - "*"
                                        - assign
                                        - get
                                        - list
                                        - watch
                                        - create
                                        - update
                                        - patch
                                        - delete
                                        - deletecollection
                                        - initialize
                                        - use
                      clusterPermissions:
                        type: array
                        description: Cluster permissions needed by the deployement to run correctly
                        items:
                          type: object
                          required:
                          - serviceAccountName
                          - rules
                          properties:
                            serviceAccountName:
                              type: string
                              description: The service account name to create for the deployment
                            rules:
                              type: array
                              items:
                                type: object
                                required:
                                - verbs
                                description: a rule required by the service account
                                properties:
                                  apiGroups:
                                    type: array
                                    description: apiGroups the rule applies to
                                    items:
                                      type: string
                                  resources:
                                    type: array
                                    items:
                                      type: string
                                  resourceNames:
                                    type: array
                                    items:
                                      type: string
                                  nonResourceURLs:
                                    type: array
                                    items:
                                      type: string
                                  verbs:
                                    type: array
                                    items:
                                      type: string
                                      enum:
                                      - "*"
                                      - assign
                                      - get
                                      - list
                                      - watch
                                      - create
                                      - update
                                      - patch
                                      - put
                                      - post
                                      - delete
                                      - deletecollection
                                      - initialize
                                      - use
        status:
          type: object
          description: Status for a ClusterServiceVersion
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: installplans.operators.coreos.com
  annotations:
    displayName: Install Plan
    description: Represents a plan to install and resolve dependencies for Cluster Services
spec:
  group: operators.coreos.com
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: installplans
    singular: installplan
    kind: InstallPlan
    listKind: InstallPlanList
    shortNames:
    - ip
    categories:
    - olm
  additionalPrinterColumns:
  - name: CSV
    type: string
    description: The first CSV in the list of clusterServiceVersionNames
    JSONPath: .spec.clusterServiceVersionNames[0]
  - name: Approval
    type: string
    description: The approval mode
    JSONPath: .spec.approval
  - name: Approved
    type: boolean
    JSONPath: .spec.approved
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Represents a plan to install and resolve dependencies for Cluster Services.
      properties:
        spec:
          type: object
          description: Spec for an InstallPlan
          required:
          - clusterServiceVersionNames
          - approval
          properties:
            source:
              type: string
              description: Name of the preferred CatalogSource
            sourceNamespace:
              type: string
              description: Namespace that contains the preffered CatalogSource
            clusterServiceVersionNames:
              type: array
              description: A list of the names of the Cluster Services
              items:
                type: string
          anyOf:
            - properties:
                approval:
                  enum:
                    - Manual
                approved:
                  type: boolean
              required:
                - approved
            - properties:
                approval:
                  enum:
                    - Automatic
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: operatorgroups.operators.coreos.com
spec:
  group: operators.coreos.com
  version: v1
  versions:
    - name: v1
      served: true
      storage: true
    - name: v1alpha2
      served: true
      storage: false
  names:
    plural: operatorgroups
    singular: operatorgroup
    kind: OperatorGroup
    listKind: OperatorGroupList
    shortNames:
      - og
    categories:
      - olm
  scope: Namespaced
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: A grouping of namespaces for usage with an operator.
      properties:
        spec:
          type: object
          description: Spec for an OperatorGroup.
          properties:
            selector:
              type: object
              description: Optional label selector to find resources associated with or managed by the operator
              anyOf:
                - properties:
                    matchLabels:
                      type: object
                      description: Label key:value pairs to match directly
                  required:
                    - matchLabels
                - properties:
                    matchExpressions:
                      type: array
                      description: A set of expressions to match against the resource.
                      items:
                        allOf:
                          - type: object
                            required:
                            - key
                            - operator
                            - values
                            properties:
                              key:
                                type: string
                                description: the key to match
                              operator:
                                type: string
                                description: the operator for the expression
                                enum:
                                - In
                                - NotIn
                                - Exists
                                - DoesNotExist
                              values:
                                type: array
                                description: set of values for the expression
                  required:
                    - matchExpressions
            targetNamespaces:
              type: array
              description: Optional list of target namespaces. If set, OLM will ignore selector.
              items:
                type: string
                pattern: ^\S+$
            serviceAccountName:
              type: string
            staticProvidedAPIs:
              type: boolean
              description: If true, OLM will not modify the OperatorGroup's providedAPIs annotation.
        status:
          type: object
          description: The status of the OperatorGroup.
          properties:
            lastUpdated:
              format: date-time
              type: string
            namespaces:
              items:
                type: string
              type: array
          required:
          - lastUpdated
      required:
      - metadata
---
apiVersion: apiextensions.k8s.io/v1beta1
kind: CustomResourceDefinition
metadata:
  name: subscriptions.operators.coreos.com
  annotations:
    displayName: Subscription
    description: Subscribes service catalog to a source and channel to recieve updates for packages.
spec:
  group: operators.coreos.com
  version: v1alpha1
  versions:
  - name: v1alpha1
    served: true
    storage: true
  scope: Namespaced
  names:
    plural: subscriptions
    singular: subscription
    kind: Subscription
    listKind: SubscriptionList
    shortNames:
    - sub
    - subs
    categories:
    - olm
  additionalPrinterColumns:
  - name: Package
    type: string
    description: The package subscribed to
    JSONPath: .spec.name
  - name: Source
    type: string
    description: The catalog source for the specified package
    JSONPath: .spec.source
  - name: Channel
    type: string
    description: The channel of updates to subscribe to
    JSONPath: .spec.channel
  subresources:
    status: {}
  validation:
    openAPIV3Schema:
      description: Subscribes service catalog to a source and channel to recieve updates for packages.
      properties:
        spec:
          type: object
          description: Spec for a Subscription
          required:
          - source
          - name
          properties:
            source:
              type: string
              description: Name of a CatalogSource that defines where and how to find the channel
            sourceNamespace:
              type: string
              description: The Kubernetes namespace where the CatalogSource used is located
            name:
              type: string
              description: Name of the package that defines the application
            channel:
              type: string
              description: Name of the channel to track
            startingCSV:
              type: string
              description: Name of the AppType that this subscription tracks
            installPlanApproval:
              type: string
              description: Approval mode for emitted InstallPlans
              enum:
              - Manual
              - Automatic
            config:
              type: object
              description: Operator Pod configuration, it is applied to the operator during install. It has higher precedence than the same configuration specified in a ClusterServiveVersion.
              properties:
                env:
                  type: array
                  description: List of environment variables to set in the container
                  items:
                    type: object
                    description: EnvVar represents an environment variable present in a Container
                    required:
                      - name
                    properties:
                      name:
                        type: string
                        description: EnvVar represents an environment variable present in a Container
                      value:
                        type: string
                        description: Value of the environment variable specified
                      valueFrom:
                        type: object
                        description: Source for the environment variable's value. Cannot be used if value is not empty
                        properties:
                          configMapKeyRef:
                            type: object
                            description: Selects a key of a ConfigMap
                            required:
                              - key
                            properties:
                              key:
                                type: string
                                description: The key to select
                              name:
                                type: string
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              optional:
                                type: boolean
                                description: Specify whether the ConfigMap or its key must be defined
                          fieldRef:
                            type: object
                            description: "Selects a field of the pod: supports metadata.name, metadata.namespace, metadata.labels, metadata.annotations, spec.nodeName, spec.serviceAccountName, status.hostIP, status.podIP"
                            required:
                              - fieldPath
                            properties:
                              apiVersion:
                                type: string
                                description: Version of the schema the FieldPath is written in terms of, defaults to v1
                              fieldPath:
                                type: string
                                description: Path of the field to select in the specified API version
                          resourceFieldRef:
                            type: object
                            description: "Selects a resource of the container: only resources limits and requests (limits.cpu, limits.memory, limits.ephemeral-storage, requests.cpu, requests.memory and requests.ephemeral-storage) are currently supported."
                            required:
                              - resource
                            properties:
                              containerName:
                                type: string
                                description: "Container name: required for volumes, optional for env vars"
                              divisor:
                                type: string
                                description: Specifies the output format of the exposed resources, defaults to 1
                              resource:
                                type: string
                                description: "Required: resource to select"
                          secretKeyRef:
                            type: object
                            description: Selects a key of a secret in the pod's namespace
                            required:
                              - key
                            properties:
                              key:
                                type: string
                                description: The key of the secret to select from.  Must be a valid secret key
                              name:
                                type: string
                                description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                              optional:
                                type: boolean
                                description: Specify whether the Secret or its key must be defined
                envFrom:
                  type: array
                  description: "List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated"
                  items:
                    type: object
                    description: EnvFromSource represents the source of a set of ConfigMaps
                    properties:
                      configMapRef:
                        type: object
                        description: "ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables"
                        properties:
                          name:
                            type: string
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          optional:
                            type: boolean
                            description: Specify whether the ConfigMap must be defined
                      prefix:
                        type: string
                        description: An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER
                      secretRef:
                        type: object
                        description: "SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables"
                        properties:
                          name:
                            type: string
                            description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
                          optional:
                            type: boolean
                            description: Specify whether the Secret must be defined

