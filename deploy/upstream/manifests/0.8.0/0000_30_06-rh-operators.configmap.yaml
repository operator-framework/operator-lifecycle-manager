---
# Source: olm/templates/0000_30_06-rh-operators.configmap.yaml

kind: ConfigMap
apiVersion: v1
metadata:
  name: rh-operators
  namespace: olm

data:
  customResourceDefinitions: |-
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: alertmanagers.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: Alertmanager
          plural: alertmanagers
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              spec:
                description: 'Specification of the desired behavior of the Alertmanager
                  cluster. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  affinity:
                    description: Affinity is a group of affinity scheduling rules.
                    properties:
                      nodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes
                              that satisfy the affinity expressions specified by this field,
                              but it may choose a node that violates one or more of the
                              expressions. The node that is most preferred is the one with
                              the greatest sum of weights, i.e. for each node that meets
                              all of the scheduling requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating through
                              the elements of this field and adding "weight" to the sum
                              if the node matches the corresponding matchExpressions; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches all
                                objects with implicit weight 0 (i.e. it's a no-op). A null
                                preferred scheduling term matches no objects (i.e. is also
                                a no-op).
                              properties:
                                preference:
                                  description: A null or empty node selector term matches
                                    no objects. The requirements of them are ANDed. The
                                    TopologySelectorTerm type implements a subset of the
                                    NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                weight:
                                  description: Weight associated with matching the corresponding
                                    nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - preference
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: A node selector represents the union of the results
                              of one or more label queries over a set of nodes; that is,
                              it represents the OR of the selectors represented by the node
                              selector terms.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms. The
                                  terms are ORed.
                                items:
                                  description: A null or empty node selector term matches
                                    no objects. The requirements of them are ANDed. The
                                    TopologySelectorTerm type implements a subset of the
                                    NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                type: array
                            required:
                            - nodeSelectorTerms
                      podAffinity:
                        description: Pod affinity is a group of inter pod affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes
                              that satisfy the affinity expressions specified by this field,
                              but it may choose a node that violates one or more of the
                              expressions. The node that is most preferred is the one with
                              the greatest sum of weights, i.e. for each node that meets
                              all of the scheduling requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating through
                              the elements of this field and adding "weight" to the sum
                              if the node has pods which matches the corresponding podAffinityTerm;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those matching
                                    the labelSelector relative to the given namespace(s))
                                    that this pod should be co-located (affinity) or not
                                    co-located (anti-affinity) with, where co-located is
                                    defined as running on a node whose value of the label
                                    with key <topologyKey> matches that of any node on which
                                    a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query over
                                        a set of resources. The result of matchLabels and
                                        matchExpressions are ANDed. An empty label selector
                                        matches all objects. A null label selector matches
                                        no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label
                                            selector requirements. The requirements are
                                            ANDed.
                                          items:
                                            description: A label selector requirement is
                                              a selector that contains values, a key, and
                                              an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array
                                                  is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is "In",
                                            and the values array contains only "value".
                                            The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the pods
                                        matching the labelSelector in the specified namespaces,
                                        where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches
                                        that of any node on which any of the selected pods
                                        is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the corresponding
                                    podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this
                              field are not met at scheduling time, the pod will not be
                              scheduled onto the node. If the affinity requirements specified
                              by this field cease to be met at some point during pod execution
                              (e.g. due to a pod label update), the system may or may not
                              try to eventually evict the pod from its node. When there
                              are multiple elements, the lists of nodes corresponding to
                              each podAffinityTerm are intersected, i.e. all terms must
                              be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s)) that
                                this pod should be co-located (affinity) or not co-located
                                (anti-affinity) with, where co-located is defined as running
                                on a node whose value of the label with key <topologyKey>
                                matches that of any node on which a pod of the set of pods
                                is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over a
                                    set of resources. The result of matchLabels and matchExpressions
                                    are ANDed. An empty label selector matches all objects.
                                    A null label selector matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector
                                        requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values.
                                              If the operator is In or NotIn, the values
                                              array must be non-empty. If the operator is
                                              Exists or DoesNotExist, the values array must
                                              be empty. This array is replaced during a
                                              strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value} pairs.
                                        A single {key,value} in the matchLabels map is equivalent
                                        to an element of matchExpressions, whose key field
                                        is "key", the operator is "In", and the values array
                                        contains only "value". The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the
                                    labelSelector applies to (matches against); null or
                                    empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where
                                    co-located is defined as running on a node whose value
                                    of the label with key topologyKey matches that of any
                                    node on which any of the selected pods is running. Empty
                                    topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                      podAntiAffinity:
                        description: Pod anti affinity is a group of inter pod anti affinity
                          scheduling rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes
                              that satisfy the anti-affinity expressions specified by this
                              field, but it may choose a node that violates one or more
                              of the expressions. The node that is most preferred is the
                              one with the greatest sum of weights, i.e. for each node that
                              meets all of the scheduling requirements (resource request,
                              requiredDuringScheduling anti-affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field
                              and adding "weight" to the sum if the node has pods which
                              matches the corresponding podAffinityTerm; the node(s) with
                              the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those matching
                                    the labelSelector relative to the given namespace(s))
                                    that this pod should be co-located (affinity) or not
                                    co-located (anti-affinity) with, where co-located is
                                    defined as running on a node whose value of the label
                                    with key <topologyKey> matches that of any node on which
                                    a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query over
                                        a set of resources. The result of matchLabels and
                                        matchExpressions are ANDed. An empty label selector
                                        matches all objects. A null label selector matches
                                        no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label
                                            selector requirements. The requirements are
                                            ANDed.
                                          items:
                                            description: A label selector requirement is
                                              a selector that contains values, a key, and
                                              an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array
                                                  is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is "In",
                                            and the values array contains only "value".
                                            The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the pods
                                        matching the labelSelector in the specified namespaces,
                                        where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches
                                        that of any node on which any of the selected pods
                                        is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the corresponding
                                    podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified by
                              this field are not met at scheduling time, the pod will not
                              be scheduled onto the node. If the anti-affinity requirements
                              specified by this field cease to be met at some point during
                              pod execution (e.g. due to a pod label update), the system
                              may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding
                              to each podAffinityTerm are intersected, i.e. all terms must
                              be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s)) that
                                this pod should be co-located (affinity) or not co-located
                                (anti-affinity) with, where co-located is defined as running
                                on a node whose value of the label with key <topologyKey>
                                matches that of any node on which a pod of the set of pods
                                is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over a
                                    set of resources. The result of matchLabels and matchExpressions
                                    are ANDed. An empty label selector matches all objects.
                                    A null label selector matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector
                                        requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values.
                                              If the operator is In or NotIn, the values
                                              array must be non-empty. If the operator is
                                              Exists or DoesNotExist, the values array must
                                              be empty. This array is replaced during a
                                              strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value} pairs.
                                        A single {key,value} in the matchLabels map is equivalent
                                        to an element of matchExpressions, whose key field
                                        is "key", the operator is "In", and the values array
                                        contains only "value". The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the
                                    labelSelector applies to (matches against); null or
                                    empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where
                                    co-located is defined as running on a node whose value
                                    of the label with key topologyKey matches that of any
                                    node on which any of the selected pods is running. Empty
                                    topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                  baseImage:
                    description: Base image that is used to deploy pods, without tag.
                    type: string
                  containers:
                    description: Containers allows injecting additional containers. This
                      is meant to allow adding an authentication proxy to an Alertmanager
                      pod.
                    items:
                      description: A single application container that you want to run within
                        a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references $(VAR_NAME)
                            are expanded using the container''s environment. If a variable
                            cannot be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with a double
                            $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                            regardless of whether the variable exists or not. Cannot be
                            updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The
                            docker image''s ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container''s
                            environment. If a variable cannot be resolved, the reference
                            in the input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable exists
                            or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present
                              in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a
                                  C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded
                                  using the previous defined environment variables in the
                                  container and any service environment variables. If a
                                  variable cannot be resolved, the reference in the input
                                  string will be unchanged. The $(VAR_NAME) syntax can be
                                  escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                                  will never be expanded, regardless of whether the variable
                                  exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: EnvVarSource represents a source for the value
                                  of an EnvVar.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key from a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or it's
                                          key must be defined
                                        type: boolean
                                    required:
                                    - key
                                  fieldRef:
                                    description: ObjectFieldSelector selects an APIVersioned
                                      field of an object.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the
                                          specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                  resourceFieldRef:
                                    description: ResourceFieldSelector represents container
                                      resources (cpu, memory) and their output format
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes,
                                          optional for env vars'
                                        type: string
                                      divisor: {}
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must
                                          be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or it's
                                          key must be defined
                                        type: boolean
                                    required:
                                    - key
                            required:
                            - name
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must be a
                            C_IDENTIFIER. All invalid keys will be reported as an event
                            when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take
                            precedence. Values defined by an Env with a duplicate key will
                            take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of
                              ConfigMaps
                            properties:
                              configMapRef:
                                description: |-
                                  ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
      
                                  The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                              prefix:
                                description: An optional identifier to prepend to each key
                                  in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: |-
                                  SecretEnvSource selects a Secret to populate the environment variables with.
      
                                  The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Lifecycle describes actions that the management system
                            should take in response to container lifecycle events. For the
                            PostStart and PreStop lifecycle handlers, management of the
                            container blocks until the action is complete, unless the container
                            process fails, in which case the handler is aborted.
                          properties:
                            postStart:
                              description: Handler defines a specific action that should
                                be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to execute
                                        inside the container, the working directory for
                                        the command  is root ('/') in the container's filesystem.
                                        The command is simply exec'd, it is not run inside
                                        a shell, so traditional shell instructions ('|',
                                        etc) won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is treated
                                        as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based on
                                    HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to
                                        the pod IP. You probably want to set "Host" in httpHeaders
                                        instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header
                                          to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action based
                                    on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults
                                        to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                            preStop:
                              description: Handler defines a specific action that should
                                be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to execute
                                        inside the container, the working directory for
                                        the command  is root ('/') in the container's filesystem.
                                        The command is simply exec'd, it is not run inside
                                        a shell, so traditional shell instructions ('|',
                                        etc) won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is treated
                                        as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based on
                                    HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to
                                        the pod IP. You probably want to set "Host" in httpHeaders
                                        instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header
                                          to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action based
                                    on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults
                                        to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                        livenessProbe:
                          description: Probe describes a health check to be performed against
                            a container to determine whether it is alive or ready to receive
                            traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container" action.
                              properties:
                                command:
                                  description: Command is the command line to execute inside
                                    the container, the working directory for the command  is
                                    root ('/') in the container's filesystem. The command
                                    is simply exec'd, it is not run inside a shell, so traditional
                                    shell instructions ('|', etc) won't work. To use a shell,
                                    you need to explicitly call out to that shell. Exit
                                    status of 0 is treated as live/healthy and non-zero
                                    is unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to
                                be considered failed after having succeeded. Defaults to
                                3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based on HTTP
                                Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the
                                    pod IP. You probably want to set "Host" in httpHeaders
                                    instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP
                                    allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to
                                      be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started
                                before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to
                                be considered successful after having failed. Defaults to
                                1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based on
                                opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults
                                    to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times
                                out. Defaults to 1 second. Minimum value is 1. More info:
                                https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each
                            container in a pod must have a unique name (DNS_LABEL). Cannot
                            be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing
                            a port here gives the system additional information about the
                            network connections a container uses, but is primarily informational.
                            Not specifying a port here DOES NOT prevent that port from being
                            exposed. Any port which is listening on the default "0.0.0.0"
                            address inside a container will be accessible from the network.
                            Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single
                              container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address.
                                  This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified,
                                  this must be a valid port number, 0 < x < 65536. If HostNetwork
                                  is specified, this must match ContainerPort. Most containers
                                  do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a pod must
                                  have a unique name. Name for the port that can be referred
                                  to by services.
                                type: string
                              protocol:
                                description: Protocol for port. Must be UDP or TCP. Defaults
                                  to "TCP".
                                type: string
                            required:
                            - containerPort
                          type: array
                        readinessProbe:
                          description: Probe describes a health check to be performed against
                            a container to determine whether it is alive or ready to receive
                            traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container" action.
                              properties:
                                command:
                                  description: Command is the command line to execute inside
                                    the container, the working directory for the command  is
                                    root ('/') in the container's filesystem. The command
                                    is simply exec'd, it is not run inside a shell, so traditional
                                    shell instructions ('|', etc) won't work. To use a shell,
                                    you need to explicitly call out to that shell. Exit
                                    status of 0 is treated as live/healthy and non-zero
                                    is unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to
                                be considered failed after having succeeded. Defaults to
                                3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based on HTTP
                                Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the
                                    pod IP. You probably want to set "Host" in httpHeaders
                                    instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP
                                    allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to
                                      be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started
                                before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to
                                be considered successful after having failed. Defaults to
                                1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based on
                                opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults
                                    to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times
                                out. Defaults to 1 second. Minimum value is 1. More info:
                                https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        resources:
                          description: ResourceRequirements describes the compute resource
                            requirements.
                          properties:
                            limits:
                              description: 'Limits describes the maximum amount of compute
                                resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              description: 'Requests describes the minimum amount of compute
                                resources required. If Requests is omitted for a container,
                                it defaults to Limits if that is explicitly specified, otherwise
                                to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                        securityContext:
                          description: SecurityContext holds security configuration that
                            will be applied to a container. Some fields are present in both
                            SecurityContext and PodSecurityContext.  When both are set,
                            the values in SecurityContext take precedence.
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a
                                process can gain more privileges than its parent process.
                                This bool directly controls if the no_new_privs flag will
                                be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: Adds and removes POSIX capabilities from running
                                containers.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    type: string
                                  type: array
                            privileged:
                              description: Run container in privileged mode. Processes in
                                privileged containers are essentially equivalent to root
                                on the host. Defaults to false.
                              type: boolean
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem.
                                Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be set
                                in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root
                                user. If true, the Kubelet will validate the image at runtime
                                to ensure that it does not run as UID 0 (root) and fail
                                to start the container if it does. If unset or false, no
                                such validation will be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext, the
                                value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata if
                                unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext, the
                                value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: SELinuxOptions are the labels to be applied to
                                the container
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                        stdin:
                          description: Whether this container should allocate a buffer for
                            stdin in the container runtime. If this is not set, reads from
                            stdin in the container will always result in EOF. Default is
                            false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin
                            channel after it has been opened by a single attach. When stdin
                            is true the stdin stream will remain open across multiple attach
                            sessions. If stdinOnce is set to true, stdin is opened on container
                            start, is empty until the first client attaches to stdin, and
                            then remains open and accepts data until the client disconnects,
                            at which time stdin is closed and remains closed until the container
                            is restarted. If this flag is false, a container processes that
                            reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s
                            termination message will be written is mounted into the container''s
                            filesystem. Message written is intended to be brief final status,
                            such as an assertion failure message. Will be truncated by the
                            node if greater than 4096 bytes. The total message length across
                            all containers will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated.
                            File will use the contents of terminationMessagePath to populate
                            the container status message on both success and failure. FallbackToLogsOnError
                            will use the last chunk of container log output if the termination
                            message file is empty and the container exited with an error.
                            The log output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for
                            itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be
                            used by the container. This is an alpha feature and may change
                            in the future.
                          items:
                            description: volumeDevice describes a mapping of a raw block
                              device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container
                                  that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - name
                            - devicePath
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within
                              a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume
                                  should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are
                                  propagated from the host to container and the other way
                                  around. When not set, MountPropagationHostToContainer
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise
                                  (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's
                                  volume should be mounted. Defaults to "" (volume's root).
                                type: string
                            required:
                            - name
                            - mountPath
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might be
                            configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                    type: array
                  externalUrl:
                    description: The external URL the Alertmanager instances will be available
                      under. This is necessary to generate correct URLs. This is necessary
                      if Alertmanager is not served from root of a DNS name.
                    type: string
                  imagePullSecrets:
                    description: An optional list of references to secrets in the same namespace
                      to use for pulling prometheus and alertmanager images from registries
                      see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                    items:
                      description: LocalObjectReference contains enough information to let
                        you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    type: array
                  listenLocal:
                    description: ListenLocal makes the Alertmanager server listen on loopback,
                      so that it does not bind against the Pod IP. Note this is only for
                      the Alertmanager UI, not the gossip communication.
                    type: boolean
                  logLevel:
                    description: Log level for Alertmanager to be configured with.
                    type: string
                  nodeSelector:
                    description: Define which Nodes the Pods are scheduled on.
                    type: object
                  paused:
                    description: If set to true all actions on the underlaying managed objects
                      are not goint to be performed, except for delete actions.
                    type: boolean
                  podMetadata:
                    description: ObjectMeta is metadata that all persisted resources must
                      have, which includes all objects users must create.
                    properties:
                      annotations:
                        description: 'Annotations is an unstructured key value map stored
                          with a resource that may be set by external tools to store and
                          retrieve arbitrary metadata. They are not queryable and should
                          be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      clusterName:
                        description: The name of the cluster which the object belongs to.
                          This is used to distinguish resources with same name and namespace
                          in different clusters. This field is not set anywhere right now
                          and apiserver is going to ignore it if set in create or update
                          request.
                        type: string
                      creationTimestamp:
                        description: Time is a wrapper around time.Time which supports correct
                          marshaling to YAML and JSON.  Wrappers are provided for many of
                          the factory methods that the time package offers.
                        format: date-time
                        type: string
                      deletionGracePeriodSeconds:
                        description: Number of seconds allowed for this object to gracefully
                          terminate before it will be removed from the system. Only set
                          when deletionTimestamp is also set. May only be shortened. Read-only.
                        format: int64
                        type: integer
                      deletionTimestamp:
                        description: Time is a wrapper around time.Time which supports correct
                          marshaling to YAML and JSON.  Wrappers are provided for many of
                          the factory methods that the time package offers.
                        format: date-time
                        type: string
                      finalizers:
                        description: Must be empty before the object is deleted from the
                          registry. Each entry is an identifier for the responsible component
                          that will remove the entry from the list. If the deletionTimestamp
                          of the object is non-nil, entries in this list can only be removed.
                        items:
                          type: string
                        type: array
                      generateName:
                        description: |-
                          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
      
                          If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
      
                          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                        type: string
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state. Populated by the system. Read-only.
                        format: int64
                        type: integer
                      initializers:
                        description: Initializers tracks the progress of initialization.
                        properties:
                          pending:
                            description: Pending is a list of initializers that must execute
                              in order before this object is visible. When the last pending
                              initializer is removed, and no failing result is set, the
                              initializers struct will be set to nil and the object is considered
                              as initialized and visible to all clients.
                            items:
                              description: Initializer is information about an initializer
                                that has not yet completed.
                              properties:
                                name:
                                  description: name of the process that is responsible for
                                    initializing this object.
                                  type: string
                              required:
                              - name
                            type: array
                          result:
                            description: Status is a return value for calls that don't return
                              other objects.
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema of
                                  this representation of an object. Servers should convert
                                  recognized schemas to the latest internal value, and may
                                  reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                type: string
                              code:
                                description: Suggested HTTP return code for this status,
                                  0 if not set.
                                format: int32
                                type: integer
                              details:
                                description: StatusDetails is a set of additional properties
                                  that MAY be set by the server to provide additional information
                                  about a response. The Reason field of a Status object
                                  defines what attributes will be set. Clients must ignore
                                  fields that do not match the defined type of each attribute,
                                  and should assume that any attribute may be empty, invalid,
                                  or under defined.
                                properties:
                                  causes:
                                    description: The Causes array includes more details
                                      associated with the StatusReason failure. Not all
                                      StatusReasons may provide detailed causes.
                                    items:
                                      description: StatusCause provides more information
                                        about an api.Status failure, including cases when
                                        multiple errors are encountered.
                                      properties:
                                        field:
                                          description: |-
                                            The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
      
                                            Examples:
                                              "name" - the field "name" on the current resource
                                              "items[0].name" - the field "name" on the first array entry in "items"
                                          type: string
                                        message:
                                          description: A human-readable description of the
                                            cause of the error.  This field may be presented
                                            as-is to a reader.
                                          type: string
                                        reason:
                                          description: A machine-readable description of
                                            the cause of the error. If this value is empty
                                            there is no information available.
                                          type: string
                                    type: array
                                  group:
                                    description: The group attribute of the resource associated
                                      with the status StatusReason.
                                    type: string
                                  kind:
                                    description: 'The kind attribute of the resource associated
                                      with the status StatusReason. On some operations may
                                      differ from the requested resource Kind. More info:
                                      https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: The name attribute of the resource associated
                                      with the status StatusReason (when there is a single
                                      name which can be described).
                                    type: string
                                  retryAfterSeconds:
                                    description: If specified, the time in seconds before
                                      the operation should be retried. Some errors may indicate
                                      the client must take an alternate action - for those
                                      errors this field may indicate how long to wait before
                                      taking the alternate action.
                                    format: int32
                                    type: integer
                                  uid:
                                    description: 'UID of the resource. (when there is a
                                      single resource which can be described). More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#uids'
                                    type: string
                              kind:
                                description: 'Kind is a string value representing the REST
                                  resource this object represents. Servers may infer this
                                  from the endpoint the client submits requests to. Cannot
                                  be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                type: string
                              message:
                                description: A human-readable description of the status
                                  of this operation.
                                type: string
                              metadata:
                                description: ListMeta describes metadata that synthetic
                                  resources must have, including lists and various status
                                  objects. A resource may have only one of {ObjectMeta,
                                  ListMeta}.
                                properties:
                                  continue:
                                    description: continue may be set if the user set a limit
                                      on the number of items returned, and indicates that
                                      the server has more data available. The value is opaque
                                      and may be used to issue another request to the endpoint
                                      that served this list to retrieve the next set of
                                      available objects. Continuing a list may not be possible
                                      if the server configuration has changed or more than
                                      a few minutes have passed. The resourceVersion field
                                      returned when using this continue value will be identical
                                      to the value in the first response.
                                    type: string
                                  resourceVersion:
                                    description: 'String that identifies the server''s internal
                                      version of this object that can be used by clients
                                      to determine when objects have changed. Value must
                                      be treated as opaque by clients and passed unmodified
                                      back to the server. Populated by the system. Read-only.
                                      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  selfLink:
                                    description: selfLink is a URL representing this object.
                                      Populated by the system. Read-only.
                                    type: string
                              reason:
                                description: A machine-readable description of why this
                                  operation is in the "Failure" status. If this value is
                                  empty there is no information available. A Reason clarifies
                                  an HTTP status code but does not override it.
                                type: string
                              status:
                                description: 'Status of the operation. One of: "Success"
                                  or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                type: string
                        required:
                        - pending
                      labels:
                        description: 'Map of string keys and values that can be used to
                          organize and categorize (scope and select) objects. May match
                          selectors of replication controllers and services. More info:
                          http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required
                          when creating resources, although some resources may allow a client
                          to request the generation of an appropriate name automatically.
                          Name is primarily intended for creation idempotence and configuration
                          definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: |-
                          Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
      
                          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                        type: string
                      ownerReferences:
                        description: List of objects depended by this object. If ALL objects
                          in the list have been deleted, this object will be garbage collected.
                          If this object is managed by a controller, then an entry in this
                          list will point to this controller, with the controller field
                          set to true. There cannot be more than one managing controller.
                        items:
                          description: OwnerReference contains enough information to let
                            you identify an owning object. Currently, an owning object must
                            be in the same namespace, so there is no namespace field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: If true, AND if the owner has the "foregroundDeletion"
                                finalizer, then the owner cannot be deleted from the key-value
                                store until this reference is removed. Defaults to false.
                                To set this field, a user needs "delete" permission of the
                                owner, otherwise 422 (Unprocessable Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing
                                controller.
                              type: boolean
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                        type: array
                      resourceVersion:
                        description: |-
                          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
      
                          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object. Populated
                          by the system. Read-only.
                        type: string
                      uid:
                        description: |-
                          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
      
                          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                        type: string
                  replicas:
                    description: Size is the expected size of the alertmanager cluster.
                      The controller will eventually make the size of the running cluster
                      equal to the expected size.
                    format: int32
                    type: integer
                  resources:
                    description: ResourceRequirements describes the compute resource requirements.
                    properties:
                      limits:
                        description: 'Limits describes the maximum amount of compute resources
                          allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        description: 'Requests describes the minimum amount of compute resources
                          required. If Requests is omitted for a container, it defaults
                          to Limits if that is explicitly specified, otherwise to an implementation-defined
                          value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                  routePrefix:
                    description: The route prefix Alertmanager registers HTTP handlers for.
                      This is useful, if using ExternalURL and a proxy is rewriting HTTP
                      routes of a request, and the actual ExternalURL is still true, but
                      the server serves requests under a different route prefix. For example
                      for use with `kubectl proxy`.
                    type: string
                  secrets:
                    description: Secrets is a list of Secrets in the same namespace as the
                      Alertmanager object, which shall be mounted into the Alertmanager
                      Pods. The Secrets are mounted into /etc/alertmanager/secrets/<secret-name>.
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: PodSecurityContext holds pod-level security attributes
                      and common container settings. Some fields are also present in container.securityContext.  Field
                      values of container.securityContext take precedence over field values
                      of PodSecurityContext.
                    properties:
                      fsGroup:
                        description: |-
                          A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
      
                          1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
      
                          If unset, the Kubelet will not modify the ownership and permissions of any volume.
                        format: int64
                        type: integer
                      runAsGroup:
                        description: The GID to run the entrypoint of the container process.
                          Uses runtime default if unset. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail to start
                          the container if it does. If unset or false, no such validation
                          will be performed. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value specified
                          in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container process.
                          Defaults to user specified in image metadata if unspecified. May
                          also be set in SecurityContext.  If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: SELinuxOptions are the labels to be applied to the
                          container
                        properties:
                          level:
                            description: Level is SELinux level label that applies to the
                              container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies to the
                              container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies to the
                              container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies to the
                              container.
                            type: string
                      supplementalGroups:
                        description: A list of groups applied to the first process run in
                          each container, in addition to the container's primary GID.  If
                          unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used for
                          the pod. Pods with unsupported sysctls (by the container runtime)
                          might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                        type: array
                  serviceAccountName:
                    description: ServiceAccountName is the name of the ServiceAccount to
                      use to run the Prometheus Pods.
                    type: string
                  storage:
                    description: StorageSpec defines the configured storage for a group
                      Prometheus servers.
                    properties:
                      class:
                        description: 'Name of the StorageClass to use when requesting storage
                          provisioning. More info: https://kubernetes.io/docs/user-guide/persistent-volumes/#storageclasses
                          DEPRECATED'
                        type: string
                      emptyDir:
                        description: Represents an empty directory for a pod. Empty directory
                          volumes support ownership management and SELinux relabeling.
                        properties:
                          medium:
                            description: 'What type of storage medium should back this directory.
                              The default is "" which means to use the node''s default medium.
                              Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit: {}
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                      selector:
                        description: A label selector is a label query over a set of resources.
                          The result of matchLabels and matchExpressions are ANDed. An empty
                          label selector matches all objects. A null label selector matches
                          no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements.
                              The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that
                                contains values, a key, and an operator that relates the
                                key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies
                                    to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn, Exists
                                    and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the
                                    operator is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the values
                                    array must be empty. This array is replaced during a
                                    strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                            type: array
                          matchLabels:
                            description: matchLabels is a map of {key,value} pairs. A single
                              {key,value} in the matchLabels map is equivalent to an element
                                           of matchExpressions, whose key field is "key", the operator
                                           is "In", and the values array contains only "value". The requirements
                                           are ANDed.
                            type: object
                      volumeClaimTemplate:
                        description: PersistentVolumeClaim is a user's request for and claim
                          to a persistent volume
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this
                              representation of an object. Servers should convert recognized
                              schemas to the latest internal value, and may reject unrecognized
                              values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST resource
                              this object represents. Servers may infer this from the endpoint
                              the client submits requests to. Cannot be updated. In CamelCase.
                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: ObjectMeta is metadata that all persisted resources
                              must have, which includes all objects users must create.
                            properties:
                              annotations:
                                description: 'Annotations is an unstructured key value map
                                  stored with a resource that may be set by external tools
                                  to store and retrieve arbitrary metadata. They are not
                                  queryable and should be preserved when modifying objects.
                                  More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              clusterName:
                                description: The name of the cluster which the object belongs
                                  to. This is used to distinguish resources with same name
                                  and namespace in different clusters. This field is not
                                  set anywhere right now and apiserver is going to ignore
                                  it if set in create or update request.
                                type: string
                              creationTimestamp:
                                description: Time is a wrapper around time.Time which supports
                                  correct marshaling to YAML and JSON.  Wrappers are provided
                                  for many of the factory methods that the time package
                                  offers.
                                format: date-time
                                type: string
                              deletionGracePeriodSeconds:
                                description: Number of seconds allowed for this object to
                                  gracefully terminate before it will be removed from the
                                  system. Only set when deletionTimestamp is also set. May
                                  only be shortened. Read-only.
                                format: int64
                                type: integer
                              deletionTimestamp:
                                description: Time is a wrapper around time.Time which supports
                                  correct marshaling to YAML and JSON.  Wrappers are provided
                                  for many of the factory methods that the time package
                                  offers.
                                format: date-time
                                type: string
                              finalizers:
                                description: Must be empty before the object is deleted
                                  from the registry. Each entry is an identifier for the
                                  responsible component that will remove the entry from
                                  the list. If the deletionTimestamp of the object is non-nil,
                                  entries in this list can only be removed.
                                items:
                                  type: string
                                type: array
                              generateName:
                                description: |-
                                  GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
      
                                  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
      
                                  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                                type: string
                              generation:
                                description: A sequence number representing a specific generation
                                  of the desired state. Populated by the system. Read-only.
                                format: int64
                                type: integer
                              initializers:
                                description: Initializers tracks the progress of initialization.
                                properties:
                                  pending:
                                    description: Pending is a list of initializers that
                                      must execute in order before this object is visible.
                                      When the last pending initializer is removed, and
                                      no failing result is set, the initializers struct
                                      will be set to nil and the object is considered as
                                      initialized and visible to all clients.
                                    items:
                                      description: Initializer is information about an initializer
                                        that has not yet completed.
                                      properties:
                                        name:
                                          description: name of the process that is responsible
                                            for initializing this object.
                                          type: string
                                      required:
                                      - name
                                    type: array
                                  result:
                                    description: Status is a return value for calls that
                                      don't return other objects.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned schema
                                          of this representation of an object. Servers should
                                          convert recognized schemas to the latest internal
                                          value, and may reject unrecognized values. More
                                          info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                        type: string
                                      code:
                                        description: Suggested HTTP return code for this
                                          status, 0 if not set.
                                        format: int32
                                        type: integer
                                      details:
                                        description: StatusDetails is a set of additional
                                          properties that MAY be set by the server to provide
                                          additional information about a response. The Reason
                                          field of a Status object defines what attributes
                                          will be set. Clients must ignore fields that do
                                          not match the defined type of each attribute,
                                          and should assume that any attribute may be empty,
                                          invalid, or under defined.
                                        properties:
                                          causes:
                                            description: The Causes array includes more
                                              details associated with the StatusReason failure.
                                              Not all StatusReasons may provide detailed
                                              causes.
                                            items:
                                              description: StatusCause provides more information
                                                about an api.Status failure, including cases
                                                when multiple errors are encountered.
                                              properties:
                                                field:
                                                  description: |-
                                                    The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
      
                                                    Examples:
                                                      "name" - the field "name" on the current resource
                                                      "items[0].name" - the field "name" on the first array entry in "items"
                                                  type: string
                                                message:
                                                  description: A human-readable description
                                                    of the cause of the error.  This field
                                                    may be presented as-is to a reader.
                                                  type: string
                                                reason:
                                                  description: A machine-readable description
                                                    of the cause of the error. If this value
                                                    is empty there is no information available.
                                                  type: string
                                            type: array
                                          group:
                                            description: The group attribute of the resource
                                              associated with the status StatusReason.
                                            type: string
                                          kind:
                                            description: 'The kind attribute of the resource
                                              associated with the status StatusReason. On
                                              some operations may differ from the requested
                                              resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                            type: string
                                          name:
                                            description: The name attribute of the resource
                                              associated with the status StatusReason (when
                                              there is a single name which can be described).
                                            type: string
                                          retryAfterSeconds:
                                            description: If specified, the time in seconds
                                              before the operation should be retried. Some
                                              errors may indicate the client must take an
                                              alternate action - for those errors this field
                                              may indicate how long to wait before taking
                                              the alternate action.
                                            format: int32
                                            type: integer
                                          uid:
                                            description: 'UID of the resource. (when there
                                              is a single resource which can be described).
                                              More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                            type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents. Servers
                                          may infer this from the endpoint the client submits
                                          requests to. Cannot be updated. In CamelCase.
                                          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                        type: string
                                      message:
                                        description: A human-readable description of the
                                          status of this operation.
                                        type: string
                                      metadata:
                                        description: ListMeta describes metadata that synthetic
                                                       resources must have, including lists and various
                                                       status objects. A resource may have only one of
                                          {ObjectMeta, ListMeta}.
                                        properties:
                                          continue:
                                            description: continue may be set if the user
                                              set a limit on the number of items returned,
                                              and indicates that the server has more data
                                              available. The value is opaque and may be
                                              used to issue another request to the endpoint
                                              that served this list to retrieve the next
                                              set of available objects. Continuing a list
                                              may not be possible if the server configuration
                                              has changed or more than a few minutes have
                                              passed. The resourceVersion field returned
                                              when using this continue value will be identical
                                              to the value in the first response.
                                            type: string
                                          resourceVersion:
                                            description: 'String that identifies the server''s
                                              internal version of this object that can be
                                              used by clients to determine when objects
                                              have changed. Value must be treated as opaque
                                              by clients and passed unmodified back to the
                                              server. Populated by the system. Read-only.
                                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                            type: string
                                          selfLink:
                                            description: selfLink is a URL representing
                                              this object. Populated by the system. Read-only.
                                            type: string
                                      reason:
                                        description: A machine-readable description of why
                                          this operation is in the "Failure" status. If
                                          this value is empty there is no information available.
                                          A Reason clarifies an HTTP status code but does
                                          not override it.
                                        type: string
                                      status:
                                        description: 'Status of the operation. One of: "Success"
                                          or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                        type: string
                                required:
                                - pending
                              labels:
                                description: 'Map of string keys and values that can be
                                  used to organize and categorize (scope and select) objects.
                                  May match selectors of replication controllers and services.
                                  More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace. Is
                                  required when creating resources, although some resources
                                  may allow a client to request the generation of an appropriate
                                  name automatically. Name is primarily intended for creation
                                  idempotence and configuration definition. Cannot be updated.
                                  More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: |-
                                  Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
      
                                  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                                type: string
                              ownerReferences:
                                description: List of objects depended by this object. If
                                  ALL objects in the list have been deleted, this object
                                  will be garbage collected. If this object is managed by
                                  a controller, then an entry in this list will point to
                                  this controller, with the controller field set to true.
                                  There cannot be more than one managing controller.
                                items:
                                  description: OwnerReference contains enough information
                                    to let you identify an owning object. Currently, an
                                    owning object must be in the same namespace, so there
                                    is no namespace field.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    blockOwnerDeletion:
                                      description: If true, AND if the owner has the "foregroundDeletion"
                                                     finalizer, then the owner cannot be deleted from
                                                     the key-value store until this reference is removed.
                                                     Defaults to false. To set this field, a user needs
                                                     "delete" permission of the owner, otherwise 422
                                                     (Unprocessable Entity) will be returned.
                                      type: boolean
                                    controller:
                                      description: If true, this reference points to the
                                        managing controller.
                                      type: boolean
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                  required:
                                  - apiVersion
                                  - kind
                                  - name
                                  - uid
                                type: array
                              resourceVersion:
                                description: |-
                                  An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
      
                                  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              selfLink:
                                description: SelfLink is a URL representing this object.
                                  Populated by the system. Read-only.
                                type: string
                              uid:
                                description: |-
                                  UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
      
                                  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                                type: string
                          spec:
                            description: PersistentVolumeClaimSpec describes the common
                              attributes of storage devices and allows a Source for provider-specific
                              attributes
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access modes
                                  the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount of
                                      compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is omitted
                                      for a container, it defaults to Limits if that is
                                      explicitly specified, otherwise to an implementation-defined
                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                              selector:
                                description: A label selector is a label query over a set
                                  of resources. The result of matchLabels and matchExpressions
                                  are ANDed. An empty label selector matches all objects.
                                  A null label selector matches no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector
                                      requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector
                                        that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship
                                            to a set of values. Valid operators are In,
                                            NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values.
                                            If the operator is In or NotIn, the values array
                                            must be non-empty. If the operator is Exists
                                            or DoesNotExist, the values array must be empty.
                                            This array is replaced during a strategic merge
                                            patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels map is equivalent
                                      to an element of matchExpressions, whose key field
                                      is "key", the operator is "In", and the values array
                                      contains only "value". The requirements are ANDed.
                                    type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by the claim.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume is required
                                  by the claim. Value of Filesystem is implied when not
                                  included in claim spec. This is an alpha feature and may
                                  change in the future.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to the
                                  PersistentVolume backing this claim.
                                type: string
                          status:
                            description: PersistentVolumeClaimStatus is the current status
                              of a persistent volume claim.
                            properties:
                              accessModes:
                                description: 'AccessModes contains the actual access modes
                                  the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              capacity:
                                description: Represents the actual resources of the underlying
                                  volume.
                                type: object
                              conditions:
                                description: Current Condition of persistent volume claim.
                                  If underlying persistent volume is being resized then
                                  the Condition will be set to 'ResizeStarted'.
                                items:
                                  description: PersistentVolumeClaimCondition contails details
                                    about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: Time is a wrapper around time.Time which
                                        supports correct marshaling to YAML and JSON.  Wrappers
                                        are provided for many of the factory methods that
                                        the time package offers.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: Time is a wrapper around time.Time which
                                        supports correct marshaling to YAML and JSON.  Wrappers
                                        are provided for many of the factory methods that
                                        the time package offers.
                                      format: date-time
                                      type: string
                                    message:
                                      description: Human-readable message indicating details
                                        about last transition.
                                      type: string
                                    reason:
                                      description: Unique, this should be a short, machine
                                        understandable string that gives the reason for
                                        condition's last transition. If it reports "ResizeStarted"
                                        that means the underlying persistent volume is being
                                        resized.
                                      type: string
                                    status:
                                      type: string
                                    type:
                                      type: string
                                  required:
                                  - type
                                  - status
                                type: array
                              phase:
                                description: Phase represents the current phase of PersistentVolumeClaim.
                                type: string
                  tag:
                    description: Tag of Alertmanager container image to be deployed. Defaults
                      to the value of `version`.
                    type: string
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates any
                        taint that matches the triple <key,value,effect> using the matching
                        operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match. Empty
                            means match all taint effects. When specified, allowed values
                            are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty, operator
                            must be Exists; this combination means to match all values and
                            all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal. Exists
                            is equivalent to wildcard for value, so that a pod can tolerate
                            all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of time the
                            toleration (which must be of effect NoExecute, otherwise this
                            field is ignored) tolerates the taint. By default, it is not
                            set, which means tolerate the taint forever (do not evict).
                            Zero and negative values will be treated as 0 (evict immediately)
                            by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise
                            just a regular string.
                          type: string
                    type: array
                  version:
                    description: Version the cluster should be on.
                    type: string
              status:
                description: 'Most recent observed status of the Alertmanager cluster. Read-only.
                  Not included when requesting from the apiserver, only from the Prometheus
                  Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least minReadySeconds)
                      targeted by this Alertmanager cluster.
                    format: int32
                    type: integer
                  paused:
                    description: Represents whether any actions on the underlaying managed
                      objects are being performed. Only delete actions will be performed.
                    type: boolean
                  replicas:
                    description: Total number of non-terminated pods targeted by this Alertmanager
                      cluster (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this Alertmanager
                      cluster.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this Alertmanager
                      cluster that have the desired version spec.
                    format: int32
                    type: integer
                required:
                - paused
                - replicas
                - updatedReplicas
                - availableReplicas
                - unavailableReplicas
        version: v1
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: kafkas.kafka.strimzi.io
        labels:
          app: strimzi
      spec:
        group: kafka.strimzi.io
        version: v1alpha1
        scope: Namespaced
        names:
          kind: Kafka
          listKind: KafkaList
          singular: kafka
          plural: kafkas
        validation:
          openAPIV3Schema:
            properties:
              spec:
                type: object
                properties:
                  kafka:
                    type: object
                    properties:
                      replicas:
                        type: integer
                        minimum: 1
                      image:
                        type: string
                      storage:
                        type: object
                        properties:
                          class:
                            type: string
                          deleteClaim:
                            type: boolean
                          selector:
                            type: object
                          size:
                            type: string
                          type:
                            type: string
                      listeners:
                        type: object
                        properties:
                          plain:
                            type: object
                            properties: {}
                          tls:
                            type: object
                            properties:
                              authentication:
                                type: object
                                properties:
                                  type:
                                    type: string
                      authorization:
                        type: object
                        properties:
                          superUsers:
                            type: array
                            items:
                              type: string
                          type:
                            type: string
                      config:
                        type: object
                      rack:
                        type: object
                        properties:
                          topologyKey:
                            type: string
                            example: failure-domain.beta.kubernetes.io/zone
                        required:
                        - topologyKey
                      brokerRackInitImage:
                        type: string
                      affinity:
                        type: object
                        properties:
                          nodeAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    preference:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: object
                                properties:
                                  nodeSelectorTerms:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                          podAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                          podAntiAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                      tolerations:
                        type: array
                        items:
                          type: object
                          properties:
                            effect:
                              type: string
                            key:
                              type: string
                            operator:
                              type: string
                            tolerationSeconds:
                              type: integer
                            value:
                              type: string
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                          timeoutSeconds:
                            type: integer
                            minimum: 0
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                          timeoutSeconds:
                            type: integer
                            minimum: 0
                      jvmOptions:
                        type: object
                        properties:
                          -XX:
                            type: object
                          -Xms:
                            type: string
                            pattern: '[0-9]+[mMgG]?'
                          -Xmx:
                            type: string
                            pattern: '[0-9]+[mMgG]?'
                      resources:
                        type: object
                        properties:
                          limits:
                            type: object
                            properties:
                              cpu:
                                type: string
                                pattern: '[0-9]+m?$'
                              memory:
                                type: string
                                pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                          requests:
                            type: object
                            properties:
                              cpu:
                                type: string
                                pattern: '[0-9]+m?$'
                              memory:
                                type: string
                                pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                      metrics:
                        type: object
                      logging:
                        type: object
                        properties:
                          loggers:
                            type: object
                          name:
                            type: string
                          type:
                            type: string
                      tlsSidecar:
                        type: object
                        properties:
                          image:
                            type: string
                          resources:
                            type: object
                            properties:
                              limits:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                              requests:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                    required:
                    - replicas
                    - storage
                    - listeners
                  zookeeper:
                    type: object
                    properties:
                      replicas:
                        type: integer
                        minimum: 1
                      image:
                        type: string
                      storage:
                        type: object
                        properties:
                          class:
                            type: string
                          deleteClaim:
                            type: boolean
                          selector:
                            type: object
                          size:
                            type: string
                          type:
                            type: string
                      config:
                        type: object
                      affinity:
                        type: object
                        properties:
                          nodeAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    preference:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: object
                                properties:
                                  nodeSelectorTerms:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                          podAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                          podAntiAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                      tolerations:
                        type: array
                        items:
                          type: object
                          properties:
                            effect:
                              type: string
                            key:
                              type: string
                            operator:
                              type: string
                            tolerationSeconds:
                              type: integer
                            value:
                              type: string
                      livenessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                          timeoutSeconds:
                            type: integer
                            minimum: 0
                      readinessProbe:
                        type: object
                        properties:
                          initialDelaySeconds:
                            type: integer
                            minimum: 0
                          timeoutSeconds:
                            type: integer
                            minimum: 0
                      jvmOptions:
                        type: object
                        properties:
                          -XX:
                            type: object
                          -Xms:
                            type: string
                            pattern: '[0-9]+[mMgG]?'
                          -Xmx:
                            type: string
                            pattern: '[0-9]+[mMgG]?'
                      resources:
                        type: object
                        properties:
                          limits:
                            type: object
                            properties:
                              cpu:
                                type: string
                                pattern: '[0-9]+m?$'
                              memory:
                                type: string
                                pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                          requests:
                            type: object
                            properties:
                              cpu:
                                type: string
                                pattern: '[0-9]+m?$'
                              memory:
                                type: string
                                pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                      metrics:
                        type: object
                      logging:
                        type: object
                        properties:
                          loggers:
                            type: object
                          name:
                            type: string
                          type:
                            type: string
                      tlsSidecar:
                        type: object
                        properties:
                          image:
                            type: string
                          resources:
                            type: object
                            properties:
                              limits:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                              requests:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                    required:
                    - replicas
                    - storage
                  topicOperator:
                    type: object
                    properties:
                      watchedNamespace:
                        type: string
                      image:
                        type: string
                      reconciliationIntervalSeconds:
                        type: integer
                        minimum: 0
                      zookeeperSessionTimeoutSeconds:
                        type: integer
                        minimum: 0
                      affinity:
                        type: object
                        properties:
                          nodeAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    preference:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: object
                                properties:
                                  nodeSelectorTerms:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                          podAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                          podAntiAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                      resources:
                        type: object
                        properties:
                          limits:
                            type: object
                            properties:
                              cpu:
                                type: string
                                pattern: '[0-9]+m?$'
                              memory:
                                type: string
                                pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                          requests:
                            type: object
                            properties:
                              cpu:
                                type: string
                                pattern: '[0-9]+m?$'
                              memory:
                                type: string
                                pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                      topicMetadataMaxAttempts:
                        type: integer
                        minimum: 0
                      tlsSidecar:
                        type: object
                        properties:
                          image:
                            type: string
                          resources:
                            type: object
                            properties:
                              limits:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                              requests:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                      logging:
                        type: object
                        properties:
                          loggers:
                            type: object
                          name:
                            type: string
                          type:
                            type: string
                  entityOperator:
                    type: object
                    properties:
                      topicOperator:
                        type: object
                        properties:
                          watchedNamespace:
                            type: string
                          image:
                            type: string
                          reconciliationIntervalSeconds:
                            type: integer
                            minimum: 0
                          zookeeperSessionTimeoutSeconds:
                            type: integer
                            minimum: 0
                          resources:
                            type: object
                            properties:
                              limits:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                              requests:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                          topicMetadataMaxAttempts:
                            type: integer
                            minimum: 0
                          logging:
                            type: object
                            properties:
                              loggers:
                                type: object
                              name:
                                type: string
                              type:
                                type: string
                      userOperator:
                        type: object
                        properties:
                          watchedNamespace:
                            type: string
                          image:
                            type: string
                          reconciliationIntervalSeconds:
                            type: integer
                            minimum: 0
                          zookeeperSessionTimeoutSeconds:
                            type: integer
                            minimum: 0
                          resources:
                            type: object
                            properties:
                              limits:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                              requests:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                          logging:
                            type: object
                            properties:
                              loggers:
                                type: object
                              name:
                                type: string
                              type:
                                type: string
                      affinity:
                        type: object
                        properties:
                          nodeAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    preference:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: object
                                properties:
                                  nodeSelectorTerms:
                                    type: array
                                    items:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                          podAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                          podAntiAffinity:
                            type: object
                            properties:
                              preferredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    podAffinityTerm:
                                      type: object
                                      properties:
                                        labelSelector:
                                          type: object
                                          properties:
                                            matchExpressions:
                                              type: array
                                              items:
                                                type: object
                                                properties:
                                                  key:
                                                    type: string
                                                  operator:
                                                    type: string
                                                  values:
                                                    type: array
                                                    items:
                                                      type: string
                                            matchLabels:
                                              type: object
                                        namespaces:
                                          type: array
                                          items:
                                            type: string
                                        topologyKey:
                                          type: string
                                    weight:
                                      type: integer
                              requiredDuringSchedulingIgnoredDuringExecution:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                      tolerations:
                        type: array
                        items:
                          type: object
                          properties:
                            effect:
                              type: string
                            key:
                              type: string
                            operator:
                              type: string
                            tolerationSeconds:
                              type: integer
                            value:
                              type: string
                      tlsSidecar:
                        type: object
                        properties:
                          image:
                            type: string
                          resources:
                            type: object
                            properties:
                              limits:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                              requests:
                                type: object
                                properties:
                                  cpu:
                                    type: string
                                    pattern: '[0-9]+m?$'
                                  memory:
                                    type: string
                                    pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                required:
                - kafka
                - zookeeper
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: kafkaconnects.kafka.strimzi.io
        labels:
          app: strimzi
      spec:
        group: kafka.strimzi.io
        version: v1alpha1
        scope: Namespaced
        names:
          kind: KafkaConnect
          listKind: KafkaConnectList
          singular: kafkaconnect
          plural: kafkaconnects
        validation:
          openAPIV3Schema:
            properties:
              spec:
                type: object
                properties:
                  replicas:
                    type: integer
                  image:
                    type: string
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                      timeoutSeconds:
                        type: integer
                        minimum: 0
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                      timeoutSeconds:
                        type: integer
                        minimum: 0
                  jvmOptions:
                    type: object
                    properties:
                      -XX:
                        type: object
                      -Xms:
                        type: string
                        pattern: '[0-9]+[mMgG]?'
                      -Xmx:
                        type: string
                        pattern: '[0-9]+[mMgG]?'
                  affinity:
                    type: object
                    properties:
                      nodeAffinity:
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                preference:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                weight:
                                  type: integer
                          requiredDuringSchedulingIgnoredDuringExecution:
                            type: object
                            properties:
                              nodeSelectorTerms:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                      podAffinity:
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                podAffinityTerm:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                                weight:
                                  type: integer
                          requiredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      type: object
                                namespaces:
                                  type: array
                                  items:
                                    type: string
                                topologyKey:
                                  type: string
                      podAntiAffinity:
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                podAffinityTerm:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                                weight:
                                  type: integer
                          requiredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      type: object
                                namespaces:
                                  type: array
                                  items:
                                    type: string
                                topologyKey:
                                  type: string
                  tolerations:
                    type: array
                    items:
                      type: object
                      properties:
                        effect:
                          type: string
                        key:
                          type: string
                        operator:
                          type: string
                        tolerationSeconds:
                          type: integer
                        value:
                          type: string
                  logging:
                    type: object
                    properties:
                      loggers:
                        type: object
                      name:
                        type: string
                      type:
                        type: string
                  metrics:
                    type: object
                  authentication:
                    type: object
                    properties:
                      certificateAndKey:
                        type: object
                        properties:
                          certificate:
                            type: string
                          key:
                            type: string
                          secretName:
                            type: string
                        required:
                        - certificate
                        - key
                        - secretName
                      type:
                        type: string
                    required:
                    - certificateAndKey
                  bootstrapServers:
                    type: string
                  config:
                    type: object
                  resources:
                    type: object
                    properties:
                      limits:
                        type: object
                        properties:
                          cpu:
                            type: string
                            pattern: '[0-9]+m?$'
                          memory:
                            type: string
                            pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                      requests:
                        type: object
                        properties:
                          cpu:
                            type: string
                            pattern: '[0-9]+m?$'
                          memory:
                            type: string
                            pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                  tls:
                    type: object
                    properties:
                      trustedCertificates:
                        type: array
                        items:
                          type: object
                          properties:
                            certificate:
                              type: string
                            secretName:
                              type: string
                          required:
                          - certificate
                          - secretName
                    required:
                    - trustedCertificates
                required:
                - bootstrapServers
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: kafkaconnects2is.kafka.strimzi.io
        labels:
          app: strimzi
      spec:
        group: kafka.strimzi.io
        version: v1alpha1
        scope: Namespaced
        names:
          kind: KafkaConnectS2I
          listKind: KafkaConnectS2IList
          singular: kafkaconnects2i
          plural: kafkaconnects2is
        validation:
          openAPIV3Schema:
            properties:
              spec:
                type: object
                properties:
                  replicas:
                    type: integer
                  image:
                    type: string
                  livenessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                      timeoutSeconds:
                        type: integer
                        minimum: 0
                  readinessProbe:
                    type: object
                    properties:
                      initialDelaySeconds:
                        type: integer
                        minimum: 0
                      timeoutSeconds:
                        type: integer
                        minimum: 0
                  jvmOptions:
                    type: object
                    properties:
                      -XX:
                        type: object
                      -Xms:
                        type: string
                        pattern: '[0-9]+[mMgG]?'
                      -Xmx:
                        type: string
                        pattern: '[0-9]+[mMgG]?'
                  affinity:
                    type: object
                    properties:
                      nodeAffinity:
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                preference:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                weight:
                                  type: integer
                          requiredDuringSchedulingIgnoredDuringExecution:
                            type: object
                            properties:
                              nodeSelectorTerms:
                                type: array
                                items:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                      podAffinity:
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                podAffinityTerm:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                                weight:
                                  type: integer
                          requiredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      type: object
                                namespaces:
                                  type: array
                                  items:
                                    type: string
                                topologyKey:
                                  type: string
                      podAntiAffinity:
                        type: object
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                podAffinityTerm:
                                  type: object
                                  properties:
                                    labelSelector:
                                      type: object
                                      properties:
                                        matchExpressions:
                                          type: array
                                          items:
                                            type: object
                                            properties:
                                              key:
                                                type: string
                                              operator:
                                                type: string
                                              values:
                                                type: array
                                                items:
                                                  type: string
                                        matchLabels:
                                          type: object
                                    namespaces:
                                      type: array
                                      items:
                                        type: string
                                    topologyKey:
                                      type: string
                                weight:
                                  type: integer
                          requiredDuringSchedulingIgnoredDuringExecution:
                            type: array
                            items:
                              type: object
                              properties:
                                labelSelector:
                                  type: object
                                  properties:
                                    matchExpressions:
                                      type: array
                                      items:
                                        type: object
                                        properties:
                                          key:
                                            type: string
                                          operator:
                                            type: string
                                          values:
                                            type: array
                                            items:
                                              type: string
                                    matchLabels:
                                      type: object
                                namespaces:
                                  type: array
                                  items:
                                    type: string
                                topologyKey:
                                  type: string
                  metrics:
                    type: object
                  authentication:
                    type: object
                    properties:
                      certificateAndKey:
                        type: object
                        properties:
                          certificate:
                            type: string
                          key:
                            type: string
                          secretName:
                            type: string
                        required:
                        - certificate
                        - key
                        - secretName
                      type:
                        type: string
                    required:
                    - certificateAndKey
                  bootstrapServers:
                    type: string
                  config:
                    type: object
                  insecureSourceRepository:
                    type: boolean
                  logging:
                    type: object
                    properties:
                      loggers:
                        type: object
                      name:
                        type: string
                      type:
                        type: string
                  resources:
                    type: object
                    properties:
                      limits:
                        type: object
                        properties:
                          cpu:
                            type: string
                            pattern: '[0-9]+m?$'
                          memory:
                            type: string
                            pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                      requests:
                        type: object
                        properties:
                          cpu:
                            type: string
                            pattern: '[0-9]+m?$'
                          memory:
                            type: string
                            pattern: '[0-9]+([kKmMgGtTpPeE]i?)?$'
                  tls:
                    type: object
                    properties:
                      trustedCertificates:
                        type: array
                        items:
                          type: object
                          properties:
                            certificate:
                              type: string
                            secretName:
                              type: string
                          required:
                          - certificate
                          - secretName
                    required:
                    - trustedCertificates
                  tolerations:
                    type: array
                    items:
                      type: object
                      properties:
                        effect:
                          type: string
                        key:
                          type: string
                        operator:
                          type: string
                        tolerationSeconds:
                          type: integer
                        value:
                          type: string
                required:
                - bootstrapServers
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: kafkatopics.kafka.strimzi.io
        labels:
          app: strimzi
      spec:
        group: kafka.strimzi.io
        version: v1alpha1
        scope: Namespaced
        names:
          kind: KafkaTopic
          listKind: KafkaTopicList
          singular: kafkatopic
          plural: kafkatopics
          shortNames:
          - kt
        validation:
          openAPIV3Schema:
            properties:
              spec:
                type: object
                properties:
                  partitions:
                    type: integer
                    minimum: 1
                  replicas:
                    type: integer
                    minimum: 1
                    maximum: 32767
                  config:
                    type: object
                  topicName:
                    type: string
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: kafkausers.kafka.strimzi.io
        labels:
          app: strimzi
      spec:
        group: kafka.strimzi.io
        version: v1alpha1
        scope: Namespaced
        names:
          kind: KafkaUser
          listKind: KafkaUserList
          singular: kafkauser
          plural: kafkausers
          shortNames:
          - ku
        validation:
          openAPIV3Schema:
            properties:
              spec:
                type: object
                properties:
                  authentication:
                    type: object
                    properties:
                      type:
                        type: string
                  authorization:
                    type: object
                    properties:
                      acls:
                        type: array
                        items:
                          type: object
                          properties:
                            host:
                              type: string
                            operation:
                              type: string
                              enum:
                              - Read
                              - Write
                              - Create
                              - Delete
                              - Alter
                              - Describe
                              - ClusterAction
                              - AlterConfigs
                              - DescribeConfigs
                              - IdempotentWrite
                              - All
                            resource:
                              type: object
                              properties:
                                name:
                                  type: string
                                patternType:
                                  type: string
                                  enum:
                                  - literal
                                  - prefix
                                type:
                                  type: string
                            type:
                              type: string
                              enum:
                              - allow
                              - deny
                          required:
                          - operation
                          - resource
                      type:
                        type: string
                    required:
                    - acls
                required:
                - authentication
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: clusterloggings.logging.openshift.io
      spec:
        group: logging.openshift.io
        names:
          kind: ClusterLogging
          listKind: ClusterLoggingList
          plural: clusterloggings
          singular: clusterlogging
        scope: Namespaced
        version: v1alpha1
        validation:
          openAPIV3Schema:
            properties:
              spec:
                description: Specification of the desired behavior of the Logging cluster.
                properties:
                  visualization:
                    description: Specification of the Visualization component for the cluster
                    properties:
                      type:
                        description: The type of Visualization to configure
                        type: string
                      kibana:
                        description: Specification of the Kibana Visualization component
                        properties:
                          resources:
                            description: The resource requirements for Kibana
                            properties:
                              limits:
                                description: 'Limits describes the maximum amount of compute
                                  resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                              requests:
                                description: 'Requests describes the minimum amount of compute
                                  resources required. If Requests is omitted for a container,
                                  it defaults to Limits if that is explicitly specified, otherwise
                                  to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                          nodeSelector:
                            description: Define which Nodes the Pods are scheduled on.
                            type: object
                          replicas:
                            description: Number of instances to deploy for a Kibana deployment
                            format: int32
                            type: integer
                          proxySpec:
                            description: Specification of the Kibana Proxy component
                            properties:
                              resources:
                                description: The resource requirements for Kibana
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount of compute
                                      resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    description: 'Requests describes the minimum amount of compute
                                      resources required. If Requests is omitted for a container,
                                      it defaults to Limits if that is explicitly specified, otherwise
                                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                        required:
                        - replicas
                    required:
                    - type
                  logStore:
                    description: Specification of the Log Storage component for the cluster
                    properties:
                      type:
                        description: The type of Log Storage to configure
                        type: string
                      elasticsearch:
                        description: Specification of the Elasticsearch Log Store component
                        properties:
                          resources:
                            description: The resource requirements for Kibana
                            properties:
                              limits:
                                description: 'Limits describes the maximum amount of compute
                                  resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                              requests:
                                description: 'Requests describes the minimum amount of compute
                                  resources required. If Requests is omitted for a container,
                                  it defaults to Limits if that is explicitly specified, otherwise
                                  to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                          nodeSelector:
                            description: Define which Nodes the Pods are scheduled on.
                            type: object
                          replicas:
                            description: Number of nodes to deploy for Elasticsearch
                            format: int32
                            type: integer
                          storage:
                            description: 'The storage backing for Elasticsearch. More info: '
                            type: object
                        required:
                        - replicas
                        - storage
                    required:
                    - type
                  collection:
                    description: Specification of the Collection component for the cluster
                    properties:
                      logCollection:
                        description: Specification of Log Collection for the cluster
                        properties:
                          type:
                            description: The type of Log Collection to configure
                            type: string
                          fluentd:
                            description: Specification of the Fluentd Log Collection component
                            properties:
                              resources:
                                description: The resource requirements for Fluentd
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount of compute
                                      resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    description: 'Requests describes the minimum amount of compute
                                      resources required. If Requests is omitted for a container,
                                      it defaults to Limits if that is explicitly specified, otherwise
                                      to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                              nodeSelector:
                                description: Define which Nodes the Pods are scheduled on.
                                type: object
                        required:
                        - type
                      #eventCollection:
                      #normalizer:
                  curation:
                    description: Specification of the Curation component for the cluster
                    properties:
                      type:
                        description: The kind of curation to configure
                        type: string
                      curator:
                        description: The specification of curation to configure
                        properties:
                          resources:
                            description: The resource requirements for Curator
                            properties:
                              limits:
                                description: 'Limits describes the maximum amount of compute
                                  resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                              requests:
                                description: 'Requests describes the minimum amount of compute
                                  resources required. If Requests is omitted for a container,
                                  it defaults to Limits if that is explicitly specified, otherwise
                                  to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                          nodeSelector:
                            description: Define which Nodes the Pods are scheduled on.
                            type: object
                          schedule:
                            description: 'The cron schedule that the Curator job is run. Defaults to "30 3 * * *"'
                            type: string
                        required:
                        - schedule
                    required:
                    - type
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: deschedulers.descheduler.io
      spec:
        group: descheduler.io
        names:
          kind: Descheduler
          listKind: DeschedulerList
          plural: deschedulers
          singular: descheduler
        scope: Namespaced
        version: v1alpha1
        validation:
          openAPIV3Schema:
            properties:
              spec:
                strategies:
                  type: array
                  uniqueItems: true
                  minItems: 1
                  maxItems: 4
                  collectionFormat: pipes
                  items:
                    type: string
                schedule:
                  type: string
                  pattern: '^(\d+|\*)(/\d+)?(\s+(\d+|\*)(/\d+)?){4}$'
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: elasticsearches.logging.openshift.io
      spec:
        group: logging.openshift.io
        names:
          kind: Elasticsearch
          listKind: ElasticsearchList
          plural: elasticsearches
          singular: elasticsearch
        scope: Namespaced
        version: v1alpha1
        validation:
          openAPIV3Schema:
            properties:
              spec:
                description: Specification of the desired behavior of the Elasticsearch cluster
                properties:
                  nodes:
                    description: Specification of the different Elasticsearch nodes
                    properties:
                      roles:
                        description: The specific Elasticsearch cluster roles the node should perform
                        type: object
                      replicas:
                        description: Number of nodes to deploy
                        format: int32
                        type: integer
                      spec:
                        description: Specification of the Elasticsearch node
                        properties:
                          image:
                            description: The image to use for the Elasticsearch node
                            type: string
                          resources:
                            description: The resource requirements for the Elasticsearch node
                            properties:
                              limits:
                                description: 'Limits describes the maximum amount of compute
                                  resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                              requests:
                                description: 'Requests describes the minimum amount of compute
                                  resources required. If Requests is omitted for a container,
                                  it defaults to Limits if that is explicitly specified, otherwise
                                  to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                type: object
                      nodeSelector:
                        description: Define which Nodes the Pods are scheduled on.
                        type: object
                      storage:
                        description: The type of backing storage that should be used for the node
                        properties:
                          hostPath:
                            description: Use host node storage
                            type: object
                          emptyDir:
                            description: Use ephemeral storage
                            type: object
                          volumeClaimTemplate:
                            description: 'Volume claims that act similarly to the VolumeClaimTemplates
                              field of StatefulSets. A number of PVCs will be generated based on the number of
                              node replicas'
                            type: object
                          persistentVolumeClaim:
                            description: Use a specifically named Persistent Volume Claim
                            type: object
                  nodeSpec:
                    description: Specification to be applied to all the Elasticsearch nodes
                    properties:
                      image:
                        description: The image to use for the Elasticsearch nodes
                        type: string
                      resources:
                        description: The resource requirements for the Elasticsearch nodes
                        properties:
                          limits:
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                  serviceAccountName:
                    description: The service account for the Elasticsearch nodes in this cluster
                    type: string
                  configMapName:
                    description: The configmap for the Elasticsearch nodes in this cluster
                    type: string
                  secretName:
                    description: The secret for the Elasticsearch nodes in this cluster
                    type: string
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: etcdbackups.etcd.database.coreos.com
      spec:
        group: etcd.database.coreos.com
        version: v1beta2
        scope: Namespaced
        names:
          kind: EtcdBackup
          listKind: EtcdBackupList
          plural: etcdbackups
          singular: etcdbackup
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: etcdclusters.etcd.database.coreos.com
      spec:
        group: etcd.database.coreos.com
        version: v1beta2
        scope: Namespaced
        names:
          plural: etcdclusters
          singular: etcdcluster
          kind: EtcdCluster
          listKind: EtcdClusterList
          shortNames:
            - etcdclus
            - etcd
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: etcdrestores.etcd.database.coreos.com
      spec:
        group: etcd.database.coreos.com
        version: v1beta2
        scope: Namespaced
        names:
          kind: EtcdRestore
          listKind: EtcdRestoreList
          plural: etcdrestores
          singular: etcdrestore
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: ""
          kubebuilder.k8s.io: 0.1.10
        name: clusters.clusterregistry.k8s.io
      spec:
        group: clusterregistry.k8s.io
        names:
          kind: Cluster
          plural: clusters
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  authInfo:
                    properties:
                      controller:
                        properties:
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                      user:
                        properties:
                          kind:
                            type: string
                          name:
                            type: string
                          namespace:
                            type: string
                        type: object
                    type: object
                  kubernetesApiEndpoints:
                    properties:
                      caBundle:
                        items:
                          type: byte
                        type: string
                      serverEndpoints:
                        items:
                          properties:
                            clientCIDR:
                              type: string
                            serverAddress:
                              type: string
                          type: object
                        type: array
                    type: object
                type: object
              status:
                properties:
                  conditions:
                    items:
                      properties:
                        lastHeartbeatTime:
                          format: date-time
                          type: string
                        lastTransitionTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        reason:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      type: object
                    type: array
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: dnsendpoints.multiclusterdns.federation.k8s.io
      spec:
        group: multiclusterdns.federation.k8s.io
        names:
          kind: DNSEndpoint
          plural: dnsendpoints
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  endpoints:
                    items:
                      properties:
                        dnsName:
                          type: string
                        labels:
                          type: object
                        recordTTL:
                          format: int64
                          type: integer
                        recordType:
                          type: string
                        targets:
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedclusters.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedCluster
          plural: federatedclusters
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterRef:
                    type: object
                  secretRef:
                    type: object
                type: object
              status:
                properties:
                  conditions:
                    items:
                      properties:
                        lastProbeTime:
                          format: date-time
                          type: string
                        lastTransitionTime:
                          format: date-time
                          type: string
                        message:
                          type: string
                        reason:
                          type: string
                        status:
                          type: string
                        type:
                          type: string
                      required:
                      - type
                      - status
                      type: object
                    type: array
                  region:
                    type: string
                  zone:
                    type: string
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedconfigmaps.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedConfigMap
          plural: federatedconfigmaps
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedconfigmapoverrides.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedConfigMapOverride
          plural: federatedconfigmapoverrides
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  overrides:
                    items:
                      properties:
                        clusterName:
                          type: string
                        data:
                          type: object
                      type: object
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedconfigmapplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedConfigMapPlacement
          plural: federatedconfigmapplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federateddeployments.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedDeployment
          plural: federateddeployments
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federateddeploymentoverrides.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedDeploymentOverride
          plural: federateddeploymentoverrides
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  overrides:
                    items:
                      properties:
                        clusterName:
                          type: string
                        replicas:
                          format: int32
                          type: integer
                      type: object
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federateddeploymentplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedDeploymentPlacement
          plural: federateddeploymentplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedingresses.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedIngress
          plural: federatedingresses
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedingressplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedIngressPlacement
          plural: federatedingressplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedjobs.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedJob
          plural: federatedjobs
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedjoboverrides.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedJobOverride
          plural: federatedjoboverrides
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  overrides:
                    items:
                      properties:
                        clusterName:
                          type: string
                        parallelism:
                          format: int32
                          type: integer
                      type: object
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedjobplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedJobPlacement
          plural: federatedjobplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatednamespaceplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedNamespacePlacement
          plural: federatednamespaceplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedreplicasets.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedReplicaSet
          plural: federatedreplicasets
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedreplicasetoverrides.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedReplicaSetOverride
          plural: federatedreplicasetoverrides
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  overrides:
                    items:
                      properties:
                        clusterName:
                          type: string
                        replicas:
                          format: int32
                          type: integer
                      type: object
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedreplicasetplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedReplicaSetPlacement
          plural: federatedreplicasetplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedsecrets.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedSecret
          plural: federatedsecrets
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedsecretoverrides.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedSecretOverride
          plural: federatedsecretoverrides
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  overrides:
                    items:
                      properties:
                        clusterName:
                          type: string
                        data:
                          type: object
                      type: object
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedsecretplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedSecretPlacement
          plural: federatedsecretplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedservices.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedService
          plural: federatedservices
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedserviceaccounts.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedServiceAccount
          plural: federatedserviceaccounts
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  template:
                    type: object
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedserviceaccountplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedServiceAccountPlacement
          plural: federatedserviceaccountplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedserviceplacements.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedServicePlacement
          plural: federatedserviceplacements
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusterNames:
                    items:
                      type: string
                    type: array
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: federatedtypeconfigs.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: FederatedTypeConfig
          plural: federatedtypeconfigs
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  comparisonField:
                    type: string
                  namespaced:
                    type: boolean
                  override:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      pluralName:
                        type: string
                      version:
                        type: string
                    required:
                    - kind
                    type: object
                  overridePath:
                    items:
                      type: string
                    type: array
                  placement:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      pluralName:
                        type: string
                      version:
                        type: string
                    required:
                    - kind
                    type: object
                  propagationEnabled:
                    type: boolean
                  target:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      pluralName:
                        type: string
                      version:
                        type: string
                    required:
                    - kind
                    type: object
                  template:
                    properties:
                      group:
                        type: string
                      kind:
                        type: string
                      pluralName:
                        type: string
                      version:
                        type: string
                    required:
                    - kind
                    type: object
                required:
                - target
                - namespaced
                - comparisonField
                - propagationEnabled
                - template
                - placement
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: multiclusteringressdnsrecords.multiclusterdns.federation.k8s.io
      spec:
        group: multiclusterdns.federation.k8s.io
        names:
          kind: MultiClusterIngressDNSRecord
          plural: multiclusteringressdnsrecords
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  hosts:
                    items:
                      type: string
                    type: array
                  recordTTL:
                    format: int64
                    type: integer
                type: object
              status:
                properties:
                  dns:
                    items:
                      properties:
                        cluster:
                          type: string
                        loadBalancer:
                          type: object
                      type: object
                    type: array
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: multiclusterservicednsrecords.multiclusterdns.federation.k8s.io
      spec:
        group: multiclusterdns.federation.k8s.io
        names:
          kind: MultiClusterServiceDNSRecord
          plural: multiclusterservicednsrecords
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  dnsSuffix:
                    type: string
                  federationName:
                    type: string
                  recordTTL:
                    format: int64
                    type: integer
                type: object
              status:
                properties:
                  dns:
                    items:
                      properties:
                        cluster:
                          type: string
                        loadBalancer:
                          type: object
                        region:
                          type: string
                        zone:
                          type: string
                      type: object
                    type: array
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: propagatedversions.core.federation.k8s.io
      spec:
        group: core.federation.k8s.io
        names:
          kind: PropagatedVersion
          plural: propagatedversions
        scope: Namespaced
        subresources:
          status: {}
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                type: object
              status:
                properties:
                  clusterVersions:
                    items:
                      properties:
                        clusterName:
                          type: string
                        version:
                          type: string
                      type: object
                    type: array
                  overridesVersion:
                    type: string
                  templateVersion:
                    type: string
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        creationTimestamp: null
        labels:
          api: federation
          kubebuilder.k8s.io: 1.0.3
        name: replicaschedulingpreferences.scheduling.federation.k8s.io
      spec:
        group: scheduling.federation.k8s.io
        names:
          kind: ReplicaSchedulingPreference
          plural: replicaschedulingpreferences
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              apiVersion:
                type: string
              kind:
                type: string
              metadata:
                type: object
              spec:
                properties:
                  clusters:
                    type: object
                  rebalance:
                    type: boolean
                  targetKind:
                    type: string
                  totalReplicas:
                    format: int32
                    type: integer
                required:
                - targetKind
                - totalReplicas
                type: object
              status:
                type: object
        version: v1alpha1
      status:
        acceptedNames:
          kind: ""
          plural: ""
        conditions: null
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: catalogsourceconfigs.marketplace.redhat.com
        annotations:
          displayName: Catalog Source Config
          description: Represents a CatalogSourceConfig.
      spec:
        group: marketplace.redhat.com
        names:
          kind: CatalogSourceConfig
          listKind: CatalogSourceConfigList
          plural: catalogsourceconfigs
          singular: catalogsourceconfig
          shortNames:
          - csc
        scope: Namespaced
        version: v1alpha1
        additionalPrinterColumns:
        - name: TargetNamespace
          type: string
          description: The namespace where the operators will be enabled
          JSONPath: .spec.targetNamespace
        - name: Packages
          type: string
          description: List of operator(s) which will be enabled in the target namespace
          JSONPath: .spec.packages
        - name: Status
          type: string
          description: Current status of the CatalogSourceConfig
          JSONPath: .status.currentPhase.phase.name
        - name: Message
          type: string
          description: Message associated with the current status
          JSONPath: .status.currentPhase.phase.message
        - name: Age
          type: date
          JSONPath: .metadata.creationTimestamp
        validation:
          openAPIV3Schema:
            properties:
              spec:
                type: object
                description: Spec for a CatalogSourceConfig
                required:
                - targetNamespace
                - packages
                properties:
                  targetNamespace:
                    type: string
                    description: The namespace where the operators will be enabled
                  packages:
                    type: string
                    description: Comma separated list of operator(s) without spaces which will be enabled in the target namespace
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: operatorsources.marketplace.redhat.com
        annotations:
          displayName: Operator Source
          description: Represents an OperatorSource.
      spec:
        group: marketplace.redhat.com
        names:
          kind: OperatorSource
          listKind: OperatorSourceList
          plural: operatorsources
          singular: operatorsource
          shortNames:
          - opsrc
        scope: Namespaced
        version: v1alpha1
        additionalPrinterColumns:
        - name: Type
          type: string
          description: The type of the OperatorSource
          JSONPath: .spec.type
        - name: Endpoint
          type: string
          description: The endpoint of the OperatorSource
          JSONPath: .spec.endpoint
        - name: Registry
          type: string
          description: App registry namespace
          JSONPath: .spec.registryNamespace
        - name: Status
          type: string
          description: Current status of the OperatorSource
          JSONPath: .status.currentPhase.phase.name
        - name: Message
          type: string
          description: Message associated with the current status
          JSONPath: .status.currentPhase.phase.message
        - name: Age
          type: date
          JSONPath: .metadata.creationTimestamp
        validation:
          openAPIV3Schema:
            properties:
              spec:
                type: object
                description: Spec for an OperatorSource.
                required:
                - type
                - endpoint
                - registryNamespace
                properties:
                  type:
                    type: string
                    description: The type of the OperatorSource
                    pattern: 'appregistry'
                  endpoint:
                    type: string
                    description: Points to the remote app registry server from where operator manifests can be fetched.
                  registryNamespace:
                    type: string
                    description: |-
                      The namespace in app registry.
                      Only operator manifests under this namespace will be visible.
                      Please note that this is not a k8s namespace.
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: prometheuses.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: Prometheus
          plural: prometheuses
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              spec:
                description: 'Specification of the desired behavior of the Prometheus cluster.
                  More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  additionalAlertManagerConfigs:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid
                          secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      optional:
                        description: Specify whether the Secret or it's key must be defined
                        type: boolean
                    required:
                    - key
                  additionalScrapeConfigs:
                    description: SecretKeySelector selects a key of a Secret.
                    properties:
                      key:
                        description: The key of the secret to select from.  Must be a valid
                          secret key.
                        type: string
                      name:
                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                        type: string
                      optional:
                        description: Specify whether the Secret or it's key must be defined
                        type: boolean
                    required:
                    - key
                  affinity:
                    description: Affinity is a group of affinity scheduling rules.
                    properties:
                      nodeAffinity:
                        description: Node affinity is a group of node affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes
                              that satisfy the affinity expressions specified by this field,
                              but it may choose a node that violates one or more of the
                              expressions. The node that is most preferred is the one with
                              the greatest sum of weights, i.e. for each node that meets
                              all of the scheduling requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating through
                              the elements of this field and adding "weight" to the sum
                              if the node matches the corresponding matchExpressions; the
                              node(s) with the highest sum are the most preferred.
                            items:
                              description: An empty preferred scheduling term matches all
                                objects with implicit weight 0 (i.e. it's a no-op). A null
                                preferred scheduling term matches no objects (i.e. is also
                                a no-op).
                              properties:
                                preference:
                                  description: A null or empty node selector term matches
                                    no objects. The requirements of them are ANDed. The
                                    TopologySelectorTerm type implements a subset of the
                                    NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                weight:
                                  description: Weight associated with matching the corresponding
                                    nodeSelectorTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - preference
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: A node selector represents the union of the results
                              of one or more label queries over a set of nodes; that is,
                              it represents the OR of the selectors represented by the node
                              selector terms.
                            properties:
                              nodeSelectorTerms:
                                description: Required. A list of node selector terms. The
                                  terms are ORed.
                                items:
                                  description: A null or empty node selector term matches
                                    no objects. The requirements of them are ANDed. The
                                    TopologySelectorTerm type implements a subset of the
                                    NodeSelectorTerm.
                                  properties:
                                    matchExpressions:
                                      description: A list of node selector requirements
                                        by node's labels.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchFields:
                                      description: A list of node selector requirements
                                        by node's fields.
                                      items:
                                        description: A node selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: The label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: Represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists, DoesNotExist. Gt, and Lt.
                                            type: string
                                          values:
                                            description: An array of string values. If the
                                              operator is In or NotIn, the values array
                                              must be non-empty. If the operator is Exists
                                              or DoesNotExist, the values array must be
                                              empty. If the operator is Gt or Lt, the values
                                              array must have a single element, which will
                                              be interpreted as an integer. This array is
                                              replaced during a strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                type: array
                            required:
                            - nodeSelectorTerms
                      podAffinity:
                        description: Pod affinity is a group of inter pod affinity scheduling
                          rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes
                              that satisfy the affinity expressions specified by this field,
                              but it may choose a node that violates one or more of the
                              expressions. The node that is most preferred is the one with
                              the greatest sum of weights, i.e. for each node that meets
                              all of the scheduling requirements (resource request, requiredDuringScheduling
                              affinity expressions, etc.), compute a sum by iterating through
                              the elements of this field and adding "weight" to the sum
                              if the node has pods which matches the corresponding podAffinityTerm;
                              the node(s) with the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those matching
                                    the labelSelector relative to the given namespace(s))
                                    that this pod should be co-located (affinity) or not
                                    co-located (anti-affinity) with, where co-located is
                                    defined as running on a node whose value of the label
                                    with key <topologyKey> matches that of any node on which
                                    a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query over
                                        a set of resources. The result of matchLabels and
                                        matchExpressions are ANDed. An empty label selector
                                        matches all objects. A null label selector matches
                                        no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label
                                            selector requirements. The requirements are
                                            ANDed.
                                          items:
                                            description: A label selector requirement is
                                              a selector that contains values, a key, and
                                              an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array
                                                  is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is "In",
                                            and the values array contains only "value".
                                            The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the pods
                                        matching the labelSelector in the specified namespaces,
                                        where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches
                                        that of any node on which any of the selected pods
                                        is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the corresponding
                                    podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the affinity requirements specified by this
                              field are not met at scheduling time, the pod will not be
                              scheduled onto the node. If the affinity requirements specified
                              by this field cease to be met at some point during pod execution
                              (e.g. due to a pod label update), the system may or may not
                              try to eventually evict the pod from its node. When there
                              are multiple elements, the lists of nodes corresponding to
                              each podAffinityTerm are intersected, i.e. all terms must
                              be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s)) that
                                this pod should be co-located (affinity) or not co-located
                                (anti-affinity) with, where co-located is defined as running
                                on a node whose value of the label with key <topologyKey>
                                matches that of any node on which a pod of the set of pods
                                is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over a
                                    set of resources. The result of matchLabels and matchExpressions
                                    are ANDed. An empty label selector matches all objects.
                                    A null label selector matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector
                                        requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values.
                                              If the operator is In or NotIn, the values
                                              array must be non-empty. If the operator is
                                              Exists or DoesNotExist, the values array must
                                              be empty. This array is replaced during a
                                              strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value} pairs.
                                        A single {key,value} in the matchLabels map is equivalent
                                        to an element of matchExpressions, whose key field
                                        is "key", the operator is "In", and the values array
                                        contains only "value". The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the
                                    labelSelector applies to (matches against); null or
                                    empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where
                                    co-located is defined as running on a node whose value
                                    of the label with key topologyKey matches that of any
                                    node on which any of the selected pods is running. Empty
                                    topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                      podAntiAffinity:
                        description: Pod anti affinity is a group of inter pod anti affinity
                          scheduling rules.
                        properties:
                          preferredDuringSchedulingIgnoredDuringExecution:
                            description: The scheduler will prefer to schedule pods to nodes
                              that satisfy the anti-affinity expressions specified by this
                              field, but it may choose a node that violates one or more
                              of the expressions. The node that is most preferred is the
                              one with the greatest sum of weights, i.e. for each node that
                              meets all of the scheduling requirements (resource request,
                              requiredDuringScheduling anti-affinity expressions, etc.),
                              compute a sum by iterating through the elements of this field
                              and adding "weight" to the sum if the node has pods which
                              matches the corresponding podAffinityTerm; the node(s) with
                              the highest sum are the most preferred.
                            items:
                              description: The weights of all of the matched WeightedPodAffinityTerm
                                fields are added per-node to find the most preferred node(s)
                              properties:
                                podAffinityTerm:
                                  description: Defines a set of pods (namely those matching
                                    the labelSelector relative to the given namespace(s))
                                    that this pod should be co-located (affinity) or not
                                    co-located (anti-affinity) with, where co-located is
                                    defined as running on a node whose value of the label
                                    with key <topologyKey> matches that of any node on which
                                    a pod of the set of pods is running
                                  properties:
                                    labelSelector:
                                      description: A label selector is a label query over
                                        a set of resources. The result of matchLabels and
                                        matchExpressions are ANDed. An empty label selector
                                        matches all objects. A null label selector matches
                                        no objects.
                                      properties:
                                        matchExpressions:
                                          description: matchExpressions is a list of label
                                            selector requirements. The requirements are
                                            ANDed.
                                          items:
                                            description: A label selector requirement is
                                              a selector that contains values, a key, and
                                              an operator that relates the key and values.
                                            properties:
                                              key:
                                                description: key is the label key that the
                                                  selector applies to.
                                                type: string
                                              operator:
                                                description: operator represents a key's
                                                  relationship to a set of values. Valid
                                                  operators are In, NotIn, Exists and DoesNotExist.
                                                type: string
                                              values:
                                                description: values is an array of string
                                                  values. If the operator is In or NotIn,
                                                  the values array must be non-empty. If
                                                  the operator is Exists or DoesNotExist,
                                                  the values array must be empty. This array
                                                  is replaced during a strategic merge patch.
                                                items:
                                                  type: string
                                                type: array
                                            required:
                                            - key
                                            - operator
                                          type: array
                                        matchLabels:
                                          description: matchLabels is a map of {key,value}
                                            pairs. A single {key,value} in the matchLabels
                                            map is equivalent to an element of matchExpressions,
                                            whose key field is "key", the operator is "In",
                                            and the values array contains only "value".
                                            The requirements are ANDed.
                                          type: object
                                    namespaces:
                                      description: namespaces specifies which namespaces
                                        the labelSelector applies to (matches against);
                                        null or empty list means "this pod's namespace"
                                      items:
                                        type: string
                                      type: array
                                    topologyKey:
                                      description: This pod should be co-located (affinity)
                                        or not co-located (anti-affinity) with the pods
                                        matching the labelSelector in the specified namespaces,
                                        where co-located is defined as running on a node
                                        whose value of the label with key topologyKey matches
                                        that of any node on which any of the selected pods
                                        is running. Empty topologyKey is not allowed.
                                      type: string
                                  required:
                                  - topologyKey
                                weight:
                                  description: weight associated with matching the corresponding
                                    podAffinityTerm, in the range 1-100.
                                  format: int32
                                  type: integer
                              required:
                              - weight
                              - podAffinityTerm
                            type: array
                          requiredDuringSchedulingIgnoredDuringExecution:
                            description: If the anti-affinity requirements specified by
                              this field are not met at scheduling time, the pod will not
                              be scheduled onto the node. If the anti-affinity requirements
                              specified by this field cease to be met at some point during
                              pod execution (e.g. due to a pod label update), the system
                              may or may not try to eventually evict the pod from its node.
                              When there are multiple elements, the lists of nodes corresponding
                              to each podAffinityTerm are intersected, i.e. all terms must
                              be satisfied.
                            items:
                              description: Defines a set of pods (namely those matching
                                the labelSelector relative to the given namespace(s)) that
                                this pod should be co-located (affinity) or not co-located
                                (anti-affinity) with, where co-located is defined as running
                                on a node whose value of the label with key <topologyKey>
                                matches that of any node on which a pod of the set of pods
                                is running
                              properties:
                                labelSelector:
                                  description: A label selector is a label query over a
                                    set of resources. The result of matchLabels and matchExpressions
                                    are ANDed. An empty label selector matches all objects.
                                    A null label selector matches no objects.
                                  properties:
                                    matchExpressions:
                                      description: matchExpressions is a list of label selector
                                        requirements. The requirements are ANDed.
                                      items:
                                        description: A label selector requirement is a selector
                                          that contains values, a key, and an operator that
                                          relates the key and values.
                                        properties:
                                          key:
                                            description: key is the label key that the selector
                                              applies to.
                                            type: string
                                          operator:
                                            description: operator represents a key's relationship
                                              to a set of values. Valid operators are In,
                                              NotIn, Exists and DoesNotExist.
                                            type: string
                                          values:
                                            description: values is an array of string values.
                                              If the operator is In or NotIn, the values
                                              array must be non-empty. If the operator is
                                              Exists or DoesNotExist, the values array must
                                              be empty. This array is replaced during a
                                              strategic merge patch.
                                            items:
                                              type: string
                                            type: array
                                        required:
                                        - key
                                        - operator
                                      type: array
                                    matchLabels:
                                      description: matchLabels is a map of {key,value} pairs.
                                        A single {key,value} in the matchLabels map is equivalent
                                        to an element of matchExpressions, whose key field
                                        is "key", the operator is "In", and the values array
                                        contains only "value". The requirements are ANDed.
                                      type: object
                                namespaces:
                                  description: namespaces specifies which namespaces the
                                    labelSelector applies to (matches against); null or
                                    empty list means "this pod's namespace"
                                  items:
                                    type: string
                                  type: array
                                topologyKey:
                                  description: This pod should be co-located (affinity)
                                    or not co-located (anti-affinity) with the pods matching
                                    the labelSelector in the specified namespaces, where
                                    co-located is defined as running on a node whose value
                                    of the label with key topologyKey matches that of any
                                    node on which any of the selected pods is running. Empty
                                    topologyKey is not allowed.
                                  type: string
                              required:
                              - topologyKey
                            type: array
                  alerting:
                    description: AlertingSpec defines parameters for alerting configuration
                      of Prometheus servers.
                    properties:
                      alertmanagers:
                        description: AlertmanagerEndpoints Prometheus should fire alerts
                          against.
                        items:
                          description: AlertmanagerEndpoints defines a selection of a single
                            Endpoints object containing alertmanager IPs to fire alerts
                            against.
                          properties:
                            bearerTokenFile:
                              description: BearerTokenFile to read from filesystem to use
                                when authenticating to Alertmanager.
                              type: string
                            name:
                              description: Name of Endpoints object in Namespace.
                              type: string
                            namespace:
                              description: Namespace of Endpoints object.
                              type: string
                            pathPrefix:
                              description: Prefix for the HTTP path alerts are pushed to.
                              type: string
                            port:
                              anyOf:
                              - type: string
                              - type: integer
                            scheme:
                              description: Scheme to use when firing alerts.
                              type: string
                            tlsConfig:
                              description: TLSConfig specifies TLS configuration parameters.
                              properties:
                                caFile:
                                  description: The CA cert to use for the targets.
                                  type: string
                                certFile:
                                  description: The client cert file for the targets.
                                  type: string
                                insecureSkipVerify:
                                  description: Disable target certificate validation.
                                  type: boolean
                                keyFile:
                                  description: The client key file for the targets.
                                  type: string
                                serverName:
                                  description: Used to verify the hostname for the targets.
                                  type: string
                          required:
                          - namespace
                          - name
                          - port
                        type: array
                    required:
                    - alertmanagers
                  baseImage:
                    description: Base image to use for a Prometheus deployment.
                    type: string
                  containers:
                    description: Containers allows injecting additional containers. This
                      is meant to allow adding an authentication proxy to a Prometheus pod.
                    items:
                      description: A single application container that you want to run within
                        a pod.
                      properties:
                        args:
                          description: 'Arguments to the entrypoint. The docker image''s
                            CMD is used if this is not provided. Variable references $(VAR_NAME)
                            are expanded using the container''s environment. If a variable
                            cannot be resolved, the reference in the input string will be
                            unchanged. The $(VAR_NAME) syntax can be escaped with a double
                            $$, ie: $$(VAR_NAME). Escaped references will never be expanded,
                            regardless of whether the variable exists or not. Cannot be
                            updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        command:
                          description: 'Entrypoint array. Not executed within a shell. The
                            docker image''s ENTRYPOINT is used if this is not provided.
                            Variable references $(VAR_NAME) are expanded using the container''s
                            environment. If a variable cannot be resolved, the reference
                            in the input string will be unchanged. The $(VAR_NAME) syntax
                            can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                            will never be expanded, regardless of whether the variable exists
                            or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell'
                          items:
                            type: string
                          type: array
                        env:
                          description: List of environment variables to set in the container.
                            Cannot be updated.
                          items:
                            description: EnvVar represents an environment variable present
                              in a Container.
                            properties:
                              name:
                                description: Name of the environment variable. Must be a
                                  C_IDENTIFIER.
                                type: string
                              value:
                                description: 'Variable references $(VAR_NAME) are expanded
                                  using the previous defined environment variables in the
                                  container and any service environment variables. If a
                                  variable cannot be resolved, the reference in the input
                                  string will be unchanged. The $(VAR_NAME) syntax can be
                                  escaped with a double $$, ie: $$(VAR_NAME). Escaped references
                                  will never be expanded, regardless of whether the variable
                                  exists or not. Defaults to "".'
                                type: string
                              valueFrom:
                                description: EnvVarSource represents a source for the value
                                  of an EnvVar.
                                properties:
                                  configMapKeyRef:
                                    description: Selects a key from a ConfigMap.
                                    properties:
                                      key:
                                        description: The key to select.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the ConfigMap or it's
                                          key must be defined
                                        type: boolean
                                    required:
                                    - key
                                  fieldRef:
                                    description: ObjectFieldSelector selects an APIVersioned
                                      field of an object.
                                    properties:
                                      apiVersion:
                                        description: Version of the schema the FieldPath
                                          is written in terms of, defaults to "v1".
                                        type: string
                                      fieldPath:
                                        description: Path of the field to select in the
                                          specified API version.
                                        type: string
                                    required:
                                    - fieldPath
                                  resourceFieldRef:
                                    description: ResourceFieldSelector represents container
                                      resources (cpu, memory) and their output format
                                    properties:
                                      containerName:
                                        description: 'Container name: required for volumes,
                                          optional for env vars'
                                        type: string
                                      divisor: {}
                                      resource:
                                        description: 'Required: resource to select'
                                        type: string
                                    required:
                                    - resource
                                  secretKeyRef:
                                    description: SecretKeySelector selects a key of a Secret.
                                    properties:
                                      key:
                                        description: The key of the secret to select from.  Must
                                          be a valid secret key.
                                        type: string
                                      name:
                                        description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                        type: string
                                      optional:
                                        description: Specify whether the Secret or it's
                                          key must be defined
                                        type: boolean
                                    required:
                                    - key
                            required:
                            - name
                          type: array
                        envFrom:
                          description: List of sources to populate environment variables
                            in the container. The keys defined within a source must be a
                            C_IDENTIFIER. All invalid keys will be reported as an event
                            when the container is starting. When a key exists in multiple
                            sources, the value associated with the last source will take
                            precedence. Values defined by an Env with a duplicate key will
                            take precedence. Cannot be updated.
                          items:
                            description: EnvFromSource represents the source of a set of
                              ConfigMaps
                            properties:
                              configMapRef:
                                description: |-
                                  ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.
                                  The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the ConfigMap must be defined
                                    type: boolean
                              prefix:
                                description: An optional identifier to prepend to each key
                                  in the ConfigMap. Must be a C_IDENTIFIER.
                                type: string
                              secretRef:
                                description: |-
                                  SecretEnvSource selects a Secret to populate the environment variables with.
                                  The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
                                properties:
                                  name:
                                    description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                    type: string
                                  optional:
                                    description: Specify whether the Secret must be defined
                                    type: boolean
                          type: array
                        image:
                          description: 'Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images
                            This field is optional to allow higher level config management
                            to default or override container images in workload controllers
                            like Deployments and StatefulSets.'
                          type: string
                        imagePullPolicy:
                          description: 'Image pull policy. One of Always, Never, IfNotPresent.
                            Defaults to Always if :latest tag is specified, or IfNotPresent
                            otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images'
                          type: string
                        lifecycle:
                          description: Lifecycle describes actions that the management system
                            should take in response to container lifecycle events. For the
                            PostStart and PreStop lifecycle handlers, management of the
                            container blocks until the action is complete, unless the container
                            process fails, in which case the handler is aborted.
                          properties:
                            postStart:
                              description: Handler defines a specific action that should
                                be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to execute
                                        inside the container, the working directory for
                                        the command  is root ('/') in the container's filesystem.
                                        The command is simply exec'd, it is not run inside
                                        a shell, so traditional shell instructions ('|',
                                        etc) won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is treated
                                        as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based on
                                    HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to
                                        the pod IP. You probably want to set "Host" in httpHeaders
                                        instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header
                                          to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action based
                                    on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults
                                        to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                            preStop:
                              description: Handler defines a specific action that should
                                be taken
                              properties:
                                exec:
                                  description: ExecAction describes a "run in container"
                                    action.
                                  properties:
                                    command:
                                      description: Command is the command line to execute
                                        inside the container, the working directory for
                                        the command  is root ('/') in the container's filesystem.
                                        The command is simply exec'd, it is not run inside
                                        a shell, so traditional shell instructions ('|',
                                        etc) won't work. To use a shell, you need to explicitly
                                        call out to that shell. Exit status of 0 is treated
                                        as live/healthy and non-zero is unhealthy.
                                      items:
                                        type: string
                                      type: array
                                httpGet:
                                  description: HTTPGetAction describes an action based on
                                    HTTP Get requests.
                                  properties:
                                    host:
                                      description: Host name to connect to, defaults to
                                        the pod IP. You probably want to set "Host" in httpHeaders
                                        instead.
                                      type: string
                                    httpHeaders:
                                      description: Custom headers to set in the request.
                                        HTTP allows repeated headers.
                                      items:
                                        description: HTTPHeader describes a custom header
                                          to be used in HTTP probes
                                        properties:
                                          name:
                                            description: The header field name
                                            type: string
                                          value:
                                            description: The header field value
                                            type: string
                                        required:
                                        - name
                                        - value
                                      type: array
                                    path:
                                      description: Path to access on the HTTP server.
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                    scheme:
                                      description: Scheme to use for connecting to the host.
                                        Defaults to HTTP.
                                      type: string
                                  required:
                                  - port
                                tcpSocket:
                                  description: TCPSocketAction describes an action based
                                    on opening a socket
                                  properties:
                                    host:
                                      description: 'Optional: Host name to connect to, defaults
                                        to the pod IP.'
                                      type: string
                                    port:
                                      anyOf:
                                      - type: string
                                      - type: integer
                                  required:
                                  - port
                        livenessProbe:
                          description: Probe describes a health check to be performed against
                            a container to determine whether it is alive or ready to receive
                            traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container" action.
                              properties:
                                command:
                                  description: Command is the command line to execute inside
                                    the container, the working directory for the command  is
                                    root ('/') in the container's filesystem. The command
                                    is simply exec'd, it is not run inside a shell, so traditional
                                    shell instructions ('|', etc) won't work. To use a shell,
                                    you need to explicitly call out to that shell. Exit
                                    status of 0 is treated as live/healthy and non-zero
                                    is unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to
                                be considered failed after having succeeded. Defaults to
                                3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based on HTTP
                                Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the
                                    pod IP. You probably want to set "Host" in httpHeaders
                                    instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP
                                    allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to
                                      be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started
                                before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to
                                be considered successful after having failed. Defaults to
                                1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based on
                                opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults
                                    to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times
                                out. Defaults to 1 second. Minimum value is 1. More info:
                                https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        name:
                          description: Name of the container specified as a DNS_LABEL. Each
                            container in a pod must have a unique name (DNS_LABEL). Cannot
                            be updated.
                          type: string
                        ports:
                          description: List of ports to expose from the container. Exposing
                            a port here gives the system additional information about the
                            network connections a container uses, but is primarily informational.
                            Not specifying a port here DOES NOT prevent that port from being
                            exposed. Any port which is listening on the default "0.0.0.0"
                            address inside a container will be accessible from the network.
                            Cannot be updated.
                          items:
                            description: ContainerPort represents a network port in a single
                              container.
                            properties:
                              containerPort:
                                description: Number of port to expose on the pod's IP address.
                                  This must be a valid port number, 0 < x < 65536.
                                format: int32
                                type: integer
                              hostIP:
                                description: What host IP to bind the external port to.
                                type: string
                              hostPort:
                                description: Number of port to expose on the host. If specified,
                                  this must be a valid port number, 0 < x < 65536. If HostNetwork
                                  is specified, this must match ContainerPort. Most containers
                                  do not need this.
                                format: int32
                                type: integer
                              name:
                                description: If specified, this must be an IANA_SVC_NAME
                                  and unique within the pod. Each named port in a pod must
                                  have a unique name. Name for the port that can be referred
                                  to by services.
                                type: string
                              protocol:
                                description: Protocol for port. Must be UDP or TCP. Defaults
                                  to "TCP".
                                type: string
                            required:
                            - containerPort
                          type: array
                        readinessProbe:
                          description: Probe describes a health check to be performed against
                            a container to determine whether it is alive or ready to receive
                            traffic.
                          properties:
                            exec:
                              description: ExecAction describes a "run in container" action.
                              properties:
                                command:
                                  description: Command is the command line to execute inside
                                    the container, the working directory for the command  is
                                    root ('/') in the container's filesystem. The command
                                    is simply exec'd, it is not run inside a shell, so traditional
                                    shell instructions ('|', etc) won't work. To use a shell,
                                    you need to explicitly call out to that shell. Exit
                                    status of 0 is treated as live/healthy and non-zero
                                    is unhealthy.
                                  items:
                                    type: string
                                  type: array
                            failureThreshold:
                              description: Minimum consecutive failures for the probe to
                                be considered failed after having succeeded. Defaults to
                                3. Minimum value is 1.
                              format: int32
                              type: integer
                            httpGet:
                              description: HTTPGetAction describes an action based on HTTP
                                Get requests.
                              properties:
                                host:
                                  description: Host name to connect to, defaults to the
                                    pod IP. You probably want to set "Host" in httpHeaders
                                    instead.
                                  type: string
                                httpHeaders:
                                  description: Custom headers to set in the request. HTTP
                                    allows repeated headers.
                                  items:
                                    description: HTTPHeader describes a custom header to
                                      be used in HTTP probes
                                    properties:
                                      name:
                                        description: The header field name
                                        type: string
                                      value:
                                        description: The header field value
                                        type: string
                                    required:
                                    - name
                                    - value
                                  type: array
                                path:
                                  description: Path to access on the HTTP server.
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                                scheme:
                                  description: Scheme to use for connecting to the host.
                                    Defaults to HTTP.
                                  type: string
                              required:
                              - port
                            initialDelaySeconds:
                              description: 'Number of seconds after the container has started
                                before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                            periodSeconds:
                              description: How often (in seconds) to perform the probe.
                                Default to 10 seconds. Minimum value is 1.
                              format: int32
                              type: integer
                            successThreshold:
                              description: Minimum consecutive successes for the probe to
                                be considered successful after having failed. Defaults to
                                1. Must be 1 for liveness. Minimum value is 1.
                              format: int32
                              type: integer
                            tcpSocket:
                              description: TCPSocketAction describes an action based on
                                opening a socket
                              properties:
                                host:
                                  description: 'Optional: Host name to connect to, defaults
                                    to the pod IP.'
                                  type: string
                                port:
                                  anyOf:
                                  - type: string
                                  - type: integer
                              required:
                              - port
                            timeoutSeconds:
                              description: 'Number of seconds after which the probe times
                                out. Defaults to 1 second. Minimum value is 1. More info:
                                https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes'
                              format: int32
                              type: integer
                        resources:
                          description: ResourceRequirements describes the compute resource
                            requirements.
                          properties:
                            limits:
                              description: 'Limits describes the maximum amount of compute
                                resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                            requests:
                              description: 'Requests describes the minimum amount of compute
                                resources required. If Requests is omitted for a container,
                                it defaults to Limits if that is explicitly specified, otherwise
                                to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                              type: object
                        securityContext:
                          description: SecurityContext holds security configuration that
                            will be applied to a container. Some fields are present in both
                            SecurityContext and PodSecurityContext.  When both are set,
                            the values in SecurityContext take precedence.
                          properties:
                            allowPrivilegeEscalation:
                              description: 'AllowPrivilegeEscalation controls whether a
                                process can gain more privileges than its parent process.
                                This bool directly controls if the no_new_privs flag will
                                be set on the container process. AllowPrivilegeEscalation
                                is true always when the container is: 1) run as Privileged
                                2) has CAP_SYS_ADMIN'
                              type: boolean
                            capabilities:
                              description: Adds and removes POSIX capabilities from running
                                containers.
                              properties:
                                add:
                                  description: Added capabilities
                                  items:
                                    type: string
                                  type: array
                                drop:
                                  description: Removed capabilities
                                  items:
                                    type: string
                                  type: array
                            privileged:
                              description: Run container in privileged mode. Processes in
                                privileged containers are essentially equivalent to root
                                on the host. Defaults to false.
                              type: boolean
                            readOnlyRootFilesystem:
                              description: Whether this container has a read-only root filesystem.
                                Default is false.
                              type: boolean
                            runAsGroup:
                              description: The GID to run the entrypoint of the container
                                process. Uses runtime default if unset. May also be set
                                in PodSecurityContext.  If set in both SecurityContext and
                                PodSecurityContext, the value specified in SecurityContext
                                takes precedence.
                              format: int64
                              type: integer
                            runAsNonRoot:
                              description: Indicates that the container must run as a non-root
                                user. If true, the Kubelet will validate the image at runtime
                                to ensure that it does not run as UID 0 (root) and fail
                                to start the container if it does. If unset or false, no
                                such validation will be performed. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext, the
                                value specified in SecurityContext takes precedence.
                              type: boolean
                            runAsUser:
                              description: The UID to run the entrypoint of the container
                                process. Defaults to user specified in image metadata if
                                unspecified. May also be set in PodSecurityContext.  If
                                set in both SecurityContext and PodSecurityContext, the
                                value specified in SecurityContext takes precedence.
                              format: int64
                              type: integer
                            seLinuxOptions:
                              description: SELinuxOptions are the labels to be applied to
                                the container
                              properties:
                                level:
                                  description: Level is SELinux level label that applies
                                    to the container.
                                  type: string
                                role:
                                  description: Role is a SELinux role label that applies
                                    to the container.
                                  type: string
                                type:
                                  description: Type is a SELinux type label that applies
                                    to the container.
                                  type: string
                                user:
                                  description: User is a SELinux user label that applies
                                    to the container.
                                  type: string
                        stdin:
                          description: Whether this container should allocate a buffer for
                            stdin in the container runtime. If this is not set, reads from
                            stdin in the container will always result in EOF. Default is
                            false.
                          type: boolean
                        stdinOnce:
                          description: Whether the container runtime should close the stdin
                            channel after it has been opened by a single attach. When stdin
                            is true the stdin stream will remain open across multiple attach
                            sessions. If stdinOnce is set to true, stdin is opened on container
                            start, is empty until the first client attaches to stdin, and
                            then remains open and accepts data until the client disconnects,
                            at which time stdin is closed and remains closed until the container
                            is restarted. If this flag is false, a container processes that
                            reads from stdin will never receive an EOF. Default is false
                          type: boolean
                        terminationMessagePath:
                          description: 'Optional: Path at which the file to which the container''s
                            termination message will be written is mounted into the container''s
                            filesystem. Message written is intended to be brief final status,
                            such as an assertion failure message. Will be truncated by the
                            node if greater than 4096 bytes. The total message length across
                            all containers will be limited to 12kb. Defaults to /dev/termination-log.
                            Cannot be updated.'
                          type: string
                        terminationMessagePolicy:
                          description: Indicate how the termination message should be populated.
                            File will use the contents of terminationMessagePath to populate
                            the container status message on both success and failure. FallbackToLogsOnError
                            will use the last chunk of container log output if the termination
                            message file is empty and the container exited with an error.
                            The log output is limited to 2048 bytes or 80 lines, whichever
                            is smaller. Defaults to File. Cannot be updated.
                          type: string
                        tty:
                          description: Whether this container should allocate a TTY for
                            itself, also requires 'stdin' to be true. Default is false.
                          type: boolean
                        volumeDevices:
                          description: volumeDevices is the list of block devices to be
                            used by the container. This is an alpha feature and may change
                            in the future.
                          items:
                            description: volumeDevice describes a mapping of a raw block
                              device within a container.
                            properties:
                              devicePath:
                                description: devicePath is the path inside of the container
                                  that the device will be mapped to.
                                type: string
                              name:
                                description: name must match the name of a persistentVolumeClaim
                                  in the pod
                                type: string
                            required:
                            - name
                            - devicePath
                          type: array
                        volumeMounts:
                          description: Pod volumes to mount into the container's filesystem.
                            Cannot be updated.
                          items:
                            description: VolumeMount describes a mounting of a Volume within
                              a container.
                            properties:
                              mountPath:
                                description: Path within the container at which the volume
                                  should be mounted.  Must not contain ':'.
                                type: string
                              mountPropagation:
                                description: mountPropagation determines how mounts are
                                  propagated from the host to container and the other way
                                  around. When not set, MountPropagationHostToContainer
                                  is used. This field is beta in 1.10.
                                type: string
                              name:
                                description: This must match the Name of a Volume.
                                type: string
                              readOnly:
                                description: Mounted read-only if true, read-write otherwise
                                  (false or unspecified). Defaults to false.
                                type: boolean
                              subPath:
                                description: Path within the volume from which the container's
                                  volume should be mounted. Defaults to "" (volume's root).
                                type: string
                            required:
                            - name
                            - mountPath
                          type: array
                        workingDir:
                          description: Container's working directory. If not specified,
                            the container runtime's default will be used, which might be
                            configured in the container image. Cannot be updated.
                          type: string
                      required:
                      - name
                    type: array
                  evaluationInterval:
                    description: Interval between consecutive evaluations.
                    type: string
                  externalLabels:
                    description: The labels to add to any time series or alerts when communicating
                      with external systems (federation, remote storage, Alertmanager).
                    type: object
                  externalUrl:
                    description: The external URL the Prometheus instances will be available
                      under. This is necessary to generate correct URLs. This is necessary
                      if Prometheus is not served from root of a DNS name.
                    type: string
                  imagePullSecrets:
                    description: An optional list of references to secrets in the same namespace
                      to use for pulling prometheus and alertmanager images from registries
                      see http://kubernetes.io/docs/user-guide/images#specifying-imagepullsecrets-on-a-pod
                    items:
                      description: LocalObjectReference contains enough information to let
                        you locate the referenced object inside the same namespace.
                      properties:
                        name:
                          description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                          type: string
                    type: array
                  listenLocal:
                    description: ListenLocal makes the Prometheus server listen on loopback,
                      so that it does not bind against the Pod IP.
                    type: boolean
                  logLevel:
                    description: Log level for Prometheus to be configured with.
                    type: string
                  nodeSelector:
                    description: Define which Nodes the Pods are scheduled on.
                    type: object
                  paused:
                    description: When a Prometheus deployment is paused, no actions except
                      for deletion will be performed on the underlying objects.
                    type: boolean
                  podMetadata:
                    description: ObjectMeta is metadata that all persisted resources must
                      have, which includes all objects users must create.
                    properties:
                      annotations:
                        description: 'Annotations is an unstructured key value map stored
                          with a resource that may be set by external tools to store and
                          retrieve arbitrary metadata. They are not queryable and should
                          be preserved when modifying objects. More info: http://kubernetes.io/docs/user-guide/annotations'
                        type: object
                      clusterName:
                        description: The name of the cluster which the object belongs to.
                          This is used to distinguish resources with same name and namespace
                          in different clusters. This field is not set anywhere right now
                          and apiserver is going to ignore it if set in create or update
                          request.
                        type: string
                      creationTimestamp:
                        description: Time is a wrapper around time.Time which supports correct
                          marshaling to YAML and JSON.  Wrappers are provided for many of
                          the factory methods that the time package offers.
                        format: date-time
                        type: string
                      deletionGracePeriodSeconds:
                        description: Number of seconds allowed for this object to gracefully
                          terminate before it will be removed from the system. Only set
                          when deletionTimestamp is also set. May only be shortened. Read-only.
                        format: int64
                        type: integer
                      deletionTimestamp:
                        description: Time is a wrapper around time.Time which supports correct
                          marshaling to YAML and JSON.  Wrappers are provided for many of
                          the factory methods that the time package offers.
                        format: date-time
                        type: string
                      finalizers:
                        description: Must be empty before the object is deleted from the
                          registry. Each entry is an identifier for the responsible component
                          that will remove the entry from the list. If the deletionTimestamp
                          of the object is non-nil, entries in this list can only be removed.
                        items:
                          type: string
                        type: array
                      generateName:
                        description: |-
                          GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
                          If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
                          Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                        type: string
                      generation:
                        description: A sequence number representing a specific generation
                          of the desired state. Populated by the system. Read-only.
                        format: int64
                        type: integer
                      initializers:
                        description: Initializers tracks the progress of initialization.
                        properties:
                          pending:
                            description: Pending is a list of initializers that must execute
                              in order before this object is visible. When the last pending
                              initializer is removed, and no failing result is set, the
                              initializers struct will be set to nil and the object is considered
                              as initialized and visible to all clients.
                            items:
                              description: Initializer is information about an initializer
                                that has not yet completed.
                              properties:
                                name:
                                  description: name of the process that is responsible for
                                    initializing this object.
                                  type: string
                              required:
                              - name
                            type: array
                          result:
                            description: Status is a return value for calls that don't return
                              other objects.
                            properties:
                              apiVersion:
                                description: 'APIVersion defines the versioned schema of
                                  this representation of an object. Servers should convert
                                  recognized schemas to the latest internal value, and may
                                  reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                type: string
                              code:
                                description: Suggested HTTP return code for this status,
                                  0 if not set.
                                format: int32
                                type: integer
                              details:
                                description: StatusDetails is a set of additional properties
                                  that MAY be set by the server to provide additional information
                                  about a response. The Reason field of a Status object
                                  defines what attributes will be set. Clients must ignore
                                  fields that do not match the defined type of each attribute,
                                  and should assume that any attribute may be empty, invalid,
                                  or under defined.
                                properties:
                                  causes:
                                    description: The Causes array includes more details
                                      associated with the StatusReason failure. Not all
                                      StatusReasons may provide detailed causes.
                                    items:
                                      description: StatusCause provides more information
                                        about an api.Status failure, including cases when
                                        multiple errors are encountered.
                                      properties:
                                        field:
                                          description: |-
                                            The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
                                            Examples:
                                              "name" - the field "name" on the current resource
                                              "items[0].name" - the field "name" on the first array entry in "items"
                                          type: string
                                        message:
                                          description: A human-readable description of the
                                            cause of the error.  This field may be presented
                                            as-is to a reader.
                                          type: string
                                        reason:
                                          description: A machine-readable description of
                                            the cause of the error. If this value is empty
                                            there is no information available.
                                          type: string
                                    type: array
                                  group:
                                    description: The group attribute of the resource associated
                                      with the status StatusReason.
                                    type: string
                                  kind:
                                    description: 'The kind attribute of the resource associated
                                      with the status StatusReason. On some operations may
                                      differ from the requested resource Kind. More info:
                                      https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                    type: string
                                  name:
                                    description: The name attribute of the resource associated
                                      with the status StatusReason (when there is a single
                                      name which can be described).
                                    type: string
                                  retryAfterSeconds:
                                    description: If specified, the time in seconds before
                                      the operation should be retried. Some errors may indicate
                                      the client must take an alternate action - for those
                                      errors this field may indicate how long to wait before
                                      taking the alternate action.
                                    format: int32
                                    type: integer
                                  uid:
                                    description: 'UID of the resource. (when there is a
                                      single resource which can be described). More info:
                                      http://kubernetes.io/docs/user-guide/identifiers#uids'
                                    type: string
                              kind:
                                description: 'Kind is a string value representing the REST
                                  resource this object represents. Servers may infer this
                                  from the endpoint the client submits requests to. Cannot
                                  be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                type: string
                              message:
                                description: A human-readable description of the status
                                  of this operation.
                                type: string
                              metadata:
                                description: ListMeta describes metadata that synthetic
                                  resources must have, including lists and various status
                                  objects. A resource may have only one of {ObjectMeta,
                                  ListMeta}.
                                properties:
                                  continue:
                                    description: continue may be set if the user set a limit
                                      on the number of items returned, and indicates that
                                      the server has more data available. The value is opaque
                                      and may be used to issue another request to the endpoint
                                      that served this list to retrieve the next set of
                                      available objects. Continuing a list may not be possible
                                      if the server configuration has changed or more than
                                      a few minutes have passed. The resourceVersion field
                                      returned when using this continue value will be identical
                                      to the value in the first response.
                                    type: string
                                  resourceVersion:
                                    description: 'String that identifies the server''s internal
                                      version of this object that can be used by clients
                                      to determine when objects have changed. Value must
                                      be treated as opaque by clients and passed unmodified
                                      back to the server. Populated by the system. Read-only.
                                      More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                    type: string
                                  selfLink:
                                    description: selfLink is a URL representing this object.
                                      Populated by the system. Read-only.
                                    type: string
                              reason:
                                description: A machine-readable description of why this
                                  operation is in the "Failure" status. If this value is
                                  empty there is no information available. A Reason clarifies
                                  an HTTP status code but does not override it.
                                type: string
                              status:
                                description: 'Status of the operation. One of: "Success"
                                  or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                type: string
                        required:
                        - pending
                      labels:
                        description: 'Map of string keys and values that can be used to
                          organize and categorize (scope and select) objects. May match
                          selectors of replication controllers and services. More info:
                          http://kubernetes.io/docs/user-guide/labels'
                        type: object
                      name:
                        description: 'Name must be unique within a namespace. Is required
                          when creating resources, although some resources may allow a client
                          to request the generation of an appropriate name automatically.
                          Name is primarily intended for creation idempotence and configuration
                          definition. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                        type: string
                      namespace:
                        description: |-
                          Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
                          Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                        type: string
                      ownerReferences:
                        description: List of objects depended by this object. If ALL objects
                          in the list have been deleted, this object will be garbage collected.
                          If this object is managed by a controller, then an entry in this
                          list will point to this controller, with the controller field
                          set to true. There cannot be more than one managing controller.
                        items:
                          description: OwnerReference contains enough information to let
                            you identify an owning object. Currently, an owning object must
                            be in the same namespace, so there is no namespace field.
                          properties:
                            apiVersion:
                              description: API version of the referent.
                              type: string
                            blockOwnerDeletion:
                              description: If true, AND if the owner has the "foregroundDeletion"
                                finalizer, then the owner cannot be deleted from the key-value
                                store until this reference is removed. Defaults to false.
                                To set this field, a user needs "delete" permission of the
                                owner, otherwise 422 (Unprocessable Entity) will be returned.
                              type: boolean
                            controller:
                              description: If true, this reference points to the managing
                                controller.
                              type: boolean
                            kind:
                              description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                              type: string
                            name:
                              description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                              type: string
                            uid:
                              description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                              type: string
                          required:
                          - apiVersion
                          - kind
                          - name
                          - uid
                        type: array
                      resourceVersion:
                        description: |-
                          An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
                          Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                        type: string
                      selfLink:
                        description: SelfLink is a URL representing this object. Populated
                          by the system. Read-only.
                        type: string
                      uid:
                        description: |-
                          UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
                          Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                        type: string
                  remoteRead:
                    description: If specified, the remote_read spec. This is an experimental
                      feature, it may change in any upcoming release in a breaking way.
                    items:
                      description: RemoteReadSpec defines the remote_read configuration
                        for prometheus.
                      properties:
                        basicAuth:
                          description: 'BasicAuth allow an endpoint to authenticate over
                            basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                          properties:
                            password:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's key must
                                    be defined
                                  type: boolean
                              required:
                              - key
                            username:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's key must
                                    be defined
                                  type: boolean
                              required:
                              - key
                        bearerToken:
                          description: bearer token for remote read.
                          type: string
                        bearerTokenFile:
                          description: File to read bearer token for remote read.
                          type: string
                        proxyUrl:
                          description: Optional ProxyURL
                          type: string
                        readRecent:
                          description: Whether reads should be made for queries for time
                            ranges that the local storage should have complete data for.
                          type: boolean
                        remoteTimeout:
                          description: Timeout for requests to the remote read endpoint.
                          type: string
                        requiredMatchers:
                          description: An optional list of equality matchers which have
                            to be present in a selector to query the remote read endpoint.
                          type: object
                        tlsConfig:
                          description: TLSConfig specifies TLS configuration parameters.
                          properties:
                            caFile:
                              description: The CA cert to use for the targets.
                              type: string
                            certFile:
                              description: The client cert file for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: The client key file for the targets.
                              type: string
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                        url:
                          description: The URL of the endpoint to send samples to.
                          type: string
                      required:
                      - url
                    type: array
                  remoteWrite:
                    description: If specified, the remote_write spec. This is an experimental
                      feature, it may change in any upcoming release in a breaking way.
                    items:
                      description: RemoteWriteSpec defines the remote_write configuration
                        for prometheus.
                      properties:
                        basicAuth:
                          description: 'BasicAuth allow an endpoint to authenticate over
                            basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                          properties:
                            password:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's key must
                                    be defined
                                  type: boolean
                              required:
                              - key
                            username:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's key must
                                    be defined
                                  type: boolean
                              required:
                              - key
                        bearerToken:
                          description: File to read bearer token for remote write.
                          type: string
                        bearerTokenFile:
                          description: File to read bearer token for remote write.
                          type: string
                        proxyUrl:
                          description: Optional ProxyURL
                          type: string
                        queueConfig:
                          description: QueueConfig allows the tuning of remote_write queue_config
                            parameters. This object is referenced in the RemoteWriteSpec
                            object.
                          properties:
                            batchSendDeadline:
                              description: BatchSendDeadline is the maximum time a sample
                                will wait in buffer.
                              type: string
                            capacity:
                              description: Capacity is the number of samples to buffer per
                                shard before we start dropping them.
                              format: int32
                              type: integer
                            maxBackoff:
                              description: MaxBackoff is the maximum retry delay.
                              type: string
                            maxRetries:
                              description: MaxRetries is the maximum number of times to
                                retry a batch on recoverable errors.
                              format: int32
                              type: integer
                            maxSamplesPerSend:
                              description: MaxSamplesPerSend is the maximum number of samples
                                per send.
                              format: int32
                              type: integer
                            maxShards:
                              description: MaxShards is the maximum number of shards, i.e.
                                amount of concurrency.
                              format: int32
                              type: integer
                            minBackoff:
                              description: MinBackoff is the initial retry delay. Gets doubled
                                for every retry.
                              type: string
                        remoteTimeout:
                          description: Timeout for requests to the remote write endpoint.
                          type: string
                        tlsConfig:
                          description: TLSConfig specifies TLS configuration parameters.
                          properties:
                            caFile:
                              description: The CA cert to use for the targets.
                              type: string
                            certFile:
                              description: The client cert file for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: The client key file for the targets.
                              type: string
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                        url:
                          description: The URL of the endpoint to send samples to.
                          type: string
                        writeRelabelConfigs:
                          description: The list of remote write relabel configurations.
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of the
                              label set, being applied to samples before ingestion. It defines
                              `<metric_relabel_configs>`-section of Prometheus configuration.
                              More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source label
                                  values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted
                                  value is matched. defailt is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex replace
                                  is performed if the regular expression matches. Regex
                                  capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source
                                  label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing
                                  labels. Their content is concatenated using the configured
                                  separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written
                                  in a replace action. It is mandatory for replace actions.
                                  Regex capture groups are available.
                                type: string
                          type: array
                      required:
                      - url
                    type: array
                  replicas:
                    description: Number of instances to deploy for a Prometheus deployment.
                    format: int32
                    type: integer
                  resources:
                    description: ResourceRequirements describes the compute resource requirements.
                    properties:
                      limits:
                        description: 'Limits describes the maximum amount of compute resources
                          allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                      requests:
                        description: 'Requests describes the minimum amount of compute resources
                          required. If Requests is omitted for a container, it defaults
                          to Limits if that is explicitly specified, otherwise to an implementation-defined
                          value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                        type: object
                  retention:
                    description: Time duration Prometheus shall retain data for.
                    type: string
                  routePrefix:
                    description: The route prefix Prometheus registers HTTP handlers for.
                      This is useful, if using ExternalURL and a proxy is rewriting HTTP
                      routes of a request, and the actual ExternalURL is still true, but
                      the server serves requests under a different route prefix. For example
                      for use with `kubectl proxy`.
                    type: string
                  ruleNamespaceSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains
                            values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn, Exists and
                                DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator
                                is In or NotIn, the values array must be non-empty. If the
                                operator is Exists or DoesNotExist, the values array must
                                be empty. This array is replaced during a strategic merge
                                patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                                       of matchExpressions, whose key field is "key", the operator is
                                       "In", and the values array contains only "value". The requirements
                                       are ANDed.
                        type: object
                  ruleSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains
                            values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn, Exists and
                                DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator
                                is In or NotIn, the values array must be non-empty. If the
                                operator is Exists or DoesNotExist, the values array must
                                be empty. This array is replaced during a strategic merge
                                patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                                       of matchExpressions, whose key field is "key", the operator is
                                       "In", and the values array contains only "value". The requirements
                                       are ANDed.
                        type: object
                  scrapeInterval:
                    description: Interval between consecutive scrapes.
                    type: string
                  secrets:
                    description: Secrets is a list of Secrets in the same namespace as the
                      Prometheus object, which shall be mounted into the Prometheus Pods.
                      The Secrets are mounted into /etc/prometheus/secrets/<secret-name>.
                      Secrets changes after initial creation of a Prometheus object are
                      not reflected in the running Pods. To change the secrets mounted into
                      the Prometheus Pods, the object must be deleted and recreated with
                      the new list of secrets.
                    items:
                      type: string
                    type: array
                  securityContext:
                    description: PodSecurityContext holds pod-level security attributes
                      and common container settings. Some fields are also present in container.securityContext.  Field
                      values of container.securityContext take precedence over field values
                      of PodSecurityContext.
                    properties:
                      fsGroup:
                        description: |-
                          A special supplemental group that applies to all containers in a pod. Some volume types allow the Kubelet to change the ownership of that volume to be owned by the pod:
                          1. The owning GID will be the FSGroup 2. The setgid bit is set (new files created in the volume will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw----
                          If unset, the Kubelet will not modify the ownership and permissions of any volume.
                        format: int64
                        type: integer
                      runAsGroup:
                        description: The GID to run the entrypoint of the container process.
                          Uses runtime default if unset. May also be set in SecurityContext.  If
                          set in both SecurityContext and PodSecurityContext, the value
                          specified in SecurityContext takes precedence for that container.
                        format: int64
                        type: integer
                      runAsNonRoot:
                        description: Indicates that the container must run as a non-root
                          user. If true, the Kubelet will validate the image at runtime
                          to ensure that it does not run as UID 0 (root) and fail to start
                          the container if it does. If unset or false, no such validation
                          will be performed. May also be set in SecurityContext.  If set
                          in both SecurityContext and PodSecurityContext, the value specified
                          in SecurityContext takes precedence.
                        type: boolean
                      runAsUser:
                        description: The UID to run the entrypoint of the container process.
                          Defaults to user specified in image metadata if unspecified. May
                          also be set in SecurityContext.  If set in both SecurityContext
                          and PodSecurityContext, the value specified in SecurityContext
                          takes precedence for that container.
                        format: int64
                        type: integer
                      seLinuxOptions:
                        description: SELinuxOptions are the labels to be applied to the
                          container
                        properties:
                          level:
                            description: Level is SELinux level label that applies to the
                              container.
                            type: string
                          role:
                            description: Role is a SELinux role label that applies to the
                              container.
                            type: string
                          type:
                            description: Type is a SELinux type label that applies to the
                              container.
                            type: string
                          user:
                            description: User is a SELinux user label that applies to the
                              container.
                            type: string
                      supplementalGroups:
                        description: A list of groups applied to the first process run in
                          each container, in addition to the container's primary GID.  If
                          unspecified, no groups will be added to any container.
                        items:
                          format: int64
                          type: integer
                        type: array
                      sysctls:
                        description: Sysctls hold a list of namespaced sysctls used for
                          the pod. Pods with unsupported sysctls (by the container runtime)
                          might fail to launch.
                        items:
                          description: Sysctl defines a kernel parameter to be set
                          properties:
                            name:
                              description: Name of a property to set
                              type: string
                            value:
                              description: Value of a property to set
                              type: string
                          required:
                          - name
                          - value
                        type: array
                  serviceAccountName:
                    description: ServiceAccountName is the name of the ServiceAccount to
                      use to run the Prometheus Pods.
                    type: string
                  serviceMonitorNamespaceSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains
                            values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn, Exists and
                                DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator
                                is In or NotIn, the values array must be non-empty. If the
                                operator is Exists or DoesNotExist, the values array must
                                be empty. This array is replaced during a strategic merge
                                patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                                       of matchExpressions, whose key field is "key", the operator is
                                       "In", and the values array contains only "value". The requirements
                                       are ANDed.
                        type: object
                  serviceMonitorSelector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains
                            values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn, Exists and
                                DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator
                                is In or NotIn, the values array must be non-empty. If the
                                operator is Exists or DoesNotExist, the values array must
                                be empty. This array is replaced during a strategic merge
                                patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                                       of matchExpressions, whose key field is "key", the operator is
                                       "In", and the values array contains only "value". The requirements
                                       are ANDed.
                        type: object
                  storage:
                    description: StorageSpec defines the configured storage for a group
                      Prometheus servers.
                    properties:
                      class:
                        description: 'Name of the StorageClass to use when requesting storage
                          provisioning. More info: https://kubernetes.io/docs/user-guide/persistent-volumes/#storageclasses
                          DEPRECATED'
                        type: string
                      emptyDir:
                        description: Represents an empty directory for a pod. Empty directory
                          volumes support ownership management and SELinux relabeling.
                        properties:
                          medium:
                            description: 'What type of storage medium should back this directory.
                              The default is "" which means to use the node''s default medium.
                              Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir'
                            type: string
                          sizeLimit: {}
                      resources:
                        description: ResourceRequirements describes the compute resource
                          requirements.
                        properties:
                          limits:
                            description: 'Limits describes the maximum amount of compute
                              resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                          requests:
                            description: 'Requests describes the minimum amount of compute
                              resources required. If Requests is omitted for a container,
                              it defaults to Limits if that is explicitly specified, otherwise
                              to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                            type: object
                      selector:
                        description: A label selector is a label query over a set of resources.
                          The result of matchLabels and matchExpressions are ANDed. An empty
                          label selector matches all objects. A null label selector matches
                          no objects.
                        properties:
                          matchExpressions:
                            description: matchExpressions is a list of label selector requirements.
                              The requirements are ANDed.
                            items:
                              description: A label selector requirement is a selector that
                                contains values, a key, and an operator that relates the
                                key and values.
                              properties:
                                key:
                                  description: key is the label key that the selector applies
                                    to.
                                  type: string
                                operator:
                                  description: operator represents a key's relationship
                                    to a set of values. Valid operators are In, NotIn, Exists
                                    and DoesNotExist.
                                  type: string
                                values:
                                  description: values is an array of string values. If the
                                    operator is In or NotIn, the values array must be non-empty.
                                    If the operator is Exists or DoesNotExist, the values
                                    array must be empty. This array is replaced during a
                                    strategic merge patch.
                                  items:
                                    type: string
                                  type: array
                              required:
                              - key
                              - operator
                            type: array
                          matchLabels:
                            description: matchLabels is a map of {key,value} pairs. A single
                              {key,value} in the matchLabels map is equivalent to an element
                                           of matchExpressions, whose key field is "key", the operator
                                           is "In", and the values array contains only "value". The requirements
                                           are ANDed.
                            type: object
                      volumeClaimTemplate:
                        description: PersistentVolumeClaim is a user's request for and claim
                          to a persistent volume
                        properties:
                          apiVersion:
                            description: 'APIVersion defines the versioned schema of this
                              representation of an object. Servers should convert recognized
                              schemas to the latest internal value, and may reject unrecognized
                              values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                            type: string
                          kind:
                            description: 'Kind is a string value representing the REST resource
                              this object represents. Servers may infer this from the endpoint
                              the client submits requests to. Cannot be updated. In CamelCase.
                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                            type: string
                          metadata:
                            description: ObjectMeta is metadata that all persisted resources
                              must have, which includes all objects users must create.
                            properties:
                              annotations:
                                description: 'Annotations is an unstructured key value map
                                  stored with a resource that may be set by external tools
                                  to store and retrieve arbitrary metadata. They are not
                                  queryable and should be preserved when modifying objects.
                                  More info: http://kubernetes.io/docs/user-guide/annotations'
                                type: object
                              clusterName:
                                description: The name of the cluster which the object belongs
                                  to. This is used to distinguish resources with same name
                                  and namespace in different clusters. This field is not
                                  set anywhere right now and apiserver is going to ignore
                                  it if set in create or update request.
                                type: string
                              creationTimestamp:
                                description: Time is a wrapper around time.Time which supports
                                  correct marshaling to YAML and JSON.  Wrappers are provided
                                  for many of the factory methods that the time package
                                  offers.
                                format: date-time
                                type: string
                              deletionGracePeriodSeconds:
                                description: Number of seconds allowed for this object to
                                  gracefully terminate before it will be removed from the
                                  system. Only set when deletionTimestamp is also set. May
                                  only be shortened. Read-only.
                                format: int64
                                type: integer
                              deletionTimestamp:
                                description: Time is a wrapper around time.Time which supports
                                  correct marshaling to YAML and JSON.  Wrappers are provided
                                  for many of the factory methods that the time package
                                  offers.
                                format: date-time
                                type: string
                              finalizers:
                                description: Must be empty before the object is deleted
                                  from the registry. Each entry is an identifier for the
                                  responsible component that will remove the entry from
                                  the list. If the deletionTimestamp of the object is non-nil,
                                  entries in this list can only be removed.
                                items:
                                  type: string
                                type: array
                              generateName:
                                description: |-
                                  GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.
                                  If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).
                                  Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
                                type: string
                              generation:
                                description: A sequence number representing a specific generation
                                  of the desired state. Populated by the system. Read-only.
                                format: int64
                                type: integer
                              initializers:
                                description: Initializers tracks the progress of initialization.
                                properties:
                                  pending:
                                    description: Pending is a list of initializers that
                                      must execute in order before this object is visible.
                                      When the last pending initializer is removed, and
                                      no failing result is set, the initializers struct
                                      will be set to nil and the object is considered as
                                      initialized and visible to all clients.
                                    items:
                                      description: Initializer is information about an initializer
                                        that has not yet completed.
                                      properties:
                                        name:
                                          description: name of the process that is responsible
                                            for initializing this object.
                                          type: string
                                      required:
                                      - name
                                    type: array
                                  result:
                                    description: Status is a return value for calls that
                                      don't return other objects.
                                    properties:
                                      apiVersion:
                                        description: 'APIVersion defines the versioned schema
                                          of this representation of an object. Servers should
                                          convert recognized schemas to the latest internal
                                          value, and may reject unrecognized values. More
                                          info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources'
                                        type: string
                                      code:
                                        description: Suggested HTTP return code for this
                                          status, 0 if not set.
                                        format: int32
                                        type: integer
                                      details:
                                        description: StatusDetails is a set of additional
                                          properties that MAY be set by the server to provide
                                          additional information about a response. The Reason
                                          field of a Status object defines what attributes
                                          will be set. Clients must ignore fields that do
                                          not match the defined type of each attribute,
                                          and should assume that any attribute may be empty,
                                          invalid, or under defined.
                                        properties:
                                          causes:
                                            description: The Causes array includes more
                                              details associated with the StatusReason failure.
                                              Not all StatusReasons may provide detailed
                                              causes.
                                            items:
                                              description: StatusCause provides more information
                                                about an api.Status failure, including cases
                                                when multiple errors are encountered.
                                              properties:
                                                field:
                                                  description: |-
                                                    The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.
                                                    Examples:
                                                      "name" - the field "name" on the current resource
                                                      "items[0].name" - the field "name" on the first array entry in "items"
                                                  type: string
                                                message:
                                                  description: A human-readable description
                                                    of the cause of the error.  This field
                                                    may be presented as-is to a reader.
                                                  type: string
                                                reason:
                                                  description: A machine-readable description
                                                    of the cause of the error. If this value
                                                    is empty there is no information available.
                                                  type: string
                                            type: array
                                          group:
                                            description: The group attribute of the resource
                                              associated with the status StatusReason.
                                            type: string
                                          kind:
                                            description: 'The kind attribute of the resource
                                              associated with the status StatusReason. On
                                              some operations may differ from the requested
                                              resource Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                            type: string
                                          name:
                                            description: The name attribute of the resource
                                              associated with the status StatusReason (when
                                              there is a single name which can be described).
                                            type: string
                                          retryAfterSeconds:
                                            description: If specified, the time in seconds
                                              before the operation should be retried. Some
                                              errors may indicate the client must take an
                                              alternate action - for those errors this field
                                              may indicate how long to wait before taking
                                              the alternate action.
                                            format: int32
                                            type: integer
                                          uid:
                                            description: 'UID of the resource. (when there
                                              is a single resource which can be described).
                                              More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                            type: string
                                      kind:
                                        description: 'Kind is a string value representing
                                          the REST resource this object represents. Servers
                                          may infer this from the endpoint the client submits
                                          requests to. Cannot be updated. In CamelCase.
                                          More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                        type: string
                                      message:
                                        description: A human-readable description of the
                                          status of this operation.
                                        type: string
                                      metadata:
                                        description: ListMeta describes metadata that synthetic
                                                       resources must have, including lists and various
                                                       status objects. A resource may have only one of
                                          {ObjectMeta, ListMeta}.
                                        properties:
                                          continue:
                                            description: continue may be set if the user
                                              set a limit on the number of items returned,
                                              and indicates that the server has more data
                                              available. The value is opaque and may be
                                              used to issue another request to the endpoint
                                              that served this list to retrieve the next
                                              set of available objects. Continuing a list
                                              may not be possible if the server configuration
                                              has changed or more than a few minutes have
                                              passed. The resourceVersion field returned
                                              when using this continue value will be identical
                                              to the value in the first response.
                                            type: string
                                          resourceVersion:
                                            description: 'String that identifies the server''s
                                              internal version of this object that can be
                                              used by clients to determine when objects
                                              have changed. Value must be treated as opaque
                                              by clients and passed unmodified back to the
                                              server. Populated by the system. Read-only.
                                              More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency'
                                            type: string
                                          selfLink:
                                            description: selfLink is a URL representing
                                              this object. Populated by the system. Read-only.
                                            type: string
                                      reason:
                                        description: A machine-readable description of why
                                          this operation is in the "Failure" status. If
                                          this value is empty there is no information available.
                                          A Reason clarifies an HTTP status code but does
                                          not override it.
                                        type: string
                                      status:
                                        description: 'Status of the operation. One of: "Success"
                                          or "Failure". More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status'
                                        type: string
                                required:
                                - pending
                              labels:
                                description: 'Map of string keys and values that can be
                                  used to organize and categorize (scope and select) objects.
                                  May match selectors of replication controllers and services.
                                  More info: http://kubernetes.io/docs/user-guide/labels'
                                type: object
                              name:
                                description: 'Name must be unique within a namespace. Is
                                  required when creating resources, although some resources
                                  may allow a client to request the generation of an appropriate
                                  name automatically. Name is primarily intended for creation
                                  idempotence and configuration definition. Cannot be updated.
                                  More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                type: string
                              namespace:
                                description: |-
                                  Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.
                                  Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
                                type: string
                              ownerReferences:
                                description: List of objects depended by this object. If
                                  ALL objects in the list have been deleted, this object
                                  will be garbage collected. If this object is managed by
                                  a controller, then an entry in this list will point to
                                  this controller, with the controller field set to true.
                                  There cannot be more than one managing controller.
                                items:
                                  description: OwnerReference contains enough information
                                    to let you identify an owning object. Currently, an
                                    owning object must be in the same namespace, so there
                                    is no namespace field.
                                  properties:
                                    apiVersion:
                                      description: API version of the referent.
                                      type: string
                                    blockOwnerDeletion:
                                      description: If true, AND if the owner has the "foregroundDeletion"
                                                     finalizer, then the owner cannot be deleted from
                                                     the key-value store until this reference is removed.
                                                     Defaults to false. To set this field, a user needs
                                                     "delete" permission of the owner, otherwise 422
                                                     (Unprocessable Entity) will be returned.
                                      type: boolean
                                    controller:
                                      description: If true, this reference points to the
                                        managing controller.
                                      type: boolean
                                    kind:
                                      description: 'Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds'
                                      type: string
                                    name:
                                      description: 'Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                                      type: string
                                    uid:
                                      description: 'UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids'
                                      type: string
                                  required:
                                  - apiVersion
                                  - kind
                                  - name
                                  - uid
                                type: array
                              resourceVersion:
                                description: |-
                                  An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.
                                  Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
                                type: string
                              selfLink:
                                description: SelfLink is a URL representing this object.
                                  Populated by the system. Read-only.
                                type: string
                              uid:
                                description: |-
                                  UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.
                                  Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
                                type: string
                          spec:
                            description: PersistentVolumeClaimSpec describes the common
                              attributes of storage devices and allows a Source for provider-specific
                              attributes
                            properties:
                              accessModes:
                                description: 'AccessModes contains the desired access modes
                                  the volume should have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              resources:
                                description: ResourceRequirements describes the compute
                                  resource requirements.
                                properties:
                                  limits:
                                    description: 'Limits describes the maximum amount of
                                      compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                                  requests:
                                    description: 'Requests describes the minimum amount
                                      of compute resources required. If Requests is omitted
                                      for a container, it defaults to Limits if that is
                                      explicitly specified, otherwise to an implementation-defined
                                      value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/'
                                    type: object
                              selector:
                                description: A label selector is a label query over a set
                                  of resources. The result of matchLabels and matchExpressions
                                  are ANDed. An empty label selector matches all objects.
                                  A null label selector matches no objects.
                                properties:
                                  matchExpressions:
                                    description: matchExpressions is a list of label selector
                                      requirements. The requirements are ANDed.
                                    items:
                                      description: A label selector requirement is a selector
                                        that contains values, a key, and an operator that
                                        relates the key and values.
                                      properties:
                                        key:
                                          description: key is the label key that the selector
                                            applies to.
                                          type: string
                                        operator:
                                          description: operator represents a key's relationship
                                            to a set of values. Valid operators are In,
                                            NotIn, Exists and DoesNotExist.
                                          type: string
                                        values:
                                          description: values is an array of string values.
                                            If the operator is In or NotIn, the values array
                                            must be non-empty. If the operator is Exists
                                            or DoesNotExist, the values array must be empty.
                                            This array is replaced during a strategic merge
                                            patch.
                                          items:
                                            type: string
                                          type: array
                                      required:
                                      - key
                                      - operator
                                    type: array
                                  matchLabels:
                                    description: matchLabels is a map of {key,value} pairs.
                                      A single {key,value} in the matchLabels map is equivalent
                                      to an element of matchExpressions, whose key field
                                      is "key", the operator is "In", and the values array
                                      contains only "value". The requirements are ANDed.
                                    type: object
                              storageClassName:
                                description: 'Name of the StorageClass required by the claim.
                                  More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1'
                                type: string
                              volumeMode:
                                description: volumeMode defines what type of volume is required
                                  by the claim. Value of Filesystem is implied when not
                                  included in claim spec. This is an alpha feature and may
                                  change in the future.
                                type: string
                              volumeName:
                                description: VolumeName is the binding reference to the
                                  PersistentVolume backing this claim.
                                type: string
                          status:
                            description: PersistentVolumeClaimStatus is the current status
                              of a persistent volume claim.
                            properties:
                              accessModes:
                                description: 'AccessModes contains the actual access modes
                                  the volume backing the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1'
                                items:
                                  type: string
                                type: array
                              capacity:
                                description: Represents the actual resources of the underlying
                                  volume.
                                type: object
                              conditions:
                                description: Current Condition of persistent volume claim.
                                  If underlying persistent volume is being resized then
                                  the Condition will be set to 'ResizeStarted'.
                                items:
                                  description: PersistentVolumeClaimCondition contails details
                                    about state of pvc
                                  properties:
                                    lastProbeTime:
                                      description: Time is a wrapper around time.Time which
                                        supports correct marshaling to YAML and JSON.  Wrappers
                                        are provided for many of the factory methods that
                                        the time package offers.
                                      format: date-time
                                      type: string
                                    lastTransitionTime:
                                      description: Time is a wrapper around time.Time which
                                        supports correct marshaling to YAML and JSON.  Wrappers
                                        are provided for many of the factory methods that
                                        the time package offers.
                                      format: date-time
                                      type: string
                                    message:
                                      description: Human-readable message indicating details
                                        about last transition.
                                      type: string
                                    reason:
                                      description: Unique, this should be a short, machine
                                        understandable string that gives the reason for
                                        condition's last transition. If it reports "ResizeStarted"
                                        that means the underlying persistent volume is being
                                        resized.
                                      type: string
                                    status:
                                      type: string
                                    type:
                                      type: string
                                  required:
                                  - type
                                  - status
                                type: array
                              phase:
                                description: Phase represents the current phase of PersistentVolumeClaim.
                                type: string
                  tag:
                    description: Tag of Prometheus container image to be deployed. Defaults
                      to the value of `version`.
                    type: string
                  thanos:
                    description: ThanosSpec defines parameters for a Prometheus server within
                      a Thanos deployment.
                    properties:
                      baseImage:
                        description: Thanos base image if other than default.
                        type: string
                      gcs:
                        description: ThanosGCSSpec defines parameters for use of Google
                          Cloud Storage (GCS) with Thanos.
                        properties:
                          bucket:
                            description: Google Cloud Storage bucket name for stored blocks.
                              If empty it won't store any block inside Google Cloud Storage.
                            type: string
                      peers:
                        description: Peers is a DNS name for Thanos to discover peers through.
                        type: string
                      s3:
                        description: ThanosSpec defines parameters for of AWS Simple Storage
                          Service (S3) with Thanos. (S3 compatible services apply as well)
                        properties:
                          accessKey:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or it's key must
                                  be defined
                                type: boolean
                            required:
                            - key
                          bucket:
                            description: S3-Compatible API bucket name for stored blocks.
                            type: string
                          endpoint:
                            description: S3-Compatible API endpoint for stored blocks.
                            type: string
                          insecure:
                            description: Whether to use an insecure connection with an S3-Compatible
                              API.
                            type: boolean
                          secretKey:
                            description: SecretKeySelector selects a key of a Secret.
                            properties:
                              key:
                                description: The key of the secret to select from.  Must
                                  be a valid secret key.
                                type: string
                              name:
                                description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                type: string
                              optional:
                                description: Specify whether the Secret or it's key must
                                  be defined
                                type: boolean
                            required:
                            - key
                          signatureVersion2:
                            description: Whether to use S3 Signature Version 2; otherwise
                              Signature Version 4 will be used.
                            type: boolean
                      tag:
                        description: Tag of Thanos sidecar container image to be deployed.
                          Defaults to the value of `version`.
                        type: string
                      version:
                        description: Version describes the version of Thanos to use.
                        type: string
                  tolerations:
                    description: If specified, the pod's tolerations.
                    items:
                      description: The pod this Toleration is attached to tolerates any
                        taint that matches the triple <key,value,effect> using the matching
                        operator <operator>.
                      properties:
                        effect:
                          description: Effect indicates the taint effect to match. Empty
                            means match all taint effects. When specified, allowed values
                            are NoSchedule, PreferNoSchedule and NoExecute.
                          type: string
                        key:
                          description: Key is the taint key that the toleration applies
                            to. Empty means match all taint keys. If the key is empty, operator
                            must be Exists; this combination means to match all values and
                            all keys.
                          type: string
                        operator:
                          description: Operator represents a key's relationship to the value.
                            Valid operators are Exists and Equal. Defaults to Equal. Exists
                            is equivalent to wildcard for value, so that a pod can tolerate
                            all taints of a particular category.
                          type: string
                        tolerationSeconds:
                          description: TolerationSeconds represents the period of time the
                            toleration (which must be of effect NoExecute, otherwise this
                            field is ignored) tolerates the taint. By default, it is not
                            set, which means tolerate the taint forever (do not evict).
                            Zero and negative values will be treated as 0 (evict immediately)
                            by the system.
                          format: int64
                          type: integer
                        value:
                          description: Value is the taint value the toleration matches to.
                            If the operator is Exists, the value should be empty, otherwise
                            just a regular string.
                          type: string
                    type: array
                  version:
                    description: Version of Prometheus to be deployed.
                    type: string
              status:
                description: 'Most recent observed status of the Prometheus cluster. Read-only.
                  Not included when requesting from the apiserver, only from the Prometheus
                  Operator API itself. More info: https://github.com/kubernetes/community/blob/master/contributors/devel/api-conventions.md#spec-and-status'
                properties:
                  availableReplicas:
                    description: Total number of available pods (ready for at least minReadySeconds)
                      targeted by this Prometheus deployment.
                    format: int32
                    type: integer
                  paused:
                    description: Represents whether any actions on the underlaying managed
                      objects are being performed. Only delete actions will be performed.
                    type: boolean
                  replicas:
                    description: Total number of non-terminated pods targeted by this Prometheus
                      deployment (their labels match the selector).
                    format: int32
                    type: integer
                  unavailableReplicas:
                    description: Total number of unavailable pods targeted by this Prometheus
                      deployment.
                    format: int32
                    type: integer
                  updatedReplicas:
                    description: Total number of non-terminated pods targeted by this Prometheus
                      deployment that have the desired version spec.
                    format: int32
                    type: integer
                required:
                - paused
                - replicas
                - updatedReplicas
                - availableReplicas
                - unavailableReplicas
        version: v1
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: prometheusrules.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: PrometheusRule
          plural: prometheusrules
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              spec:
                description: PrometheusRuleSpec contains specification parameters for a
                  Rule.
                properties:
                  groups:
                    description: Content of Prometheus rule file
                    items:
                      description: RuleGroup is a list of sequentially evaluated recording
                        and alerting rules.
                      properties:
                        interval:
                          type: string
                        name:
                          type: string
                        rules:
                          items:
                            description: Rule describes an alerting or recording rule.
                            properties:
                              alert:
                                type: string
                              annotations:
                                type: object
                              expr:
                                type: string
                              for:
                                type: string
                              labels:
                                type: object
                              record:
                                type: string
                            required:
                            - expr
                          type: array
                      required:
                      - name
                      - rules
                    type: array
        version: v1
      
    - apiVersion: apiextensions.k8s.io/v1beta1
      kind: CustomResourceDefinition
      metadata:
        name: servicemonitors.monitoring.coreos.com
      spec:
        group: monitoring.coreos.com
        names:
          kind: ServiceMonitor
          plural: servicemonitors
        scope: Namespaced
        validation:
          openAPIV3Schema:
            properties:
              spec:
                description: ServiceMonitorSpec contains specification parameters for a
                  ServiceMonitor.
                properties:
                  endpoints:
                    description: A list of endpoints allowed as part of this ServiceMonitor.
                    items:
                      description: Endpoint defines a scrapeable endpoint serving Prometheus
                        metrics.
                      properties:
                        basicAuth:
                          description: 'BasicAuth allow an endpoint to authenticate over
                            basic authentication More info: https://prometheus.io/docs/operating/configuration/#endpoints'
                          properties:
                            password:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's key must
                                    be defined
                                  type: boolean
                              required:
                              - key
                            username:
                              description: SecretKeySelector selects a key of a Secret.
                              properties:
                                key:
                                  description: The key of the secret to select from.  Must
                                    be a valid secret key.
                                  type: string
                                name:
                                  description: 'Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names'
                                  type: string
                                optional:
                                  description: Specify whether the Secret or it's key must
                                    be defined
                                  type: boolean
                              required:
                              - key
                        bearerTokenFile:
                          description: File to read bearer token for scraping targets.
                          type: string
                        honorLabels:
                          description: HonorLabels chooses the metric's labels on collisions
                            with target labels.
                          type: boolean
                        interval:
                          description: Interval at which metrics should be scraped
                          type: string
                        metricRelabelings:
                          description: MetricRelabelConfigs to apply to samples before ingestion.
                          items:
                            description: 'RelabelConfig allows dynamic rewriting of the
                              label set, being applied to samples before ingestion. It defines
                              `<metric_relabel_configs>`-section of Prometheus configuration.
                              More info: https://prometheus.io/docs/prometheus/latest/configuration/configuration/#metric_relabel_configs'
                            properties:
                              action:
                                description: Action to perform based on regex matching.
                                  Default is 'replace'
                                type: string
                              modulus:
                                description: Modulus to take of the hash of the source label
                                  values.
                                format: int64
                                type: integer
                              regex:
                                description: Regular expression against which the extracted
                                  value is matched. defailt is '(.*)'
                                type: string
                              replacement:
                                description: Replacement value against which a regex replace
                                  is performed if the regular expression matches. Regex
                                  capture groups are available. Default is '$1'
                                type: string
                              separator:
                                description: Separator placed between concatenated source
                                  label values. default is ';'.
                                type: string
                              sourceLabels:
                                description: The source labels select values from existing
                                  labels. Their content is concatenated using the configured
                                  separator and matched against the configured regular expression
                                  for the replace, keep, and drop actions.
                                items:
                                  type: string
                                type: array
                              targetLabel:
                                description: Label to which the resulting value is written
                                  in a replace action. It is mandatory for replace actions.
                                  Regex capture groups are available.
                                type: string
                          type: array
                        params:
                          description: Optional HTTP URL parameters
                          type: object
                        path:
                          description: HTTP path to scrape for metrics.
                          type: string
                        port:
                          description: Name of the service port this endpoint refers to.
                            Mutually exclusive with targetPort.
                          type: string
                        proxyUrl:
                          description: ProxyURL eg http://proxyserver:2195 Directs scrapes
                            to proxy through this endpoint.
                          type: string
                        scheme:
                          description: HTTP scheme to use for scraping.
                          type: string
                        scrapeTimeout:
                          description: Timeout after which the scrape is ended
                          type: string
                        targetPort:
                          anyOf:
                          - type: string
                          - type: integer
                        tlsConfig:
                          description: TLSConfig specifies TLS configuration parameters.
                          properties:
                            caFile:
                              description: The CA cert to use for the targets.
                              type: string
                            certFile:
                              description: The client cert file for the targets.
                              type: string
                            insecureSkipVerify:
                              description: Disable target certificate validation.
                              type: boolean
                            keyFile:
                              description: The client key file for the targets.
                              type: string
                            serverName:
                              description: Used to verify the hostname for the targets.
                              type: string
                    type: array
                  jobLabel:
                    description: The label to use to retrieve the job name from.
                    type: string
                  namespaceSelector:
                    description: A selector for selecting namespaces either selecting all
                      namespaces or a list of namespaces.
                    properties:
                      any:
                        description: Boolean describing whether all namespaces are selected
                          in contrast to a list restricting them.
                        type: boolean
                      matchNames:
                        description: List of namespace names.
                        items:
                          type: string
                        type: array
                  selector:
                    description: A label selector is a label query over a set of resources.
                      The result of matchLabels and matchExpressions are ANDed. An empty
                      label selector matches all objects. A null label selector matches
                      no objects.
                    properties:
                      matchExpressions:
                        description: matchExpressions is a list of label selector requirements.
                          The requirements are ANDed.
                        items:
                          description: A label selector requirement is a selector that contains
                            values, a key, and an operator that relates the key and values.
                          properties:
                            key:
                              description: key is the label key that the selector applies
                                to.
                              type: string
                            operator:
                              description: operator represents a key's relationship to a
                                set of values. Valid operators are In, NotIn, Exists and
                                DoesNotExist.
                              type: string
                            values:
                              description: values is an array of string values. If the operator
                                is In or NotIn, the values array must be non-empty. If the
                                operator is Exists or DoesNotExist, the values array must
                                be empty. This array is replaced during a strategic merge
                                patch.
                              items:
                                type: string
                              type: array
                          required:
                          - key
                          - operator
                        type: array
                      matchLabels:
                        description: matchLabels is a map of {key,value} pairs. A single
                          {key,value} in the matchLabels map is equivalent to an element
                                       of matchExpressions, whose key field is "key", the operator is
                                       "In", and the values array contains only "value". The requirements
                                       are ANDed.
                        type: object
                  targetLabels:
                    description: TargetLabels transfers labels on the Kubernetes Service
                      onto the target.
                    items:
                      type: string
                    type: array
                required:
                - endpoints
                - selector
        version: v1
      
  clusterServiceVersions: |-
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: amqstreams.v1.0.0.beta
        namespace: placeholder
        annotations:
          alm-examples: '[{"apiVersion":"kafka.strimzi.io/v1alpha1","kind":"Kafka","metadata":{"name":"my-cluster"},"spec":{"kafka":{"replicas":3,"listeners":{"plain":{},"tls":{}},"config":{"offsets.topic.replication.factor":3,"transaction.state.log.replication.factor":3,"transaction.state.log.min.isr":2},"storage":{"type":"ephemeral"}},"zookeeper":{"replicas":3,"storage":{"type":"ephemeral"}},"entityOperator":{"topicOperator":{},"userOperator":{}}}}, {"apiVersion":"kafka.strimzi.io/v1alpha1","kind":"KafkaConnect","metadata":{"name":"my-connect-cluster"},"spec":{"replicas":1,"bootstrapServers":"my-cluster-kafka-bootstrap:9093","tls":{"trustedCertificates":[{"secretName":"my-cluster-cluster-ca-cert","certificate":"ca.crt"}]}}}, {"apiVersion":"kafka.strimzi.io/v1alpha1","kind":"KafkaConnectS2I","metadata":{"name":"my-connect-cluster"},"spec":{"replicas":1,"bootstrapServers":"my-cluster-kafka-bootstrap:9093","tls":{"trustedCertificates":[{"secretName":"my-cluster-cluster-ca-cert","certificate":"ca.crt"}]}}}, {"apiVersion":"kafka.strimzi.io/v1alpha1","kind":"KafkaTopic","metadata":{"name":"my-topic","labels":{"strimzi.io/cluster":"my-cluster"}},"spec":{"partitions":10,"replicas":3,"config":{"retention.ms":604800000,"segment.bytes":1073741824}}}, {"apiVersion":"kafka.strimzi.io/v1alpha1","kind":"KafkaUser","metadata":{"name":"my-user","labels":{"strimzi.io/cluster":"my-cluster"}},"spec":{"authentication":{"type":"tls"},"authorization":{"type":"simple","acls":[{"resource":{"type":"topic","name":"my-topic","patternType":"literal"},"operation":"Read","host":"*"},{"resource":{"type":"topic","name":"my-topic","patternType":"literal"},"operation":"Describe","host":"*"},{"resource":{"type":"group","name":"my-group","patternType":"literal"},"operation":"Read","host":"*"},{"resource":{"type":"topic","name":"my-topic","patternType":"literal"},"operation":"Write","host":"*"},{"resource":{"type":"topic","name":"my-topic","patternType":"literal"},"operation":"Create","host":"*"},{"resource":{"type":"topic","name":"my-topic","patternType":"literal"},"operation":"Describe","host":"*"}]}}}]'
      spec:
        displayName: AMQ Streams
        description: |
              **Red Hat AMQ Streams** is a massively scalable, distributed, and high performance data streaming platform based on the Apache Kafka project. 
              AMQ Streams provides an event streaming backbone that allows microservices and other application components to exchange data with extremely high throughput and low latency. 
              
              **The core capabilities include**
              * A pub/sub messaging model, similar to a traditional enterprise messaging system, in which application components publish and consume events to/from an ordered stream
              * The long term, fault-tolerant storage of events
              * The ability for a consumer to replay streams of events
              * The ability to partition topics for horizontal scalability
      
              # Before you start
      
              1\. Create AMQ Streams Cluster Roles
              ```
              $ oc apply -f http://amq.io/amqstreams/rbac.yaml
              ```
              2\. Create following bindings
              ```
              $ oc adm policy add-cluster-role-to-user strimzi-cluster-operator -z strimzi-cluster-operator --namespace <namespace>
              $ oc adm policy add-cluster-role-to-user strimzi-kafka-broker -z strimzi-cluster-operator --namespace <namespace>
              ```
        keywords: ['amq', 'streams', 'messaging', 'kafka', 'streaming']
        version: 1.0.0-Beta
        maturity: beta
        maintainers:
        - name: Red Hat, Inc.
          email: customerservice@redhat.com
        provider:
          name: Red Hat, Inc.
        links:
        - name: Product Page
          url: https://access.redhat.com/products/red-hat-amq-streams
        - name: Documentation
          url: https://access.redhat.com/documentation/en-us/red_hat_amq_streams/1.0-beta/html-single/using_amq_streams/
        icon:
        - base64data: 
          mediatype: image/png
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: strimzi-cluster-operator
              rules:
              - apiGroups:
                - ""
                resources:
                - serviceaccounts
                verbs:
                - get
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - rbac.authorization.k8s.io
                resources:
                - clusterrolebindings
                - rolebindings
                verbs:
                - get
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - ""
                resources:
                - configmaps
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - kafka.strimzi.io
                resources:
                - kafkas
                - kafkaconnects
                - kafkaconnects2is
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - ""
                resources:
                - pods
                verbs:
                - get
                - list
                - watch
                - delete
              - apiGroups:
                - ""
                resources:
                - services
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - ""
                resources:
                - endpoints
                verbs:
                - get
                - list
                - watch
              - apiGroups:
                - extensions
                resources:
                - deployments
                - deployments/scale
                - replicasets
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - apps
                resources:
                - deployments
                - deployments/scale
                - deployments/status
                - statefulsets
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - ""
                resources:
                - events
                verbs:
                - create
              - apiGroups:
                - extensions
                resources:
                - replicationcontrollers
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - apps.openshift.io
                resources:
                - deploymentconfigs
                - deploymentconfigs/scale
                - deploymentconfigs/status
                - deploymentconfigs/finalizers
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - build.openshift.io
                resources:
                - buildconfigs
                - builds
                verbs:
                - create
                - delete
                - get
                - list
                - patch
                - watch
                - update
              - apiGroups:
                - image.openshift.io
                resources:
                - imagestreams
                - imagestreams/status
                verbs:
                - create
                - delete
                - get
                - list
                - watch
                - patch
                - update
              - apiGroups:
                - ""
                resources:
                - replicationcontrollers
                verbs:
                - get
                - list
                - watch
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - ""
                resources:
                - secrets
                verbs:
                - get
                - list
                - create
                - delete
                - patch
                - update
              - apiGroups:
                - ""
                resources:
                - nodes
                verbs:
                - get
              - apiGroups:
                - kafka.strimzi.io
                resources:
                - kafkatopics
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                - delete
              - apiGroups:
                - ""
                resources:
                - events
                verbs:
                - create
              - apiGroups:
                - kafka.strimzi.io
                resources:
                - kafkausers
                verbs:
                - get
                - list
                - watch
                - create
                - patch
                - update
                - delete
            deployments:
            - name: strimzi-cluster-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: strimzi-cluster-operator-alm-owned
                template:
                  metadata:
                    name: strimzi-cluster-operator-alm-owned
                    labels:
                      name: strimzi-cluster-operator-alm-owned
                  spec:
                    serviceAccountName: strimzi-cluster-operator
                    containers:
                    - name: cluster-operator
                      image: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-clusteroperator-openshift:1.0.0-beta
                      env:
                        - name: STRIMZI_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: STRIMZI_FULL_RECONCILIATION_INTERVAL_MS
                          value: "120000"
                        - name: STRIMZI_OPERATION_TIMEOUT_MS
                          value: "300000"
                        - name: STRIMZI_DEFAULT_ZOOKEEPER_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-zookeeper-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_KAFKA_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-kafka-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_KAFKA_CONNECT_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-kafkaconnect-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_KAFKA_CONNECT_S2I_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-kafkaconnects2i-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_TOPIC_OPERATOR_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-topicoperator-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_USER_OPERATOR_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-useroperator-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_KAFKA_INIT_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-kafkainit-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_TLS_SIDECAR_ZOOKEEPER_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-zookeeperstunnel-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_TLS_SIDECAR_KAFKA_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-kafkastunnel-openshift:1.0.0-beta
                        - name: STRIMZI_DEFAULT_TLS_SIDECAR_ENTITY_OPERATOR_IMAGE
                          value: registry.access.redhat.com/amqstreams-1-tech-preview/amqstreams10-entityoperatorstunnel-openshift:1.0.0-beta
                        - name: STRIMZI_LOG_LEVEL
                          value: INFO
        customresourcedefinitions:
          owned:
          - name: kafkas.kafka.strimzi.io
            version: v1alpha1
            kind: Kafka
            displayName: Kafka
            description: Represents a Kafka cluster
            specDescriptors:
              - description: The desired number of Kafka brokers.
                displayName: Kafka Brokers
                path: kafka.replicas
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: The type of storage used by Kafka brokers
                displayName: Kafka storage
                path: kafka.storage.type
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: Limits describes the minimum/maximum amount of compute resources required/allowed
                displayName: Kafka Resource Requirements
                path: kafka.resources
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
              - description: The desired number of Zookeeper nodes.
                displayName: Zookeeper Nodes
                path: zookeeper.replicas
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: The type of storage used by Zookeeper nodes
                displayName: Zookeeper storage
                path: zookeeper.storage.type
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: Limits describes the minimum/maximum amount of compute resources required/allowed
                displayName: Zookeeper Resource Requirements
                path: zookeeper.resources
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
          - name: kafkaconnects.kafka.strimzi.io
            version: v1alpha1
            kind: KafkaConnect
            displayName: Kafka Connect
            description: Represents a Kafka Connect cluster
            specDescriptors:
              - description: The desired number of Kafka Connect nodes.
                displayName: Connect nodes
                path: replicas
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podCount'
              - description: The address of the bootstrap server
                displayName: Bootstrap server
                path: bootstrapServers
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: Limits describes the minimum/maximum amount of compute resources required/allowed
                displayName: Resource Requirements
                path: resources
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
          - name: kafkaconnects2is.kafka.strimzi.io
            version: v1alpha1
            kind: KafkaConnectS2I
            displayName: Kafka Connect S2I
            description: Represents a Kafka Connect cluster with Source 2 Image support
            specDescriptors:
              - description: The desired number of Kafka Connect nodes.
                displayName: Connect nodes
                path: replicas
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podCount'
              - description: The address of the bootstrap server
                displayName: Bootstrap server
                path: bootstrapServers
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: Limits describes the minimum/maximum amount of compute resources required/allowed
                displayName: Resource Requirements
                path: resources
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
          - name: kafkatopics.kafka.strimzi.io
            version: v1alpha1
            kind: KafkaTopic
            displayName: Kafka Topic
            description: Represents a topic inside a Kafka cluster
            specDescriptors:
              - description: The number of partitions
                displayName: Partitions
                path: partitions
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: The number of replicas
                displayName: Replication factor
                path: replicas
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
          - name: kafkausers.kafka.strimzi.io
            version: v1alpha1
            kind: KafkaUser
            displayName: Kafka User
            description: Represents a user inside a Kafka cluster
            specDescriptors:
              - description: Authentication type
                displayName: Authentication type
                path: authentication.type
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
              - description: Authorization type
                displayName: Authorization type
                path: authorization.type
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:label'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: clusterlogging.v0.0.1
        namespace: placeholder
        annotations:
          olm-examples: '[{"apiVersion": "logging.openshift.io/v1alpha1","kind": "ClusterLogging","metadata":{"name": "example","annotations":{"io.openshift.clusterlogging.alpha/allinone": ""}},"spec": {"logStore":{"type": "elasticsearch","elasticsearch":{"replicas":1,"storage":{"emptyDir": {}}}},"visualization":{"type": "kibana","kibana":{"replicas": 1}},"curation":{"type": "curator","curator": {"schedule": "30 3 * * *"}},"collection": {"logCollection":{"type": "fluentd","fluentd":{"nodeSelector":{"logging-infra-fluentd: "true"}}}}}]'
          test: "yes"
      spec:
        displayName: Cluster Logging
      
        description: |
          The Cluster Logging Operator for OKD provides a means for configuring and managing your aggregated logging stack.
      
          Once installed, the Cluster Logging Operator provides the following features:
          * **Create/Destroy**: Launch and create an aggregated logging stack in the `openshift-logging` namespace.
          * **Simplified Configuration**: Configure your aggregated logging cluster's structure like components and end points easily.
      
        keywords: ['elasticsearch', 'kibana', 'fluentd', 'logging', 'aggregated', 'efk']
      
        maintainers:
        - name: Red Hat
          email: aos-logging@redhat.com
      
        provider:
          name: Red Hat
      
        links:
        - name: Elastic
          url: https://www.elastic.co/
        - name: Fluentd
          url: https://www.fluentd.org/
        - name: Documentation
          url: https://github.com/openshift/cluster-logging-operator/blob/master/README.md
        - name: Cluster Logging Operator
          url: https://github.com/openshift/cluster-logging-operator
      
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: cluster-logging-operator
              rules:
              - apiGroups:
                - logging.openshift.io
                resources:
                - "*"
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                - serviceaccounts
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - "*"
              - apiGroups:
                - route.openshift.io
                resources:
                - routes
                - routes/custom-host
                verbs:
                - "*"
              - apiGroups:
                - batch
                resources:
                - cronjobs
                verbs:
                - "*"
            - serviceAccountName: elasticsearch-operator
              rules:
              - apiGroups:
                - logging.openshift.io
                resources:
                - "*"
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - pods
                - pods/exec
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                - serviceaccounts
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - "*"
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - prometheusrules
                - servicemonitors
                verbs:
                - "*"
            clusterPermissions:
            - serviceAccountName: cluster-logging-operator
              rules:
              - apiGroups:
                - scheduling.k8s.io
                resources:
                - priorityclasses
                verbs:
                - "*"
              - apiGroups:
                - oauth.openshift.io
                resources:
                - oauthclients
                verbs:
                - "*"
            deployments:
            - name: cluster-logging-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: cluster-logging-operator
                template:
                  metadata:
                    labels:
                      name: cluster-logging-operator
                  spec:
                    serviceAccountName: cluster-logging-operator
                    containers:
                    - name: cluster-logging-operator
                      image: quay.io/openshift/cluster-logging-operator:latest
                      imagePullPolicy: IfNotPresent
                      command:
                      - cluster-logging-operator
                      env:
                        - name: WATCH_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: OPERATOR_NAME
                          value: "cluster-logging-operator"
            - name: elasticsearch-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: elasticsearch-operator
                template:
                  metadata:
                    labels:
                      name: elasticsearch-operator
                  spec:
                    serviceAccountName: elasticsearch-operator
                    containers:
                      - name: elasticsearch-operator
                        image: quay.io/openshift/elasticsearch-operator:latest
                        imagePullPolicy: IfNotPresent
                        command:
                        - elasticsearch-operator
                        ports:
                        - containerPort: 60000
                          name: metrics
                        env:
                          - name: WATCH_NAMESPACE
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.namespace
                          - name: OPERATOR_NAME
                            value: "elasticsearch-operator"
        maturity: alpha
        version: 0.0.1
        customresourcedefinitions:
          owned:
          - name: clusterloggings.logging.openshift.io
            version: v1alpha1
            kind: ClusterLogging
            displayName: Cluster Logging
            description: A Cluster Logging instance
            resources:
            - kind: Deployment
              version: v1
            - kind: DaemonSet
              version: v1
            - kind: CronJob
              version: v1beta1
            - kind: ReplicaSet
              version: v1
            - kind: Pod
              version: v1
            - kind: ConfigMap
              version: v1
            - kind: Secret
              version: v1
            - kind: Service
              version: v1
            - kind: Route
              version: v1
            - kind: Elasticsearch
              version: v1alpha1
            specDescriptors:
            - description: The desired number of Kibana Pods for the Visualization component
              displayName: Kibana Size
              path: visualization.kibana.replicas
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            - description: Resource requirements for the Kibana pods
              displayName: Kibana Resource Requirements
              path: visualization.kibana.resources
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            - description: The node selector to use for the Kibana Visualization component
              displayName: Kibana Node Selector
              path: visualization.kibana.nodeSelector
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:nodeSelector'
            - description: The desired number of Elasticsearch Pods for the Log Storage component
              displayName: Elasticsearch Size
              path: logStore.elasticsearch.replicas
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            - description: Resource requirements for the Elasticsearch pods
              displayName: Elasticsearch Resource Requirements
              path: logStore.elasticsearch.resources
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            - description: The node selector to use for the Elasticsearch Log Storage component
              displayName: Elasticsearch Node Selector
              path: logStore.elasticsearch.nodeSelector
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:nodeSelector'
            - description: Resource requirements for the Fluentd pods
              displayName: Fluentd Resource Requirements
              path: collection.logCollection.fluentd.resources
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            - description: The node selector to use for the Fluentd log collection component
              displayName: Fluentd node selector
              path: collection.logCollection.fluentd.nodeSelector
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:nodeSelector'
            - description: Resource requirements for the Rsyslog pods
              displayName: Rsyslog Resource Requirements
              path: collection.logCollection.rsyslog.resources
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            - description: The node selector to use for the Rsyslog log collection component
              displayName: Rsyslog node selector
              path: collection.logCollection.rsyslog.nodeSelector
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:nodeSelector'
            - description: Resource requirements for the Curator pods
              displayName: Curator Resource Requirements
              path: curation.curator.resources
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            - description: The node selector to use for the Curator component
              displayName: Curator Node Selector
              path: curation.curator.nodeSelector
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:nodeSelector'
            - description: The cron schedule for the Curator component
              displayName: Curation Schedule
              path: curation.curator.schedule
            statusDescriptors:
            - description: The status for each of the Kibana pods for the Visualization component
              displayName: Kibana Status
              path: visualization.kibanaStatus.pods
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
            - description: The status for each of the Elasticsearch Client pods for the Log Storage component
              displayName: Elasticsearch Client Pod Status
              path: logStore.elasticsearchStatus.pods.client
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
            - description: The status for each of the Elasticsearch Data pods for the Log Storage component
              displayName: Elasticsearch Data Pod Status
              path: logStore.elasticsearchStatus.pods.data
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
            - description: The status for each of the Elasticsearch Master pods for the Log Storage component
              displayName: Elasticsearch Master Pod Status
              path: logStore.elasticsearchStatus.pods.master
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
            - description: The cluster status for each of the Elasticsearch Clusters for the Log Storage component
              displayName: Elasticsearch Cluster Health
              path: logstore.elasticsearchStatus.clusterHealth
            - description: The status for each of the Fluentd pods for the Log Collection component
              displayName: Fluentd status
              path: collection.logCollection.fluentdStatus.pods
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
            - description: The status for each of the Rsyslog pods for the Log Collection component
              displayName: Rsyslog status
              path: collection.logCollection.rsyslogStatus.pods
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
          - name: elasticsearches.logging.openshift.io
            version: v1alpha1
            kind: Elasticsearch
            displayName: Elasticsearch
            description: An Elasticsearch cluster instance
            resources:
            - kind: Deployment
              version: v1
            - kind: StatefulSet
              version: v1
            - kind: ReplicaSet
              version: v1
            - kind: Pod
              version: v1
            - kind: ConfigMap
              version: v1
            - kind: Service
              version: v1
            - kind: Route
              version: v1
            specDescriptors:
            - description: The name of the serviceaccount used by the Elasticsearch pods
              displayName: Service Account
              path: serviceAccountName
              x-descriptors:
                - 'urn:alm:descriptor:io.kubernetes:ServiceAccount'
            - description: The name of the configmap used by the Elasticsearch pods
              displayName: Config Map
              path: configMapName
              x-descriptors:
                - 'urn:alm:descriptor:io.kubernetes:ConfigMap'
            - description: The name of the secret used by the Elasticsearch pods
              displayName: Secret
              path: secretName
              x-descriptors:
                - 'urn:alm:descriptor:io.kubernetes:Secret'
            - description: Limits describes the minimum/maximum amount of compute resources required/allowed
              displayName: Resource Requirements
              path: nodeSpec.resources
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            statusDescriptors:
            - description: The current health of Elasticsearch Cluster
              displayName: Elasticsearch Cluster Health
              path: clusterHealth
              x-descriptors:
                - 'urn:alm:descriptor:io.kubernetes.phase'
            - description: The status for each of the Elasticsearch pods with the Client role
              displayName: Elasticsearch Client Status
              path: pods.client
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
            - description: The status for each of the Elasticsearch pods with the Data role
              displayName: Elasticsearch Data Status
              path: pods.data
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
            - description: The status for each of the Elasticsearch pods with the Master role
              displayName: Elasticsearch Master Status
              path: pods.master
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        annotations:
          categories: openshift optional
          certifiedLevel: Primed
          containerImage: registry.svc.ci.openshift.org/openshift/origin-v4.0:descheduler-operator
          createdAt: 2019/11/15
          description: An operator to run the OpenShift descheduler
          healthIndex: B
          repository: https://github.com/openshift/descheduler-operator
          support: Red Hat
        name: descheduler.v0.0.1
        namespace: openshift-descheduler-operator
      spec:
        description: |
            # Descheduler for Kubernetes
      
            ## Introduction
      
            Scheduling in Kubernetes is the process of binding pending pods to nodes, and is performed by
            a component of Kubernetes called kube-scheduler. The scheduler's decisions, whether or where a
            pod can or can not be scheduled, are guided by its configurable policy which comprises of set of
            rules, called predicates and priorities. The scheduler's decisions are influenced by its view of
            a Kubernetes cluster at that point of time when a new pod appears first time for scheduling.
            As Kubernetes clusters are very dynamic and their state change over time, there may be desired
            to move already running pods to some other nodes for various reasons
      
            * Some nodes are under or over utilized.
            * The original scheduling decision does not hold true any more, as taints or labels are added to
            or removed from nodes, pod/node affinity requirements are not satisfied any more.
            * Some nodes failed and their pods moved to other nodes.
             New nodes are added to clusters.
      
            Consequently, there might be several pods scheduled on less desired nodes in a cluster.
            Descheduler, based on its policy, finds pods that can be moved and evicts them. Please
            note, in current implementation, descheduler does not schedule replacement of evicted pods
            but relies on the default scheduler for that.
      
            ## Note
      
            Any api could be changed any time with out any notice. That said, your feedback is
            very important and appreciated to make this project more stable and useful.
         
        customresourcedefinitions:
          owned:
          - description: Represents an instance of a Descheduler application
            displayName: Descheduler Operator
            kind: Descheduler
            name: deschedulers.descheduler.io
            version: v1alpha1
        displayName: Descheduler
        install:
          spec:
            clusterPermissions:
            - rules:
              - apiGroups:
                - ""
                resources:
                - services
                - pods
                - configmaps
                - secrets
                - names
                - nodes
                - pods/eviction
                verbs:
                - '*'
              - apiGroups:
                - apps
                resources:
                - deployments
                verbs:
                - '*'
              - apiGroups:
                - batch
                - extensions
                resources:
                - jobs
                verbs:
                - '*'
              - apiGroups:
                - descheduler.io
                resources:
                - '*'
                verbs:
                - '*'
              serviceAccountName: openshift-descheduler
            deployments:
            - name: descheduler-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: descheduler-operator
                template:
                  metadata:
                    labels:
                      app: descheduler-operator
                  spec:
                    containers:
                    - command:
                      - descheduler-operator
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                      - name: WATCH_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: OPERATOR_NAME
                        value: descheduler-operator
                      image: registry.svc.ci.openshift.org/openshift/origin-v4.0:descheduler-operator
                      imagePullPolicy: Always
                      name: descheduler-operator
                    restartPolicy: Always
                    serviceAccount: openshift-descheduler
                    serviceAccountName: openshift-descheduler
                    terminationGracePeriodSeconds: 5
          strategy: deployment
        labels:
          olm-owner-enterprise-app: descheduler-operator
          olm-status-descriptors: descheduler.v0.0.1
        maintainers:
        - email: support@redhat.com
          name: Red Hat
        provider:
          name: Red Hat
        version: 0.0.1
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: etcdoperator.v0.6.1
        namespace: placeholder
        annotations:		
          tectonic-visibility: ocs		
      spec:
        displayName: etcd
        description: |
          etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader. Your applications can read and write data into etcd.
          A simple use-case is to store database connection details or feature flags within etcd as key value pairs. These values can be watched, allowing your app to reconfigure itself when they change. Advanced uses take advantage of the consistency guarantees to implement database leader elections or do distributed locking across a cluster of workers.
      
          _The etcd Open Cloud Service is Public Alpha. The goal before Beta is to fully implement backup features._
      
          ### Reading and writing to etcd
      
          Communicate with etcd though its command line utility `etcdctl` or with the API using the automatically generated Kubernetes Service.
      
          [Read the complete guide to using the etcd Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/etcd-ocs.html)
      
          ### Supported Features
          **High availability**
          Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.
          **Automated updates**
          Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.
          **Backups included**
          Coming soon, the ability to schedule backups to happen on or off cluster.
        keywords: ['etcd', 'key value', 'database', 'coreos', 'open source']
        version: 0.6.1
        maturity: alpha
        maintainers:
        - name: CoreOS, Inc
          email: support@coreos.com
      
        provider:
          name: CoreOS, Inc
        labels:
          alm-status-descriptors: etcdoperator.v0.6.1
          alm-owner-etcd: etcdoperator
          operated-by: etcdoperator
        selector:
          matchLabels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
        links:
        - name: Blog
          url: https://coreos.com/etcd
        - name: Documentation
          url: https://coreos.com/operators/etcd/docs/latest/
        - name: etcd Operator Source Code
          url: https://github.com/coreos/etcd-operator
      
        icon:
        - base64data: iVBORw0KGgoAAAANSUhEUgAAAOEAAADZCAYAAADWmle6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAEKlJREFUeNrsndt1GzkShmEev4sTgeiHfRYdgVqbgOgITEVgOgLTEQydwIiKwFQCayoCU6+7DyYjsBiBFyVVz7RkXvqCSxXw/+f04XjGQ6IL+FBVuL769euXgZ7r39f/G9iP0X+u/jWDNZzZdGI/Ftama1jjuV4BwmcNpbAf1Fgu+V/9YRvNAyzT2a59+/GT/3hnn5m16wKWedJrmOCxkYztx9Q+py/+E0GJxtJdReWfz+mxNt+QzS2Mc0AI+HbBBwj9QViKbH5t64DsP2fvmGXUkWU4WgO+Uve2YQzBUGd7r+zH2ZG/tiUQc4QxKwgbwFfVGwwmdLL5wH78aPC/ZBem9jJpCAX3xtcNASSNgJLzUPSQyjB1zQNl8IQJ9MIU4lx2+Jo72ysXYKl1HSzN02BMa/vbZ5xyNJIshJzwf3L0dQhJw4Sih/SFw9Tk8sVeghVPoefaIYCkMZCKbrcP9lnZuk0uPUjGE/KE8JQry7W2tgfuC3vXgvNV+qSQbyFtAtyWk7zWiYevvuUQ9QEQCvJ+5mmu6dTjz1zFHLFj8Eb87MtxaZh/IQFIHom+9vgTWwZxAQjT9X4vtbEVPojwjiV471s00mhAckpwGuCn1HtFtRDaSh6y9zsL+LNBvCG/24ThcxHObdlWc1v+VQJe8LcO0jwtuF8BwnAAUgP9M8JPU2Me+Oh12auPGT6fHuTePE3bLDy+x9pTLnhMn+07TQGh//Bz1iI0c6kvtqInjvPZcYR3KsPVmUsPYt9nFig9SCY8VQNhpPBzn952bbgcsk2EvM89wzh3UEffBbyPqvBUBYQ8ODGPFOLsa7RF096WJ69L+E4EmnpjWu5o4ChlKaRTKT39RMMaVPEQRsz/nIWlDN80chjdJlSd1l0pJCAMVZsniobQVuxceMM9OFoaMd9zqZtjMEYYDW38Drb8Y0DYPLShxn0pvIFuOSxd7YCPet9zk452wsh54FJoeN05hcgSQoG5RR0Qh9Q4E4VvL4wcZq8UACgaRFEQKgSwWrkr5WFnGxiHSutqJGlXjBgIOayhwYBTA0ER0oisIVSUV0AAMT0IASCUO4hRIQSAEECMCCEPwqyQA0JCQBzEGjWNAqHiUVAoXUWbvggOIQCEAOJzxTjoaQ4AIaE64/aZridUsBYUgkhB15oGg1DBIl8IqirYwV6hPSGBSFteMCUBSVXwfYixBmamRubeMyjzMJQBDDowE3OesDD+zwqFoDqiEwXoXJpljB+PvWJGy75BKF1FPxhKygJuqUdYQGlLxNEXkrYyjQ0GbaAwEnUIlLRNvVjQDYUAsJB0HKLE4y0AIpQNgCIhBIhQTgCKhZBBpAN/v6LtQI50JfUgYOnnjmLUFHKhjxbAmdTCaTiBm3ovLPqG2urWAij6im0Nd9aTN9ygLUEt9LgSRnohxUPIKxlGaE+/6Y7znFf0yX+GnkvFFWmarkab2o9PmTeq8sbd2a7DaysXz7i64VeznN4jCQhN9gdDbRiuWrfrsq0mHIrlaq+hlotCtd3Um9u0BYWY8y5D67wccJoZjFca7iUs9VqZcfsZwTd1sbWGG+OcYaTnPAP7rTQVVlM4Sg3oGvB1tmNh0t/HKXZ1jFoIMwCQjtqbhNxUmkGYqgZEDZP11HN/S3gAYRozf0l8C5kKEKUvW0t1IfeWG/5MwgheZTT1E0AEhDkAePQO+Ig2H3DncAkQM4cwUQCD530dU4B5Yvmi2LlDqXfWrxMCcMth51RToRMNUXFnfc2KJ0+Ryl0VNOUwlhh6NoxK5gnViTgQpUG4SqSyt5z3zRJpuKmt3Q1614QaCBPaN6je+2XiFcWAKOXcUfIYKRyL/1lb7pe5VxSxxjQ6hImshqGRt5GWZVKO6q2wHwujfwDtIvaIdexj8Cm8+a68EqMfox6x/voMouZF4dHnEGNeCDMwT6vdNfekH1MafMk4PI06YtqLVGl95aEM9Z5vAeCTOA++YLtoVJRrsqNCaJ6WRmkdYaNec5BT/lcTRMqrhmwfjbpkj55+OKp8IEbU/JLgPJE6Wa3TTe9sHS+ShVD5QIyqIxMEwKh12olC6mHIed5ewEop80CNlfIOADYOT2nd6ZXCop+Ebqchc0JqxKcKASxChycJgUh1rnHA5ow9eTrhqNI7JWiAYYwBGGdpyNLoGw0Pkh96h1BpHihyywtATDM/7Hk2fN9EnH8BgKJCU4ooBkbXFMZJiPbrOyecGl3zgQDQL4hk10IZiOe+5w99Q/gBAEIJgPhJM4QAEEoFREAIAAEiIASAkD8Qt4AQAEIAERAGFlX4CACKAXGVM4ivMwWwCLFAlyeoaa70QePKm5Dlp+/n+ye/5dYgva6YsUaVeMa+tzNFeJtWwc+udbJ0Fg399kLielQJ5Ze61c2+7ytA6EZetiPxZC6tj22yJCv6jUwOyj/zcbqAxOMyAKEbfeHtNa7DtYXptjsk2kJxR+eIeim/tHNofUKYy8DMrQcAKWz6brpvzyIAlpwPhQ49l6b7skJf5Z+YTOYQc4FwLDxvoTDwaygQK+U/kVr+ytSFBG01Q3gnJJR4cNiAhx4HDub8/b5DULXlj6SVZghFiE+LdvE9vo/o8Lp1RmH5hzm0T6wdbZ6n+D6i44zDRc3ln6CpAEJfXiRU45oqLz8gFAThWsh7ughrRibc0QynHgZpNJa/ENJ+loCwu/qOGnFIjYR/n7TfgycULhcQhu6VC+HfF+L3BoAQ4WiZTw1M+FPCnA2gKC6/FAhXgDC+ojQGh3NuWsvfF1L/D5ohlCKtl1j2ldu9a/nPAKFwN56Bst10zCG0CPleXN/zXPgHQZXaZaBgrbzyY5V/mUA+6F0hwtGN9rwu5DVZPuwWqfxdFz1LWbJ2lwKEa+0Qsm4Dl3fp+Pu0lV97PgwIPfSsS+UQhj5Oo+vvFULazRIQyvGEcxPuNLCth2MvFsrKn8UOilAQShkh7TTczYNMoS6OdP47msrPi82lXKGWhCdMZYS0bFy+vcnGAjP1CIfvgbKNA9glecEH9RD6Ol4wRuWyN/G9MHnksS6o/GPf5XcwNSUlHzQhDuAKtWJmkwKElU7lylP5rgIcsquh/FI8YZCDpkJBuE4FQm7Icw8N+SrUGaQKyi8FwiDt1ve5o+Vu7qYHy/psgK8cvh+FTYuO77bhEC7GuaPiys/L1X4IgXDL+e3M5+ovLxBy5VLuIebw1oqcHoPfoaMJUsHays878r8KbDc3xtPx/84gZPBG/JwaufrsY/SRG/OY3//8QMNdsvdZCFtbW6f8pFuf5bflILAlX7O+4fdfugKyFYS8T2zAsXthdG0VurPGKwI06oF5vkBgHWkNp6ry29+lsPZMU3vijnXFNmoclr+6+Ou/FIb8yb30sS8YGjmTqCLyQsi5N/6ZwKs0Yenj68pfPjF6N782Dp2FzV9CTyoSeY8mLK16qGxIkLI8oa1n8tz9juP40DlK0epxYEbojbq+9QfurBeVIlCO9D2396bxiV4lkYQ3hOAFw2pbhqMGISkkQOMcQ9EqhDmGZZdo92JC0YHRNTfoSg+5e0IT+opqCKHoIU+4ztQIgBD1EFNrQAgIpYSil9lDmPHqkROPt+JC6AgPquSuumJmg0YARVCuneDfvPVeJokZ6pIXDkNxQtGzTF9/BQjRG0tQznfb74RwCQghpALBtIQnfK4zhxdyQvVCUeknMIT3hLyY+T5jo0yABqKPQNpUNw/09tGZod5jgCaYFxyYvJcNPkv9eof+I3pnCFEHIETjSM8L9tHZHYCQT9PaZGycU6yg8S4akDnJ+P03L0+t23XGzCLzRgII/Wqa+fv/xlfvmKvMUOcOrlCDdoei1MGdZm6G5VEIfRzzjd4aQs69n699Rx7ewhvCGzr2gmTPs8zNsJOrXt24FbkhhOjCfT4ICA/rPbyhUy94Dks0gJCX1NzCZui9YUd3oei+c257TalFbgg19ILHrlrL2gvWgXAL26EX76gZTNASQnad8Ibwhl284NhgXpB0c+jKhWO3Ms1hP9ihJYB9eMF6qd1BCPk0qA1s+LimFIu7m4nsdQIzPK4VbQ8hYvrnuSH2G9b2ggP78QmWqBdF9Vx8SSY6QYdUW7BTA1schZATyhvY8lHvcRbNUS9YGFy2U+qmzh2YPVc0I7yAOFyHfRpyUwtCSzOdPXMHmz7qDIM0e0V2wZTEk+6Ym6N63eBLp/b5Bts+2cKCSJ/LuoZO3ANSiE5hKAZjnvNSS4931jcw9jpwT0feV/qSJ1pVtCyfHKDkvK8Ejx7pUxGh2xFNSwx8QTi2H9ceC0/nni64MS/5N5dG39pDqvRV+WgGk71c9VFXF9b+xYvOw/d61iv7m3MvEHryhvecwC52jSSx4VIIgwnMNT/UsTxIgpPt3K/ARj15CptwL3Zd/ceDSATj2DGQjbxgWwhdeMMte7zpy5On9vymRm/YxBYljGVjKWF9VJf7I1+sex3wY8w/V1QPTborW/72gkdsRDaZMJBdbdHIC7aCkAu9atlLbtnrzerMnyToDaGwelOnk3/hHSem/ZK7e/t7jeeR20LYBgqa8J80gS8jbwi5F02Uj1u2NYJxap8PLkJfLxA2hIJyvnHX/AfeEPLpBfe0uSFHbnXaea3Qd5d6HcpYZ8L6M7lnFwMQ3MNg+RxUR1+6AshtbsVgfXTEg1sIGax9UND2p7f270wdG3eK9gXVGHdw2k5sOyZv+Nbs39Z308XR9DqWb2J+PwKDhuKHPobfuXf7gnYGHdCs7bhDDadD4entDug7LWNsnRNW4mYqwJ9dk+GGSTPBiA2j0G8RWNM5upZtcG4/3vMfP7KnbK2egx6CCnDPhRn7NgD3cghLIad5WcM2SO38iqHvvMOosyeMpQ5zlVCaaj06GVs9xUbHdiKoqrHWgquFEFMWUEWfXUxJAML23hAHFOctmjZQffKD2pywkhtSGHKNtpitLroscAeE7kCkSsC60vxEl6yMtL9EL5HKGCMszU5bk8gdkklAyEn5FO0yK419rIxBOIqwFMooDE0tHEVYijAUECIshRCGIhxFWIowFJ5QkEYIS5PTJrUwNGlPyN6QQPyKtpuM1E/K5+YJDV/MiA3AaehzqgAm7QnZG9IGYKo8bHnSK7VblLL3hOwNHziPuEGOqE5brrdR6i+atCfckyeWD47HkAkepRGLY/e8A8J0gCwYSNypF08bBm+e6zVz2UL4AshhBUjML/rXLefqC82bcQFhGC9JDwZ1uuu+At0S5gCETYHsV4DUeD9fDN2Zfy5OXaW2zAwQygCzBLJ8cvaW5OXKC1FxfTggFAHmoAJnSiOw2wps9KwRWgJCLaEswaj5NqkLwAYIU4BxqTSXbHXpJdRMPZgAOiAMqABCNGYIEEJutEK5IUAIwYMDQgiCACEEAcJs1Vda7gGqDhCmoiEghAAhBAHCrKXVo2C1DCBMRlp37uMIEECoX7xrX3P5C9QiINSuIcoPAUI0YkAICLNWgfJDh4T9hH7zqYH9+JHAq7zBqWjwhPAicTVCVQJCNF50JghHocahKK0X/ZnQKyEkhSdUpzG8OgQI42qC94EQjsYLRSmH+pbgq73L6bYkeEJ4DYTYmeg1TOBFc/usTTp3V9DdEuXJ2xDCUbXhaXk0/kAYmBvuMB4qkC35E5e5AMKkwSQgyxufyuPy6fMMgAFCSI73LFXU/N8AmEL9X4ABACNSKMHAgb34AAAAAElFTkSuQmCC
          mediatype: image/png
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: etcd-operator
              rules:
              - apiGroups:
                - etcd.database.coreos.com
                resources:
                - etcdclusters
                verbs:
                - "*"
              - apiGroups:
                - storage.k8s.io
                resources:
                - storageclasses
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - deployments
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - secrets
                verbs:
                - get
            deployments:
            - name: etcd-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: etcd-operator-alm-owned
                template:
                  metadata:
                    name: etcd-operator-alm-owned
                    labels:
                      name: etcd-operator-alm-owned
                  spec:
                    serviceAccountName: etcd-operator
                    containers:
                    - name: etcd-operator
                      command:
                      - etcd-operator
                      - --create-crd=false
                      image: quay.io/coreos/etcd-operator@sha256:bd944a211eaf8f31da5e6d69e8541e7cada8f16a9f7a5a570b22478997819943
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
        customresourcedefinitions:
          owned:
          - name: etcdclusters.etcd.database.coreos.com
            version: v1beta2
            kind: EtcdCluster
            displayName: etcd Cluster
            description: Represents a cluster of etcd nodes.
            resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
            specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: service
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes:Service'
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: 'The target version of the etcd cluster, after upgrading.'
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes.phase'
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes.phase:reason'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: etcdoperator.v0.9.0
        namespace: placeholder
        annotations:
          tectonic-visibility: ocs
          alm-examples: '[{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdCluster","metadata":{"name":"example","namespace":"default"},"spec":{"size":3,"version":"3.2.13"}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdRestore","metadata":{"name":"example-etcd-cluster"},"spec":{"etcdCluster":{"name":"example-etcd-cluster"},"backupStorageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdBackup","metadata":{"name":"example-etcd-cluster-backup"},"spec":{"etcdEndpoints":["<etcd-cluster-endpoints>"],"storageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}}]'
      spec:
        displayName: etcd
        description: |
          etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader. Your applications can read and write data into etcd.
          A simple use-case is to store database connection details or feature flags within etcd as key value pairs. These values can be watched, allowing your app to reconfigure itself when they change. Advanced uses take advantage of the consistency guarantees to implement database leader elections or do distributed locking across a cluster of workers.
      
          _The etcd Open Cloud Service is Public Alpha. The goal before Beta is to fully implement backup features._
      
          ### Reading and writing to etcd
      
          Communicate with etcd though its command line utility `etcdctl` or with the API using the automatically generated Kubernetes Service.
      
          [Read the complete guide to using the etcd Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/etcd-ocs.html)
      
          ### Supported Features
      
      
          **High availability**
      
      
          Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.
      
      
          **Automated updates**
      
      
          Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.
      
      
          **Backups included**
      
      
          Coming soon, the ability to schedule backups to happen on or off cluster.
        keywords: ['etcd', 'key value', 'database', 'coreos', 'open source']
        version: 0.9.0
        maturity: alpha
        replaces: etcdoperator.v0.6.1
        maintainers:
        - name: CoreOS, Inc
          email: support@coreos.com
      
        provider:
          name: CoreOS, Inc
        labels:
          alm-owner-etcd: etcdoperator
          operated-by: etcdoperator
        selector:
          matchLabels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
        links:
        - name: Blog
          url: https://coreos.com/etcd
        - name: Documentation
          url: https://coreos.com/operators/etcd/docs/latest/
        - name: etcd Operator Source Code
          url: https://github.com/coreos/etcd-operator
      
        icon:
        - base64data: iVBORw0KGgoAAAANSUhEUgAAAOEAAADZCAYAAADWmle6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAEKlJREFUeNrsndt1GzkShmEev4sTgeiHfRYdgVqbgOgITEVgOgLTEQydwIiKwFQCayoCU6+7DyYjsBiBFyVVz7RkXvqCSxXw/+f04XjGQ6IL+FBVuL769euXgZ7r39f/G9iP0X+u/jWDNZzZdGI/Ftama1jjuV4BwmcNpbAf1Fgu+V/9YRvNAyzT2a59+/GT/3hnn5m16wKWedJrmOCxkYztx9Q+py/+E0GJxtJdReWfz+mxNt+QzS2Mc0AI+HbBBwj9QViKbH5t64DsP2fvmGXUkWU4WgO+Uve2YQzBUGd7r+zH2ZG/tiUQc4QxKwgbwFfVGwwmdLL5wH78aPC/ZBem9jJpCAX3xtcNASSNgJLzUPSQyjB1zQNl8IQJ9MIU4lx2+Jo72ysXYKl1HSzN02BMa/vbZ5xyNJIshJzwf3L0dQhJw4Sih/SFw9Tk8sVeghVPoefaIYCkMZCKbrcP9lnZuk0uPUjGE/KE8JQry7W2tgfuC3vXgvNV+qSQbyFtAtyWk7zWiYevvuUQ9QEQCvJ+5mmu6dTjz1zFHLFj8Eb87MtxaZh/IQFIHom+9vgTWwZxAQjT9X4vtbEVPojwjiV471s00mhAckpwGuCn1HtFtRDaSh6y9zsL+LNBvCG/24ThcxHObdlWc1v+VQJe8LcO0jwtuF8BwnAAUgP9M8JPU2Me+Oh12auPGT6fHuTePE3bLDy+x9pTLnhMn+07TQGh//Bz1iI0c6kvtqInjvPZcYR3KsPVmUsPYt9nFig9SCY8VQNhpPBzn952bbgcsk2EvM89wzh3UEffBbyPqvBUBYQ8ODGPFOLsa7RF096WJ69L+E4EmnpjWu5o4ChlKaRTKT39RMMaVPEQRsz/nIWlDN80chjdJlSd1l0pJCAMVZsniobQVuxceMM9OFoaMd9zqZtjMEYYDW38Drb8Y0DYPLShxn0pvIFuOSxd7YCPet9zk452wsh54FJoeN05hcgSQoG5RR0Qh9Q4E4VvL4wcZq8UACgaRFEQKgSwWrkr5WFnGxiHSutqJGlXjBgIOayhwYBTA0ER0oisIVSUV0AAMT0IASCUO4hRIQSAEECMCCEPwqyQA0JCQBzEGjWNAqHiUVAoXUWbvggOIQCEAOJzxTjoaQ4AIaE64/aZridUsBYUgkhB15oGg1DBIl8IqirYwV6hPSGBSFteMCUBSVXwfYixBmamRubeMyjzMJQBDDowE3OesDD+zwqFoDqiEwXoXJpljB+PvWJGy75BKF1FPxhKygJuqUdYQGlLxNEXkrYyjQ0GbaAwEnUIlLRNvVjQDYUAsJB0HKLE4y0AIpQNgCIhBIhQTgCKhZBBpAN/v6LtQI50JfUgYOnnjmLUFHKhjxbAmdTCaTiBm3ovLPqG2urWAij6im0Nd9aTN9ygLUEt9LgSRnohxUPIKxlGaE+/6Y7znFf0yX+GnkvFFWmarkab2o9PmTeq8sbd2a7DaysXz7i64VeznN4jCQhN9gdDbRiuWrfrsq0mHIrlaq+hlotCtd3Um9u0BYWY8y5D67wccJoZjFca7iUs9VqZcfsZwTd1sbWGG+OcYaTnPAP7rTQVVlM4Sg3oGvB1tmNh0t/HKXZ1jFoIMwCQjtqbhNxUmkGYqgZEDZP11HN/S3gAYRozf0l8C5kKEKUvW0t1IfeWG/5MwgheZTT1E0AEhDkAePQO+Ig2H3DncAkQM4cwUQCD530dU4B5Yvmi2LlDqXfWrxMCcMth51RToRMNUXFnfc2KJ0+Ryl0VNOUwlhh6NoxK5gnViTgQpUG4SqSyt5z3zRJpuKmt3Q1614QaCBPaN6je+2XiFcWAKOXcUfIYKRyL/1lb7pe5VxSxxjQ6hImshqGRt5GWZVKO6q2wHwujfwDtIvaIdexj8Cm8+a68EqMfox6x/voMouZF4dHnEGNeCDMwT6vdNfekH1MafMk4PI06YtqLVGl95aEM9Z5vAeCTOA++YLtoVJRrsqNCaJ6WRmkdYaNec5BT/lcTRMqrhmwfjbpkj55+OKp8IEbU/JLgPJE6Wa3TTe9sHS+ShVD5QIyqIxMEwKh12olC6mHIed5ewEop80CNlfIOADYOT2nd6ZXCop+Ebqchc0JqxKcKASxChycJgUh1rnHA5ow9eTrhqNI7JWiAYYwBGGdpyNLoGw0Pkh96h1BpHihyywtATDM/7Hk2fN9EnH8BgKJCU4ooBkbXFMZJiPbrOyecGl3zgQDQL4hk10IZiOe+5w99Q/gBAEIJgPhJM4QAEEoFREAIAAEiIASAkD8Qt4AQAEIAERAGFlX4CACKAXGVM4ivMwWwCLFAlyeoaa70QePKm5Dlp+/n+ye/5dYgva6YsUaVeMa+tzNFeJtWwc+udbJ0Fg399kLielQJ5Ze61c2+7ytA6EZetiPxZC6tj22yJCv6jUwOyj/zcbqAxOMyAKEbfeHtNa7DtYXptjsk2kJxR+eIeim/tHNofUKYy8DMrQcAKWz6brpvzyIAlpwPhQ49l6b7skJf5Z+YTOYQc4FwLDxvoTDwaygQK+U/kVr+ytSFBG01Q3gnJJR4cNiAhx4HDub8/b5DULXlj6SVZghFiE+LdvE9vo/o8Lp1RmH5hzm0T6wdbZ6n+D6i44zDRc3ln6CpAEJfXiRU45oqLz8gFAThWsh7ughrRibc0QynHgZpNJa/ENJ+loCwu/qOGnFIjYR/n7TfgycULhcQhu6VC+HfF+L3BoAQ4WiZTw1M+FPCnA2gKC6/FAhXgDC+ojQGh3NuWsvfF1L/D5ohlCKtl1j2ldu9a/nPAKFwN56Bst10zCG0CPleXN/zXPgHQZXaZaBgrbzyY5V/mUA+6F0hwtGN9rwu5DVZPuwWqfxdFz1LWbJ2lwKEa+0Qsm4Dl3fp+Pu0lV97PgwIPfSsS+UQhj5Oo+vvFULazRIQyvGEcxPuNLCth2MvFsrKn8UOilAQShkh7TTczYNMoS6OdP47msrPi82lXKGWhCdMZYS0bFy+vcnGAjP1CIfvgbKNA9glecEH9RD6Ol4wRuWyN/G9MHnksS6o/GPf5XcwNSUlHzQhDuAKtWJmkwKElU7lylP5rgIcsquh/FI8YZCDpkJBuE4FQm7Icw8N+SrUGaQKyi8FwiDt1ve5o+Vu7qYHy/psgK8cvh+FTYuO77bhEC7GuaPiys/L1X4IgXDL+e3M5+ovLxBy5VLuIebw1oqcHoPfoaMJUsHays878r8KbDc3xtPx/84gZPBG/JwaufrsY/SRG/OY3//8QMNdsvdZCFtbW6f8pFuf5bflILAlX7O+4fdfugKyFYS8T2zAsXthdG0VurPGKwI06oF5vkBgHWkNp6ry29+lsPZMU3vijnXFNmoclr+6+Ou/FIb8yb30sS8YGjmTqCLyQsi5N/6ZwKs0Yenj68pfPjF6N782Dp2FzV9CTyoSeY8mLK16qGxIkLI8oa1n8tz9juP40DlK0epxYEbojbq+9QfurBeVIlCO9D2396bxiV4lkYQ3hOAFw2pbhqMGISkkQOMcQ9EqhDmGZZdo92JC0YHRNTfoSg+5e0IT+opqCKHoIU+4ztQIgBD1EFNrQAgIpYSil9lDmPHqkROPt+JC6AgPquSuumJmg0YARVCuneDfvPVeJokZ6pIXDkNxQtGzTF9/BQjRG0tQznfb74RwCQghpALBtIQnfK4zhxdyQvVCUeknMIT3hLyY+T5jo0yABqKPQNpUNw/09tGZod5jgCaYFxyYvJcNPkv9eof+I3pnCFEHIETjSM8L9tHZHYCQT9PaZGycU6yg8S4akDnJ+P03L0+t23XGzCLzRgII/Wqa+fv/xlfvmKvMUOcOrlCDdoei1MGdZm6G5VEIfRzzjd4aQs69n699Rx7ewhvCGzr2gmTPs8zNsJOrXt24FbkhhOjCfT4ICA/rPbyhUy94Dks0gJCX1NzCZui9YUd3oei+c257TalFbgg19ILHrlrL2gvWgXAL26EX76gZTNASQnad8Ibwhl284NhgXpB0c+jKhWO3Ms1hP9ihJYB9eMF6qd1BCPk0qA1s+LimFIu7m4nsdQIzPK4VbQ8hYvrnuSH2G9b2ggP78QmWqBdF9Vx8SSY6QYdUW7BTA1schZATyhvY8lHvcRbNUS9YGFy2U+qmzh2YPVc0I7yAOFyHfRpyUwtCSzOdPXMHmz7qDIM0e0V2wZTEk+6Ym6N63eBLp/b5Bts+2cKCSJ/LuoZO3ANSiE5hKAZjnvNSS4931jcw9jpwT0feV/qSJ1pVtCyfHKDkvK8Ejx7pUxGh2xFNSwx8QTi2H9ceC0/nni64MS/5N5dG39pDqvRV+WgGk71c9VFXF9b+xYvOw/d61iv7m3MvEHryhvecwC52jSSx4VIIgwnMNT/UsTxIgpPt3K/ARj15CptwL3Zd/ceDSATj2DGQjbxgWwhdeMMte7zpy5On9vymRm/YxBYljGVjKWF9VJf7I1+sex3wY8w/V1QPTborW/72gkdsRDaZMJBdbdHIC7aCkAu9atlLbtnrzerMnyToDaGwelOnk3/hHSem/ZK7e/t7jeeR20LYBgqa8J80gS8jbwi5F02Uj1u2NYJxap8PLkJfLxA2hIJyvnHX/AfeEPLpBfe0uSFHbnXaea3Qd5d6HcpYZ8L6M7lnFwMQ3MNg+RxUR1+6AshtbsVgfXTEg1sIGax9UND2p7f270wdG3eK9gXVGHdw2k5sOyZv+Nbs39Z308XR9DqWb2J+PwKDhuKHPobfuXf7gnYGHdCs7bhDDadD4entDug7LWNsnRNW4mYqwJ9dk+GGSTPBiA2j0G8RWNM5upZtcG4/3vMfP7KnbK2egx6CCnDPhRn7NgD3cghLIad5WcM2SO38iqHvvMOosyeMpQ5zlVCaaj06GVs9xUbHdiKoqrHWgquFEFMWUEWfXUxJAML23hAHFOctmjZQffKD2pywkhtSGHKNtpitLroscAeE7kCkSsC60vxEl6yMtL9EL5HKGCMszU5bk8gdkklAyEn5FO0yK419rIxBOIqwFMooDE0tHEVYijAUECIshRCGIhxFWIowFJ5QkEYIS5PTJrUwNGlPyN6QQPyKtpuM1E/K5+YJDV/MiA3AaehzqgAm7QnZG9IGYKo8bHnSK7VblLL3hOwNHziPuEGOqE5brrdR6i+atCfckyeWD47HkAkepRGLY/e8A8J0gCwYSNypF08bBm+e6zVz2UL4AshhBUjML/rXLefqC82bcQFhGC9JDwZ1uuu+At0S5gCETYHsV4DUeD9fDN2Zfy5OXaW2zAwQygCzBLJ8cvaW5OXKC1FxfTggFAHmoAJnSiOw2wps9KwRWgJCLaEswaj5NqkLwAYIU4BxqTSXbHXpJdRMPZgAOiAMqABCNGYIEEJutEK5IUAIwYMDQgiCACEEAcJs1Vda7gGqDhCmoiEghAAhBAHCrKXVo2C1DCBMRlp37uMIEECoX7xrX3P5C9QiINSuIcoPAUI0YkAICLNWgfJDh4T9hH7zqYH9+JHAq7zBqWjwhPAicTVCVQJCNF50JghHocahKK0X/ZnQKyEkhSdUpzG8OgQI42qC94EQjsYLRSmH+pbgq73L6bYkeEJ4DYTYmeg1TOBFc/usTTp3V9DdEuXJ2xDCUbXhaXk0/kAYmBvuMB4qkC35E5e5AMKkwSQgyxufyuPy6fMMgAFCSI73LFXU/N8AmEL9X4ABACNSKMHAgb34AAAAAElFTkSuQmCC
          mediatype: image/png
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: etcd-operator
              rules:
              - apiGroups:
                - etcd.database.coreos.com
                resources:
                - etcdclusters
                - etcdbackups
                - etcdrestores
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - deployments
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - secrets
                verbs:
                - get
            deployments:
            - name: etcd-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: etcd-operator-alm-owned
                template:
                  metadata:
                    name: etcd-operator-alm-owned
                    labels:
                      name: etcd-operator-alm-owned
                  spec:
                    serviceAccountName: etcd-operator
                    containers:
                    - name: etcd-operator
                      command:
                      - etcd-operator
                      - --create-crd=false
                      image: quay.io/coreos/etcd-operator@sha256:db563baa8194fcfe39d1df744ed70024b0f1f9e9b55b5923c2f3a413c44dc6b8
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                    - name: etcd-backup-operator
                      image: quay.io/coreos/etcd-operator@sha256:db563baa8194fcfe39d1df744ed70024b0f1f9e9b55b5923c2f3a413c44dc6b8
                      command:
                      - etcd-backup-operator
                      - --create-crd=false
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                    - name: etcd-restore-operator
                      image: quay.io/coreos/etcd-operator@sha256:db563baa8194fcfe39d1df744ed70024b0f1f9e9b55b5923c2f3a413c44dc6b8
                      command:
                      - etcd-restore-operator
                      - --create-crd=false
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
        customresourcedefinitions:
          owned:
          - name: etcdclusters.etcd.database.coreos.com
            version: v1beta2
            kind: EtcdCluster
            displayName: etcd Cluster
            description: Represents a cluster of etcd nodes.
            resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
            specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podCount'
              - description: Limits describes the minimum/maximum amount of compute resources required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes:Service'
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: 'The target version of the etcd cluster, after upgrading.'
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes.phase'
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes.phase:reason'
          - name: etcdbackups.etcd.database.coreos.com
            version: v1beta2
            kind: EtcdBackup
            displayName: etcd Backup
            description: Represents the intent to backup an etcd cluster.
            specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors: 
                  - 'urn:alm:descriptor:etcd:endpoint'
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors: 
                  - 'urn:alm:descriptor:aws:s3:path'
              - description: The name of the secret object that stores the AWS credential and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes:Secret'
            statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors: 
                  - 'urn:alm:descriptor:text'
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes.phase:reason'
          - name: etcdrestores.etcd.database.coreos.com
            version: v1beta2
            kind: EtcdRestore
            displayName: etcd Restore
            description: Represents the intent to restore an etcd cluster from a backup.
            specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes:EtcdCluster'
                  - 'urn:alm:descriptor:text'
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors: 
                  - 'urn:alm:descriptor:aws:s3:path'
              - description: The name of the secret object that stores the AWS credential and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes:Secret'
            statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors: 
                  - 'urn:alm:descriptor:text'
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes.phase:reason'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: etcdoperator.v0.9.2
        namespace: placeholder
        annotations:
          tectonic-visibility: ocs
          alm-examples: '[{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdCluster","metadata":{"name":"example","namespace":"default"},"spec":{"size":3,"version":"3.2.13"}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdRestore","metadata":{"name":"example-etcd-cluster"},"spec":{"etcdCluster":{"name":"example-etcd-cluster"},"backupStorageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}},{"apiVersion":"etcd.database.coreos.com/v1beta2","kind":"EtcdBackup","metadata":{"name":"example-etcd-cluster-backup"},"spec":{"etcdEndpoints":["<etcd-cluster-endpoints>"],"storageType":"S3","s3":{"path":"<full-s3-path>","awsSecret":"<aws-secret>"}}}]'
      spec:
        displayName: etcd
        description: |
          etcd is a distributed key value store that provides a reliable way to store data across a cluster of machines. It’s open-source and available on GitHub. etcd gracefully handles leader elections during network partitions and will tolerate machine failure, including the leader. Your applications can read and write data into etcd.
          A simple use-case is to store database connection details or feature flags within etcd as key value pairs. These values can be watched, allowing your app to reconfigure itself when they change. Advanced uses take advantage of the consistency guarantees to implement database leader elections or do distributed locking across a cluster of workers.
      
          _The etcd Open Cloud Service is Public Alpha. The goal before Beta is to fully implement backup features._
      
          ### Reading and writing to etcd
      
          Communicate with etcd though its command line utility `etcdctl` or with the API using the automatically generated Kubernetes Service.
      
          [Read the complete guide to using the etcd Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/etcd-ocs.html)
      
          ### Supported Features
      
      
          **High availability**
      
      
          Multiple instances of etcd are networked together and secured. Individual failures or networking issues are transparently handled to keep your cluster up and running.
      
      
          **Automated updates**
      
      
          Rolling out a new etcd version works like all Kubernetes rolling updates. Simply declare the desired version, and the etcd service starts a safe rolling update to the new version automatically.
      
      
          **Backups included**
      
      
          Coming soon, the ability to schedule backups to happen on or off cluster.
        keywords: ['etcd', 'key value', 'database', 'coreos', 'open source']
        version: 0.9.2
        maturity: alpha
        replaces: etcdoperator.v0.9.0
        maintainers:
        - name: CoreOS, Inc
          email: support@coreos.com
      
        provider:
          name: CoreOS, Inc
        labels:
          alm-owner-etcd: etcdoperator
          operated-by: etcdoperator
        selector:
          matchLabels:
            alm-owner-etcd: etcdoperator
            operated-by: etcdoperator
        links:
        - name: Blog
          url: https://coreos.com/etcd
        - name: Documentation
          url: https://coreos.com/operators/etcd/docs/latest/
        - name: etcd Operator Source Code
          url: https://github.com/coreos/etcd-operator
      
        icon:
        - base64data: iVBORw0KGgoAAAANSUhEUgAAAOEAAADZCAYAAADWmle6AAAACXBIWXMAAAsTAAALEwEAmpwYAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAEKlJREFUeNrsndt1GzkShmEev4sTgeiHfRYdgVqbgOgITEVgOgLTEQydwIiKwFQCayoCU6+7DyYjsBiBFyVVz7RkXvqCSxXw/+f04XjGQ6IL+FBVuL769euXgZ7r39f/G9iP0X+u/jWDNZzZdGI/Ftama1jjuV4BwmcNpbAf1Fgu+V/9YRvNAyzT2a59+/GT/3hnn5m16wKWedJrmOCxkYztx9Q+py/+E0GJxtJdReWfz+mxNt+QzS2Mc0AI+HbBBwj9QViKbH5t64DsP2fvmGXUkWU4WgO+Uve2YQzBUGd7r+zH2ZG/tiUQc4QxKwgbwFfVGwwmdLL5wH78aPC/ZBem9jJpCAX3xtcNASSNgJLzUPSQyjB1zQNl8IQJ9MIU4lx2+Jo72ysXYKl1HSzN02BMa/vbZ5xyNJIshJzwf3L0dQhJw4Sih/SFw9Tk8sVeghVPoefaIYCkMZCKbrcP9lnZuk0uPUjGE/KE8JQry7W2tgfuC3vXgvNV+qSQbyFtAtyWk7zWiYevvuUQ9QEQCvJ+5mmu6dTjz1zFHLFj8Eb87MtxaZh/IQFIHom+9vgTWwZxAQjT9X4vtbEVPojwjiV471s00mhAckpwGuCn1HtFtRDaSh6y9zsL+LNBvCG/24ThcxHObdlWc1v+VQJe8LcO0jwtuF8BwnAAUgP9M8JPU2Me+Oh12auPGT6fHuTePE3bLDy+x9pTLnhMn+07TQGh//Bz1iI0c6kvtqInjvPZcYR3KsPVmUsPYt9nFig9SCY8VQNhpPBzn952bbgcsk2EvM89wzh3UEffBbyPqvBUBYQ8ODGPFOLsa7RF096WJ69L+E4EmnpjWu5o4ChlKaRTKT39RMMaVPEQRsz/nIWlDN80chjdJlSd1l0pJCAMVZsniobQVuxceMM9OFoaMd9zqZtjMEYYDW38Drb8Y0DYPLShxn0pvIFuOSxd7YCPet9zk452wsh54FJoeN05hcgSQoG5RR0Qh9Q4E4VvL4wcZq8UACgaRFEQKgSwWrkr5WFnGxiHSutqJGlXjBgIOayhwYBTA0ER0oisIVSUV0AAMT0IASCUO4hRIQSAEECMCCEPwqyQA0JCQBzEGjWNAqHiUVAoXUWbvggOIQCEAOJzxTjoaQ4AIaE64/aZridUsBYUgkhB15oGg1DBIl8IqirYwV6hPSGBSFteMCUBSVXwfYixBmamRubeMyjzMJQBDDowE3OesDD+zwqFoDqiEwXoXJpljB+PvWJGy75BKF1FPxhKygJuqUdYQGlLxNEXkrYyjQ0GbaAwEnUIlLRNvVjQDYUAsJB0HKLE4y0AIpQNgCIhBIhQTgCKhZBBpAN/v6LtQI50JfUgYOnnjmLUFHKhjxbAmdTCaTiBm3ovLPqG2urWAij6im0Nd9aTN9ygLUEt9LgSRnohxUPIKxlGaE+/6Y7znFf0yX+GnkvFFWmarkab2o9PmTeq8sbd2a7DaysXz7i64VeznN4jCQhN9gdDbRiuWrfrsq0mHIrlaq+hlotCtd3Um9u0BYWY8y5D67wccJoZjFca7iUs9VqZcfsZwTd1sbWGG+OcYaTnPAP7rTQVVlM4Sg3oGvB1tmNh0t/HKXZ1jFoIMwCQjtqbhNxUmkGYqgZEDZP11HN/S3gAYRozf0l8C5kKEKUvW0t1IfeWG/5MwgheZTT1E0AEhDkAePQO+Ig2H3DncAkQM4cwUQCD530dU4B5Yvmi2LlDqXfWrxMCcMth51RToRMNUXFnfc2KJ0+Ryl0VNOUwlhh6NoxK5gnViTgQpUG4SqSyt5z3zRJpuKmt3Q1614QaCBPaN6je+2XiFcWAKOXcUfIYKRyL/1lb7pe5VxSxxjQ6hImshqGRt5GWZVKO6q2wHwujfwDtIvaIdexj8Cm8+a68EqMfox6x/voMouZF4dHnEGNeCDMwT6vdNfekH1MafMk4PI06YtqLVGl95aEM9Z5vAeCTOA++YLtoVJRrsqNCaJ6WRmkdYaNec5BT/lcTRMqrhmwfjbpkj55+OKp8IEbU/JLgPJE6Wa3TTe9sHS+ShVD5QIyqIxMEwKh12olC6mHIed5ewEop80CNlfIOADYOT2nd6ZXCop+Ebqchc0JqxKcKASxChycJgUh1rnHA5ow9eTrhqNI7JWiAYYwBGGdpyNLoGw0Pkh96h1BpHihyywtATDM/7Hk2fN9EnH8BgKJCU4ooBkbXFMZJiPbrOyecGl3zgQDQL4hk10IZiOe+5w99Q/gBAEIJgPhJM4QAEEoFREAIAAEiIASAkD8Qt4AQAEIAERAGFlX4CACKAXGVM4ivMwWwCLFAlyeoaa70QePKm5Dlp+/n+ye/5dYgva6YsUaVeMa+tzNFeJtWwc+udbJ0Fg399kLielQJ5Ze61c2+7ytA6EZetiPxZC6tj22yJCv6jUwOyj/zcbqAxOMyAKEbfeHtNa7DtYXptjsk2kJxR+eIeim/tHNofUKYy8DMrQcAKWz6brpvzyIAlpwPhQ49l6b7skJf5Z+YTOYQc4FwLDxvoTDwaygQK+U/kVr+ytSFBG01Q3gnJJR4cNiAhx4HDub8/b5DULXlj6SVZghFiE+LdvE9vo/o8Lp1RmH5hzm0T6wdbZ6n+D6i44zDRc3ln6CpAEJfXiRU45oqLz8gFAThWsh7ughrRibc0QynHgZpNJa/ENJ+loCwu/qOGnFIjYR/n7TfgycULhcQhu6VC+HfF+L3BoAQ4WiZTw1M+FPCnA2gKC6/FAhXgDC+ojQGh3NuWsvfF1L/D5ohlCKtl1j2ldu9a/nPAKFwN56Bst10zCG0CPleXN/zXPgHQZXaZaBgrbzyY5V/mUA+6F0hwtGN9rwu5DVZPuwWqfxdFz1LWbJ2lwKEa+0Qsm4Dl3fp+Pu0lV97PgwIPfSsS+UQhj5Oo+vvFULazRIQyvGEcxPuNLCth2MvFsrKn8UOilAQShkh7TTczYNMoS6OdP47msrPi82lXKGWhCdMZYS0bFy+vcnGAjP1CIfvgbKNA9glecEH9RD6Ol4wRuWyN/G9MHnksS6o/GPf5XcwNSUlHzQhDuAKtWJmkwKElU7lylP5rgIcsquh/FI8YZCDpkJBuE4FQm7Icw8N+SrUGaQKyi8FwiDt1ve5o+Vu7qYHy/psgK8cvh+FTYuO77bhEC7GuaPiys/L1X4IgXDL+e3M5+ovLxBy5VLuIebw1oqcHoPfoaMJUsHays878r8KbDc3xtPx/84gZPBG/JwaufrsY/SRG/OY3//8QMNdsvdZCFtbW6f8pFuf5bflILAlX7O+4fdfugKyFYS8T2zAsXthdG0VurPGKwI06oF5vkBgHWkNp6ry29+lsPZMU3vijnXFNmoclr+6+Ou/FIb8yb30sS8YGjmTqCLyQsi5N/6ZwKs0Yenj68pfPjF6N782Dp2FzV9CTyoSeY8mLK16qGxIkLI8oa1n8tz9juP40DlK0epxYEbojbq+9QfurBeVIlCO9D2396bxiV4lkYQ3hOAFw2pbhqMGISkkQOMcQ9EqhDmGZZdo92JC0YHRNTfoSg+5e0IT+opqCKHoIU+4ztQIgBD1EFNrQAgIpYSil9lDmPHqkROPt+JC6AgPquSuumJmg0YARVCuneDfvPVeJokZ6pIXDkNxQtGzTF9/BQjRG0tQznfb74RwCQghpALBtIQnfK4zhxdyQvVCUeknMIT3hLyY+T5jo0yABqKPQNpUNw/09tGZod5jgCaYFxyYvJcNPkv9eof+I3pnCFEHIETjSM8L9tHZHYCQT9PaZGycU6yg8S4akDnJ+P03L0+t23XGzCLzRgII/Wqa+fv/xlfvmKvMUOcOrlCDdoei1MGdZm6G5VEIfRzzjd4aQs69n699Rx7ewhvCGzr2gmTPs8zNsJOrXt24FbkhhOjCfT4ICA/rPbyhUy94Dks0gJCX1NzCZui9YUd3oei+c257TalFbgg19ILHrlrL2gvWgXAL26EX76gZTNASQnad8Ibwhl284NhgXpB0c+jKhWO3Ms1hP9ihJYB9eMF6qd1BCPk0qA1s+LimFIu7m4nsdQIzPK4VbQ8hYvrnuSH2G9b2ggP78QmWqBdF9Vx8SSY6QYdUW7BTA1schZATyhvY8lHvcRbNUS9YGFy2U+qmzh2YPVc0I7yAOFyHfRpyUwtCSzOdPXMHmz7qDIM0e0V2wZTEk+6Ym6N63eBLp/b5Bts+2cKCSJ/LuoZO3ANSiE5hKAZjnvNSS4931jcw9jpwT0feV/qSJ1pVtCyfHKDkvK8Ejx7pUxGh2xFNSwx8QTi2H9ceC0/nni64MS/5N5dG39pDqvRV+WgGk71c9VFXF9b+xYvOw/d61iv7m3MvEHryhvecwC52jSSx4VIIgwnMNT/UsTxIgpPt3K/ARj15CptwL3Zd/ceDSATj2DGQjbxgWwhdeMMte7zpy5On9vymRm/YxBYljGVjKWF9VJf7I1+sex3wY8w/V1QPTborW/72gkdsRDaZMJBdbdHIC7aCkAu9atlLbtnrzerMnyToDaGwelOnk3/hHSem/ZK7e/t7jeeR20LYBgqa8J80gS8jbwi5F02Uj1u2NYJxap8PLkJfLxA2hIJyvnHX/AfeEPLpBfe0uSFHbnXaea3Qd5d6HcpYZ8L6M7lnFwMQ3MNg+RxUR1+6AshtbsVgfXTEg1sIGax9UND2p7f270wdG3eK9gXVGHdw2k5sOyZv+Nbs39Z308XR9DqWb2J+PwKDhuKHPobfuXf7gnYGHdCs7bhDDadD4entDug7LWNsnRNW4mYqwJ9dk+GGSTPBiA2j0G8RWNM5upZtcG4/3vMfP7KnbK2egx6CCnDPhRn7NgD3cghLIad5WcM2SO38iqHvvMOosyeMpQ5zlVCaaj06GVs9xUbHdiKoqrHWgquFEFMWUEWfXUxJAML23hAHFOctmjZQffKD2pywkhtSGHKNtpitLroscAeE7kCkSsC60vxEl6yMtL9EL5HKGCMszU5bk8gdkklAyEn5FO0yK419rIxBOIqwFMooDE0tHEVYijAUECIshRCGIhxFWIowFJ5QkEYIS5PTJrUwNGlPyN6QQPyKtpuM1E/K5+YJDV/MiA3AaehzqgAm7QnZG9IGYKo8bHnSK7VblLL3hOwNHziPuEGOqE5brrdR6i+atCfckyeWD47HkAkepRGLY/e8A8J0gCwYSNypF08bBm+e6zVz2UL4AshhBUjML/rXLefqC82bcQFhGC9JDwZ1uuu+At0S5gCETYHsV4DUeD9fDN2Zfy5OXaW2zAwQygCzBLJ8cvaW5OXKC1FxfTggFAHmoAJnSiOw2wps9KwRWgJCLaEswaj5NqkLwAYIU4BxqTSXbHXpJdRMPZgAOiAMqABCNGYIEEJutEK5IUAIwYMDQgiCACEEAcJs1Vda7gGqDhCmoiEghAAhBAHCrKXVo2C1DCBMRlp37uMIEECoX7xrX3P5C9QiINSuIcoPAUI0YkAICLNWgfJDh4T9hH7zqYH9+JHAq7zBqWjwhPAicTVCVQJCNF50JghHocahKK0X/ZnQKyEkhSdUpzG8OgQI42qC94EQjsYLRSmH+pbgq73L6bYkeEJ4DYTYmeg1TOBFc/usTTp3V9DdEuXJ2xDCUbXhaXk0/kAYmBvuMB4qkC35E5e5AMKkwSQgyxufyuPy6fMMgAFCSI73LFXU/N8AmEL9X4ABACNSKMHAgb34AAAAAElFTkSuQmCC
          mediatype: image/png
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: etcd-operator
              rules:
              - apiGroups:
                - etcd.database.coreos.com
                resources:
                - etcdclusters
                - etcdbackups
                - etcdrestores
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - deployments
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - secrets
                verbs:
                - get
            deployments:
            - name: etcd-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: etcd-operator-alm-owned
                template:
                  metadata:
                    name: etcd-operator-alm-owned
                    labels:
                      name: etcd-operator-alm-owned
                  spec:
                    serviceAccountName: etcd-operator
                    containers:
                    - name: etcd-operator
                      command:
                      - etcd-operator
                      - --create-crd=false
                      image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                    - name: etcd-backup-operator
                      image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                      command:
                      - etcd-backup-operator
                      - --create-crd=false
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
                    - name: etcd-restore-operator
                      image: quay.io/coreos/etcd-operator@sha256:c0301e4686c3ed4206e370b42de5a3bd2229b9fb4906cf85f3f30650424abec2
                      command:
                      - etcd-restore-operator
                      - --create-crd=false
                      env:
                      - name: MY_POD_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      - name: MY_POD_NAME
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.name
        customresourcedefinitions:
          owned:
          - name: etcdclusters.etcd.database.coreos.com
            version: v1beta2
            kind: EtcdCluster
            displayName: etcd Cluster
            description: Represents a cluster of etcd nodes.
            resources:
              - kind: Service
                version: v1
              - kind: Pod
                version: v1
            specDescriptors:
              - description: The desired number of member Pods for the etcd cluster.
                displayName: Size
                path: size
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podCount'
              - description: Limits describes the minimum/maximum amount of compute resources required/allowed
                displayName: Resource Requirements
                path: pod.resources
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            statusDescriptors:
              - description: The status of each of the member Pods for the etcd cluster.
                displayName: Member Status
                path: members
                x-descriptors:
                  - 'urn:alm:descriptor:com.tectonic.ui:podStatuses'
              - description: The service at which the running etcd cluster can be accessed.
                displayName: Service
                path: serviceName
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes:Service'
              - description: The current size of the etcd cluster.
                displayName: Cluster Size
                path: size
              - description: The current version of the etcd cluster.
                displayName: Current Version
                path: currentVersion
              - description: 'The target version of the etcd cluster, after upgrading.'
                displayName: Target Version
                path: targetVersion
              - description: The current status of the etcd cluster.
                displayName: Status
                path: phase
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes.phase'
              - description: Explanation for the current status of the cluster.
                displayName: Status Details
                path: reason
                x-descriptors:
                  - 'urn:alm:descriptor:io.kubernetes.phase:reason'
          - name: etcdbackups.etcd.database.coreos.com
            version: v1beta2
            kind: EtcdBackup
            displayName: etcd Backup
            description: Represents the intent to backup an etcd cluster.
            specDescriptors:
              - description: Specifies the endpoints of an etcd cluster.
                displayName: etcd Endpoint(s)
                path: etcdEndpoints
                x-descriptors: 
                  - 'urn:alm:descriptor:etcd:endpoint'
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors: 
                  - 'urn:alm:descriptor:aws:s3:path'
              - description: The name of the secret object that stores the AWS credential and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes:Secret'
            statusDescriptors:
              - description: Indicates if the backup was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors: 
                  - 'urn:alm:descriptor:text'
              - description: Indicates the reason for any backup related failures.
                displayName: Reason
                path: reason
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes.phase:reason'
          - name: etcdrestores.etcd.database.coreos.com
            version: v1beta2
            kind: EtcdRestore
            displayName: etcd Restore
            description: Represents the intent to restore an etcd cluster from a backup.
            specDescriptors:
              - description: References the EtcdCluster which should be restored,
                displayName: etcd Cluster
                path: etcdCluster.name
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes:EtcdCluster'
                  - 'urn:alm:descriptor:text'
              - description: The full AWS S3 path where the backup is saved.
                displayName: S3 Path
                path: s3.path
                x-descriptors: 
                  - 'urn:alm:descriptor:aws:s3:path'
              - description: The name of the secret object that stores the AWS credential and config files.
                displayName: AWS Secret
                path: s3.awsSecret
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes:Secret'
            statusDescriptors:
              - description: Indicates if the restore was successful.
                displayName: Succeeded
                path: succeeded
                x-descriptors: 
                  - 'urn:alm:descriptor:text'
              - description: Indicates the reason for any restore related failures.
                displayName: Reason
                path: reason
                x-descriptors: 
                  - 'urn:alm:descriptor:io.kubernetes.phase:reason'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: federationv2.v0.0.2
        namespace: placeholder
      spec:
        displayName: FederationV2
        description: |
          Kubernetes Federation V2 namespace-scoped installation
        version: 0.0.2
        maturity: alpha
        provider:
          name: Red Hat, Inc
        labels:
          alm-owner-federationv2: federationv2
          alm-status-descriptors: federationv2.v0.0.2
      
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: federation-controller-manager
              rules:
              - apiGroups:
                - clusterregistry.k8s.io
                resources:
                - clusters
                verbs:
                - "*"
              - apiGroups:
                - core.federation.k8s.io
                resources:
                - "*"
                verbs:
                - "*"
              - apiGroups:
                - multiclusterdns.federation.k8s.io
                resources:
                - "*"
                verbs:
                - "*"
              - apiGroups:
                - scheduling.federation.k8s.io
                resources:
                - "*"
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - pods
                - services
                - endpoints
                - persistentvolumeclaims
                - events
                - configmaps
                - secrets
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - deployments
                - daemonsets
                - replicasets
                - statefulsets
                verbs:
                - "*"
            # TODO(font): use statefulset
            deployments:
            - name: federation-controller-manager
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app: federation-controller-manager
                template:
                  metadata:
                    labels:
                      app: federation-controller-manager
                  spec:
                    containers:
                      - name: controller-manager
                        image: quay.io/kubernetes-multicluster/federation-v2:v0.0.2-rc.1
                        resources:
                          limits:
                            cpu: 100m
                            memory: 128Mi
                          requests:
                            cpu: 100m
                            memory: 64Mi
                        command:
                          - /root/controller-manager
                        args:
                          - --federation-namespace=$(FEDERATION_NAMESPACE)
                          - --install-crds=false
                          - --limited-scope=true
                          - --registry-namespace=$(CLUSTER_REGISTRY_NAMESPACE)
                        imagePullPolicy: Always
                        env:
                        - name: FEDERATION_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                        - name: CLUSTER_REGISTRY_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                    restartPolicy: Always
                    terminationGracePeriodSeconds: 5
                    serviceAccountName: federation-controller-manager
                    serviceAccount: federation-controller-manager
        customresourcedefinitions:
          owned:
              # TODO(font): Move Cluster CRD to required once OLM supports CSVs
              # without a deployment.
            - description: Represents an instance of a Cluster Registry
              displayName: Cluster Registry Application
              kind: Cluster
              name: clusters.clusterregistry.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedCluster resource
              displayName: FederatedCluster Resource
              kind: FederatedCluster
              name: federatedclusters.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedConfigMap resource
              displayName: FederatedConfigMap Resource
              kind: FederatedConfigMap
              name: federatedconfigmaps.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedConfigMapOverride resource
              displayName: FederatedConfigMapOverride Resource
              kind: FederatedConfigMapOverride
              name: federatedconfigmapoverrides.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedConfigMapPlacement resource
              displayName: FederatedConfigMapPlacement Resource
              kind: FederatedConfigMapPlacement
              name: federatedconfigmapplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedDeployment resource
              displayName: FederatedDeployment Resource
              kind: FederatedDeployment
              name: federateddeployments.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedDeploymentOverride resource
              displayName: FederatedDeploymentOverride Resource
              kind: FederatedDeploymentOverride
              name: federateddeploymentoverrides.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedDeploymentPlacement resource
              displayName: FederatedDeploymentPlacement Resource
              kind: FederatedDeploymentPlacement
              name: federateddeploymentplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedIngress resource
              displayName: FederatedIngress Resource
              kind: FederatedIngress
              name: federatedingresses.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedIngressPlacement resource
              displayName: FederatedIngressPlacement Resource
              kind: FederatedIngressPlacement
              name: federatedingressplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedJob resource
              displayName: FederatedJob Resource
              kind: FederatedJob
              name: federatedjobs.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedJobOverride resource
              displayName: FederatedJobOverride Resource
              kind: FederatedJobOverride
              name: federatedjoboverrides.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedJobPlacement resource
              displayName: FederatedJobPlacement Resource
              kind: FederatedJobPlacement
              name: federatedjobplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedNamespacePlacement resource
              displayName: FederatedNamespacePlacement Resource
              kind: FederatedNamespacePlacement
              name: federatednamespaceplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedReplicaSet resource
              displayName: FederatedReplicaSet Resource
              kind: FederatedReplicaSet
              name: federatedreplicasets.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedReplicaSetOverride resource
              displayName: FederatedReplicaSetOverride Resource
              kind: FederatedReplicaSetOverride
              name: federatedreplicasetoverrides.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedReplicaSetPlacement resource
              displayName: FederatedReplicaSetPlacement Resource
              kind: FederatedReplicaSetPlacement
              name: federatedreplicasetplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedSecret resource
              displayName: FederatedSecret Resource
              kind: FederatedSecret
              name: federatedsecrets.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedSecretOverride resource
              displayName: FederatedSecretOverride Resource
              kind: FederatedSecretOverride
              name: federatedsecretoverrides.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedSecretPlacement resource
              displayName: FederatedSecretPlacement Resource
              kind: FederatedSecretPlacement
              name: federatedsecretplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedService resource
              displayName: FederatedService Resource
              kind: FederatedService
              name: federatedservices.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedServiceAccount resource
              displayName: FederatedServiceAccount Resource
              kind: FederatedServiceAccount
              name: federatedserviceaccounts.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedServiceAccountPlacement resource
              displayName: FederatedServiceAccountPlacement Resource
              kind: FederatedServiceAccountPlacement
              name: federatedserviceaccountplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederatedServicePlacement resource
              displayName: FederatedServicePlacement Resource
              kind: FederatedServicePlacement
              name: federatedserviceplacements.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a FederationV2 sync controller
              displayName: FederationV2 Push Reconciler Application
              kind: FederatedTypeConfig
              name: federatedtypeconfigs.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a PropagatedVersion resource
              displayName: PropagatedVersion Resource
              kind: PropagatedVersion
              name: propagatedversions.core.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a DNSEndpoint resource
              displayName: DNSEndpoint Resource
              kind: DNSEndpoint
              name: dnsendpoints.multiclusterdns.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a MultiClusterIngressDNSRecord resource
              displayName: MultiClusterIngressDNSRecord Resource
              kind: MultiClusterIngressDNSRecord
              name: multiclusteringressdnsrecords.multiclusterdns.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a MultiClusterServiceDNSRecord resource
              displayName: MultiClusterServiceDNSRecord Resource
              kind: MultiClusterServiceDNSRecord
              name: multiclusterservicednsrecords.multiclusterdns.federation.k8s.io
              version: v1alpha1
            - description: Represents an instance of a ReplicaSchedulingPreference resource
              displayName: ReplicaSchedulingPreference Resource
              kind: ReplicaSchedulingPreference
              name: replicaschedulingpreferences.scheduling.federation.k8s.io
              version: v1alpha1
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: marketplace-operator.v0.0.1
        namespace: placeholder
      spec:
        displayName: marketplace-operator
        description: |-
          Marketplace is a gateway for users to consume off-cluster Operators which will include Red Hat, ISV, optional OpenShift and community content.
        keywords: ['marketplace', 'catalog', 'olm', 'admin']
        version: 0.0.1
        maturity: alpha
        maintainers:
        - name: AOS Marketplace Team
          email: aos-marketplace@redhat.com
        provider:
          name: Red Hat
        labels:
          name: marketplace-operator
        selector:
          matchLabels:
            name: marketplace-operator
        links:
        - name: Markplace Operator Source Code
          url: https://github.com/operator-framework/operator-marketplace
        install:
          strategy: deployment
          spec:
            clusterPermissions:
            - serviceAccountName: marketplace-operator
              rules:
              - apiGroups:
                - marketplace.redhat.com
                resources:
                - "*"
                verbs:
                - "*"
              - apiGroups:
                - ""
                resources:
                - services
                - configmaps
                verbs:
                - "*"
              - apiGroups:
                - operators.coreos.com
                resources:
                - catalogsources
                verbs:
                - "*"
            deployments:
            - name: marketplace-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    name: marketplace-operator
                template:
                  metadata:
                    name: marketplace-operator
                    labels:
                      name: marketplace-operator
                  spec:
                    serviceAccountName: marketplace-operator
                    containers:
                      - name: marketplace-operator
                        image: quay.io/openshift/origin-operator-marketplace:latest
                        ports:
                        - containerPort: 60000
                          name: metrics
                        - containerPort: 8080
                          name: healthz
                        command:
                        - marketplace-operator
                        imagePullPolicy: Always
                        livenessProbe:
                          httpGet:
                            path: /healthz
                            port: 8080
                        readinessProbe:
                          httpGet:
                            path: /healthz
                            port: 8080
                        env:
                          - name: WATCH_NAMESPACE
                            valueFrom:
                              fieldRef:
                                fieldPath: metadata.namespace
                          - name: OPERATOR_NAME
                            value: "marketplace-operator"
        customresourcedefinitions:
          owned:
          - name: operatorsources.marketplace.redhat.com
            version: v1alpha1
            kind: OperatorSource
            displayName: Operator Source
            description: Represents an OperatorSource.
            specDescriptors: 
              - description: The type of the operator source.
                displayName: Type
                path: type
              - description: Points to the remote app registry server from where operator manifests can be fetched.
                displayName: Endpoint
                path: endpoint
              - description: |-
                  The namespace in app registry.
                  Only operator manifests under this namespace will be visible.
                  Please note that this is not a k8s namespace.
                displayName: Registry Namespace
                path: registryNamespace
            statusDescriptors:
              - description: Current status of the CatalogSourceConfig
                displayName: Current Phase Name
                path: currentPhase.phase.name
              - description: Message associated with the current status
                displayName: Current Phase Message
                path: currentPhase.phase.message
          - name: catalogsourceconfigs.marketplace.redhat.com
            version: v1alpha1
            kind: CatalogSourceConfig
            displayName: Catalog Source Config
            description: Represents a CatalogSourceConfig object which is used to configure a CatalogSource.
            specDescriptors:
              - description: The namespace where the operators will be enabled.
                displayName: Target Namespace
                path: targetNamespace
              - description: List of operator(s) which will be enabled in the target namespace
                displayName: Packages
                path: packages
            statusDescriptors:
              - description: Current status of the CatalogSourceConfig
                displayName: Current Phase Name
                path: currentPhase.phase.name
              - description: Message associated with the current status
                displayName: Current Phase Message
                path: currentPhase.phase.message
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: prometheusoperator.0.14.0
        namespace: placeholder
      spec:
        displayName: Prometheus
        description: |
          An open-source monitoring system with a dimensional data model, flexible query language, efficient time series database and modern alerting approach.
      
          _The Prometheus Open Cloud Service is Public Alpha. The goal before Beta is for additional user testing and minor bug fixes._
      
          ### Monitoring applications
      
          Prometheus scrapes your application metrics based on targets maintained in a ServiceMonitor object. When alerts need to be sent, they are processsed by an AlertManager.
      
          [Read the complete guide to monitoring applications with the Prometheus Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/prometheus-ocs.html)
      
          ## Supported Features
      
          **High availability**
          Multiple instances are run across failure zones and data is replicated. This keeps your monitoring available during an outage, when you need it most.
          **Updates via automated operations**
          New Prometheus versions are deployed using a rolling update with no downtime, making it easy to stay up to date.
          **Handles the dynamic nature of containers**
          Alerting rules are attached to groups of containers instead of individual instances, which is ideal for the highly dynamic nature of container deployment.
      
        keywords: ['prometheus', 'monitoring', 'tsdb', 'alerting']
      
        maintainers:
        - name: CoreOS, Inc
          email: support@coreos.com
      
        provider:
          name: CoreOS, Inc
      
        links:
        - name: Prometheus
          url: https://www.prometheus.io/
        - name: Documentation
          url: https://coreos.com/operators/prometheus/docs/latest/
        - name: Prometheus Operator Source Code
          url: https://github.com/coreos/prometheus-operator
      
        labels:
          alm-status-descriptors: prometheusoperator.0.14.0
          alm-owner-prometheus: prometheusoperator
      
        selector:
          matchLabels:
            alm-owner-prometheus: prometheusoperator
      
        icon:
        - base64data: PHN2ZyB3aWR0aD0iMjQ5MCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+PHBhdGggZD0iTTEyOC4wMDEuNjY3QzU3LjMxMS42NjcgMCA1Ny45NzEgMCAxMjguNjY0YzAgNzAuNjkgNTcuMzExIDEyNy45OTggMTI4LjAwMSAxMjcuOTk4UzI1NiAxOTkuMzU0IDI1NiAxMjguNjY0QzI1NiA1Ny45NyAxOTguNjg5LjY2NyAxMjguMDAxLjY2N3ptMCAyMzkuNTZjLTIwLjExMiAwLTM2LjQxOS0xMy40MzUtMzYuNDE5LTMwLjAwNGg3Mi44MzhjMCAxNi41NjYtMTYuMzA2IDMwLjAwNC0zNi40MTkgMzAuMDA0em02MC4xNTMtMzkuOTRINjcuODQyVjE3OC40N2gxMjAuMzE0djIxLjgxNmgtLjAwMnptLS40MzItMzMuMDQ1SDY4LjE4NWMtLjM5OC0uNDU4LS44MDQtLjkxLTEuMTg4LTEuMzc1LTEyLjMxNS0xNC45NTQtMTUuMjE2LTIyLjc2LTE4LjAzMi0zMC43MTYtLjA0OC0uMjYyIDE0LjkzMyAzLjA2IDI1LjU1NiA1LjQ1IDAgMCA1LjQ2NiAxLjI2NSAxMy40NTggMi43MjItNy42NzMtOC45OTQtMTIuMjMtMjAuNDI4LTEyLjIzLTMyLjExNiAwLTI1LjY1OCAxOS42OC00OC4wNzkgMTIuNTgtNjYuMjAxIDYuOTEuNTYyIDE0LjMgMTQuNTgzIDE0LjggMzYuNTA1IDcuMzQ2LTEwLjE1MiAxMC40Mi0yOC42OSAxMC40Mi00MC4wNTYgMC0xMS43NjkgNy43NTUtMjUuNDQgMTUuNTEyLTI1LjkwNy02LjkxNSAxMS4zOTYgMS43OSAyMS4xNjUgOS41MyA0NS40IDIuOTAyIDkuMTAzIDIuNTMyIDI0LjQyMyA0Ljc3MiAzNC4xMzguNzQ0LTIwLjE3OCA0LjIxMy00OS42MiAxNy4wMTQtNTkuNzg0LTUuNjQ3IDEyLjguODM2IDI4LjgxOCA1LjI3IDM2LjUxOCA3LjE1NCAxMi40MjQgMTEuNDkgMjEuODM2IDExLjQ5IDM5LjYzOCAwIDExLjkzNi00LjQwNyAyMy4xNzMtMTEuODQgMzEuOTU4IDguNDUyLTEuNTg2IDE0LjI4OS0zLjAxNiAxNC4yODktMy4wMTZsMjcuNDUtNS4zNTVjLjAwMi0uMDAyLTMuOTg3IDE2LjQwMS0xOS4zMTQgMzIuMTk3eiIgZmlsbD0iI0RBNEUzMSIvPjwvc3ZnPg==
          mediatype: image/svg+xml
      
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: prometheus-k8s
              rules:
              - apiGroups: [""]
                resources:
                - nodes
                - services
                - endpoints
                - pods
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources:
                - configmaps
                verbs: ["get"]
            - serviceAccountName: prometheus-operator-0-14-0
              rules:
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs: ["get", "list"]
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - alertmanagers
                - prometheuses
                - servicemonitors
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - statefulsets
                verbs: ["*"]
              - apiGroups: [""]
                resources:
                - configmaps
                - secrets
                verbs: ["*"]
              - apiGroups: [""]
                resources:
                - pods
                verbs: ["list", "delete"]
              - apiGroups: [""]
                resources:
                - services
                - endpoints
                verbs: ["get", "create", "update"]
              - apiGroups: [""]
                resources:
                - nodes
                verbs: ["list", "watch"]
              - apiGroups: [""]
                resources:
                - namespaces
                verbs: ['list']
            deployments:
            - name: prometheus-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    k8s-app: prometheus-operator
                template:
                  metadata:
                    labels:
                      k8s-app: prometheus-operator
                  spec:
                    serviceAccount: prometheus-operator-0-14-0
                    containers:
                    - name: prometheus-operator
                      image: quay.io/coreos/prometheus-operator@sha256:5037b4e90dbb03ebdefaa547ddf6a1f748c8eeebeedf6b9d9f0913ad662b5731
                      command:
                        - sh
                        - -c
                        - >
                          /bin/operator --namespace=$K8S_NAMESPACE --crd-apigroup monitoring.coreos.com
                          --labels alm-status-descriptors=prometheusoperator.0.14.0,alm-owner-prometheus=prometheusoperator
                          --kubelet-service=kube-system/kubelet
                          --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
                      env:
                        - name: K8S_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                      ports:
                      - containerPort: 8080
                        name: http
                      resources:
                        limits:
                          cpu: 200m
                          memory: 100Mi
                        requests:
                          cpu: 100m
                          memory: 50Mi
        maturity: alpha
        version: 0.14.0
        customresourcedefinitions:
          owned:
          - name: prometheuses.monitoring.coreos.com
            version: v1
            kind: Prometheus
            displayName: Prometheus
            description: A running Prometheus instance
            resources:
              - kind: Pod
                version: v1
            specDescriptors:
            - description: Desired number of Pods for the cluster
              displayName: Size
              path: replicas
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            - description: A selector for the ConfigMaps from which to load rule files
              displayName: Rule Config Map Selector
              path: ruleSelector
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap'
            - description: ServiceMonitors to be selected for target discovery
              displayName: Service Monitor Selector
              path: serviceMonitorSelector
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:selector:monitoring.coreos.com:v1:ServiceMonitor'
            - description: The ServiceAccount to use to run the Prometheus pods
              displayName: Service Account
              path: serviceAccountName
              x-descriptors:
                - 'urn:alm:descriptor:io.kubernetes:ServiceAccount'
            - description: Define resources requests and limits for single Pods
              displayName: Resource Request
              path: resources.requests
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            statusDescriptors:
              - description: The current number of Pods for the cluster
                displayName: Cluster Size
                path: replicas
              - path: prometheusSelector
                displayName: Prometheus Service Selector
                description: Label selector to find the service that routes to this prometheus
                x-descriptors:
                - 'urn:alm:descriptor:label:selector'
          - name: servicemonitors.monitoring.coreos.com
            version: v1
            kind: ServiceMonitor
            displayName: Service Monitor
            description: Configures prometheus to monitor a particular k8s service
            resources:
              - kind: Pod
                version: v1
            specDescriptors:
            - description: Selector to select which namespaces the Endpoints objects are discovered from
              displayName: Monitoring Namespaces
              path: namespaceSelector
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:namespaceSelector'
            - description: The label to use to retrieve the job name from
              displayName: Job Label
              path: jobLabel
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:label'
            - description: A list of endpoints allowed as part of this ServiceMonitor
              displayName: Endpoints
              path: endpoints
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:endpointList'
          - name: alertmanagers.monitoring.coreos.com
            version: v1
            kind: Alertmanager
            displayName: Alert Manager
            description: Configures an Alert Manager for the namespace
            resources:
              - kind: Pod
                version: v1
            specDescriptors:
            - description: Desired number of Pods for the cluster
              displayName: Size
              path: replicas
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: prometheusoperator.0.15.0
        namespace: placeholder
        annotations:
          tectonic-visibility: ocs
          alm-examples: '[{"apiVersion":"monitoring.coreos.com/v1","kind":"Prometheus","metadata":{"name":"example","labels":{"prometheus":"k8s"}},"spec":{"replicas":2,"version":"v1.7.0","serviceAccountName":"prometheus-k8s","serviceMonitorSelector":{"matchExpressions":[{"key":"k8s-app","operator":"Exists"}]},"ruleSelector":{"matchLabels":{"role":"prometheus-rulefiles","prometheus":"k8s"}},"resources":{"requests":{"memory":"400Mi"}},"alerting":{"alertmanagers":[{"namespace":"monitoring","name":"alertmanager-main","port":"web"}]}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"name":"example","labels":{"k8s-app":"prometheus"}},"spec":{"selector":{"matchLabels":{"k8s-app":"prometheus","prometheus":"k8s"}},"namespaceSelector":{"matchNames":["monitoring"]},"endpoints":[{"port":"web","interval":"30s"}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"Alertmanager","metadata":{"name":"alertmanager-main"},"spec":{"replicas":3}}]'
      spec:
        replaces: prometheusoperator.0.14.0
        displayName: Prometheus
        description: |
          An open-source monitoring system with a dimensional data model, flexible query language, efficient time series database and modern alerting approach.
      
          _The Prometheus Open Cloud Service is Public Alpha. The goal before Beta is for additional user testing and minor bug fixes._
      
          ### Monitoring applications
      
          Prometheus scrapes your application metrics based on targets maintained in a ServiceMonitor object. When alerts need to be sent, they are processsed by an AlertManager.
      
          [Read the complete guide to monitoring applications with the Prometheus Open Cloud Service](https://coreos.com/tectonic/docs/latest/alm/prometheus-ocs.html)
      
          ### Supported Features
      
      
          **High availability**
      
      
          Multiple instances are run across failure zones and data is replicated. This keeps your monitoring available during an outage, when you need it most.
      
      
          **Updates via automated operations**
      
      
          New Prometheus versions are deployed using a rolling update with no downtime, making it easy to stay up to date.
      
      
          **Handles the dynamic nature of containers**
      
      
          Alerting rules are attached to groups of containers instead of individual instances, which is ideal for the highly dynamic nature of container deployment.
      
        keywords: ['prometheus', 'monitoring', 'tsdb', 'alerting']
      
        maintainers:
        - name: CoreOS, Inc
          email: support@coreos.com
      
        provider:
          name: CoreOS, Inc
      
        links:
        - name: Prometheus
          url: https://www.prometheus.io/
        - name: Documentation
          url: https://coreos.com/operators/prometheus/docs/latest/
        - name: Prometheus Operator Source Code
          url: https://github.com/coreos/prometheus-operator
      
        labels:
          alm-status-descriptors: prometheusoperator.0.15.0
          alm-owner-prometheus: prometheusoperator
      
        selector:
          matchLabels:
            alm-owner-prometheus: prometheusoperator
      
        icon:
        - base64data: PHN2ZyB3aWR0aD0iMjQ5MCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+PHBhdGggZD0iTTEyOC4wMDEuNjY3QzU3LjMxMS42NjcgMCA1Ny45NzEgMCAxMjguNjY0YzAgNzAuNjkgNTcuMzExIDEyNy45OTggMTI4LjAwMSAxMjcuOTk4UzI1NiAxOTkuMzU0IDI1NiAxMjguNjY0QzI1NiA1Ny45NyAxOTguNjg5LjY2NyAxMjguMDAxLjY2N3ptMCAyMzkuNTZjLTIwLjExMiAwLTM2LjQxOS0xMy40MzUtMzYuNDE5LTMwLjAwNGg3Mi44MzhjMCAxNi41NjYtMTYuMzA2IDMwLjAwNC0zNi40MTkgMzAuMDA0em02MC4xNTMtMzkuOTRINjcuODQyVjE3OC40N2gxMjAuMzE0djIxLjgxNmgtLjAwMnptLS40MzItMzMuMDQ1SDY4LjE4NWMtLjM5OC0uNDU4LS44MDQtLjkxLTEuMTg4LTEuMzc1LTEyLjMxNS0xNC45NTQtMTUuMjE2LTIyLjc2LTE4LjAzMi0zMC43MTYtLjA0OC0uMjYyIDE0LjkzMyAzLjA2IDI1LjU1NiA1LjQ1IDAgMCA1LjQ2NiAxLjI2NSAxMy40NTggMi43MjItNy42NzMtOC45OTQtMTIuMjMtMjAuNDI4LTEyLjIzLTMyLjExNiAwLTI1LjY1OCAxOS42OC00OC4wNzkgMTIuNTgtNjYuMjAxIDYuOTEuNTYyIDE0LjMgMTQuNTgzIDE0LjggMzYuNTA1IDcuMzQ2LTEwLjE1MiAxMC40Mi0yOC42OSAxMC40Mi00MC4wNTYgMC0xMS43NjkgNy43NTUtMjUuNDQgMTUuNTEyLTI1LjkwNy02LjkxNSAxMS4zOTYgMS43OSAyMS4xNjUgOS41MyA0NS40IDIuOTAyIDkuMTAzIDIuNTMyIDI0LjQyMyA0Ljc3MiAzNC4xMzguNzQ0LTIwLjE3OCA0LjIxMy00OS42MiAxNy4wMTQtNTkuNzg0LTUuNjQ3IDEyLjguODM2IDI4LjgxOCA1LjI3IDM2LjUxOCA3LjE1NCAxMi40MjQgMTEuNDkgMjEuODM2IDExLjQ5IDM5LjYzOCAwIDExLjkzNi00LjQwNyAyMy4xNzMtMTEuODQgMzEuOTU4IDguNDUyLTEuNTg2IDE0LjI4OS0zLjAxNiAxNC4yODktMy4wMTZsMjcuNDUtNS4zNTVjLjAwMi0uMDAyLTMuOTg3IDE2LjQwMS0xOS4zMTQgMzIuMTk3eiIgZmlsbD0iI0RBNEUzMSIvPjwvc3ZnPg==
          mediatype: image/svg+xml
      
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: prometheus-k8s
              rules:
              - apiGroups: [""]
                resources:
                - nodes
                - services
                - endpoints
                - pods
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources:
                - configmaps
                verbs: ["get"]
            - serviceAccountName: prometheus-operator-0-14-0
              rules:
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs: ["get", "list"]
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - alertmanagers
                - prometheuses
                - servicemonitors
                verbs:
                - "*"
              - apiGroups:
                - apps
                resources:
                - statefulsets
                verbs: ["*"]
              - apiGroups: [""]
                resources:
                - configmaps
                - secrets
                verbs: ["*"]
              - apiGroups: [""]
                resources:
                - pods
                verbs: ["list", "delete"]
              - apiGroups: [""]
                resources:
                - services
                - endpoints
                verbs: ["get", "create", "update"]
              - apiGroups: [""]
                resources:
                - nodes
                verbs: ["list", "watch"]
              - apiGroups: [""]
                resources:
                - namespaces
                verbs: ['list']
            deployments:
            - name: prometheus-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    k8s-app: prometheus-operator
                template:
                  metadata:
                    labels:
                      k8s-app: prometheus-operator
                  spec:
                    serviceAccount: prometheus-operator-0-14-0
                    containers:
                    - name: prometheus-operator
                      image: quay.io/coreos/prometheus-operator@sha256:0e92dd9b5789c4b13d53e1319d0a6375bcca4caaf0d698af61198061222a576d
                      command:
                        - sh
                        - -c
                        - >
                          /bin/operator --namespace=$K8S_NAMESPACE --crd-apigroup monitoring.coreos.com
                          --labels alm-status-descriptors=prometheusoperator.0.15.0,alm-owner-prometheus=prometheusoperator
                          --kubelet-service=kube-system/kubelet
                          --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
                      env:
                        - name: K8S_NAMESPACE
                          valueFrom:
                            fieldRef:
                              fieldPath: metadata.namespace
                      ports:
                      - containerPort: 8080
                        name: http
                      resources:
                        limits:
                          cpu: 200m
                          memory: 100Mi
                        requests:
                          cpu: 100m
                          memory: 50Mi
        maturity: alpha
        version: 0.15.0
        customresourcedefinitions:
          owned:
          - name: prometheuses.monitoring.coreos.com
            version: v1
            kind: Prometheus
            displayName: Prometheus
            description: A running Prometheus instance
            resources:
              - kind: StatefulSet
                version: v1beta2
              - kind: Pod
                version: v1
            specDescriptors:
            - description: Desired number of Pods for the cluster
              displayName: Size
              path: replicas
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            - description: A selector for the ConfigMaps from which to load rule files
              displayName: Rule Config Map Selector
              path: ruleSelector
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap'
            - description: ServiceMonitors to be selected for target discovery
              displayName: Service Monitor Selector
              path: serviceMonitorSelector
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:selector:monitoring.coreos.com:v1:ServiceMonitor'
            - description: The ServiceAccount to use to run the Prometheus pods
              displayName: Service Account
              path: serviceAccountName
              x-descriptors:
                - 'urn:alm:descriptor:io.kubernetes:ServiceAccount'
            - description: Limits describes the minimum/maximum amount of compute resources required/allowed
              displayName: Resource Requirements
              path: resources
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
            statusDescriptors:
              - description: The current number of Pods for the cluster
                displayName: Cluster Size
                path: replicas
              - path: prometheusSelector
                displayName: Prometheus Service Selector
                description: Label selector to find the service that routes to this prometheus
                x-descriptors:
                - 'urn:alm:descriptor:label:selector'
          - name: servicemonitors.monitoring.coreos.com
            version: v1
            kind: ServiceMonitor
            displayName: Service Monitor
            description: Configures prometheus to monitor a particular k8s service
            resources:
              - kind: Pod
                version: v1
            specDescriptors:
            - description: Selector to select which namespaces the Endpoints objects are discovered from
              displayName: Monitoring Namespaces
              path: namespaceSelector
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:namespaceSelector'
            - description: The label to use to retrieve the job name from
              displayName: Job Label
              path: jobLabel
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:label'
            - description: A list of endpoints allowed as part of this ServiceMonitor
              displayName: Endpoints
              path: endpoints
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:endpointList'
          - name: alertmanagers.monitoring.coreos.com
            version: v1
            kind: Alertmanager
            displayName: Alert Manager
            description: Configures an Alert Manager for the namespace
            resources:
              - kind: StatefulSet
                version: v1beta2
              - kind: Pod
                version: v1
            specDescriptors:
            - description: Desired number of Pods for the cluster
              displayName: Size
              path: replicas
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            - description: Limits describes the minimum/maximum amount of compute resources required/allowed
              displayName: Resource Requirements
              path: resources
              x-descriptors:
                - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: prometheusoperator.0.22.2
        namespace: placeholder
        annotations:
          alm-examples: '[{"apiVersion":"monitoring.coreos.com/v1","kind":"Prometheus","metadata":{"name":"example","labels":{"prometheus":"k8s"}},"spec":{"replicas":2,"version":"v2.3.2","serviceAccountName":"prometheus-k8s","securityContext": {}, "serviceMonitorSelector":{"matchExpressions":[{"key":"k8s-app","operator":"Exists"}]},"ruleSelector":{"matchLabels":{"role":"prometheus-rulefiles","prometheus":"k8s"}},"alerting":{"alertmanagers":[{"namespace":"monitoring","name":"alertmanager-main","port":"web"}]}}},{"apiVersion":"monitoring.coreos.com/v1","kind":"ServiceMonitor","metadata":{"name":"example","labels":{"k8s-app":"prometheus"}},"spec":{"selector":{"matchLabels":{"k8s-app":"prometheus"}},"endpoints":[{"port":"web","interval":"30s"}]}},{"apiVersion":"monitoring.coreos.com/v1","kind":"Alertmanager","metadata":{"name":"alertmanager-main"},"spec":{"replicas":3, "securityContext": {}}}]'
      spec:
        replaces: prometheusoperator.0.15.0
        displayName: Prometheus Operator
        description: |
          The Prometheus Operator for Kubernetes provides easy monitoring definitions for Kubernetes services and deployment and management of Prometheus instances.
      
          Once installed, the Prometheus Operator provides the following features:
      
          * **Create/Destroy**: Easily launch a Prometheus instance for your Kubernetes namespace, a specific application or team easily using the Operator.
      
          * **Simple Configuration**: Configure the fundamentals of Prometheus like versions, persistence, retention policies, and replicas from a native Kubernetes resource.
      
          * **Target Services via Labels**: Automatically generate monitoring target configurations based on familiar Kubernetes label queries; no need to learn a Prometheus specific configuration language.
      
          ### Other Supported Features
      
          **High availability**
      
          Multiple instances are run across failure zones and data is replicated. This keeps your monitoring available during an outage, when you need it most.
      
          **Updates via automated operations**
      
          New Prometheus versions are deployed using a rolling update with no downtime, making it easy to stay up to date.
      
          **Handles the dynamic nature of containers**
      
          Alerting rules are attached to groups of containers instead of individual instances, which is ideal for the highly dynamic nature of container deployment.
      
        keywords: ['prometheus', 'monitoring', 'tsdb', 'alerting']
      
        maintainers:
        - name: Red Hat
          email: openshift-operators@redhat.com
      
        provider:
          name: Red Hat
      
        links:
        - name: Prometheus
          url: https://www.prometheus.io/
        - name: Documentation
          url: https://coreos.com/operators/prometheus/docs/latest/
        - name: Prometheus Operator
          url: https://github.com/coreos/prometheus-operator
      
        labels:
          alm-status-descriptors: prometheusoperator.0.22.2
          alm-owner-prometheus: prometheusoperator
      
        selector:
          matchLabels:
            alm-owner-prometheus: prometheusoperator
      
        icon:
        - base64data: PHN2ZyB3aWR0aD0iMjQ5MCIgaGVpZ2h0PSIyNTAwIiB2aWV3Qm94PSIwIDAgMjU2IDI1NyIgeG1sbnM9Imh0dHA6Ly93d3cudzMub3JnLzIwMDAvc3ZnIiBwcmVzZXJ2ZUFzcGVjdFJhdGlvPSJ4TWlkWU1pZCI+PHBhdGggZD0iTTEyOC4wMDEuNjY3QzU3LjMxMS42NjcgMCA1Ny45NzEgMCAxMjguNjY0YzAgNzAuNjkgNTcuMzExIDEyNy45OTggMTI4LjAwMSAxMjcuOTk4UzI1NiAxOTkuMzU0IDI1NiAxMjguNjY0QzI1NiA1Ny45NyAxOTguNjg5LjY2NyAxMjguMDAxLjY2N3ptMCAyMzkuNTZjLTIwLjExMiAwLTM2LjQxOS0xMy40MzUtMzYuNDE5LTMwLjAwNGg3Mi44MzhjMCAxNi41NjYtMTYuMzA2IDMwLjAwNC0zNi40MTkgMzAuMDA0em02MC4xNTMtMzkuOTRINjcuODQyVjE3OC40N2gxMjAuMzE0djIxLjgxNmgtLjAwMnptLS40MzItMzMuMDQ1SDY4LjE4NWMtLjM5OC0uNDU4LS44MDQtLjkxLTEuMTg4LTEuMzc1LTEyLjMxNS0xNC45NTQtMTUuMjE2LTIyLjc2LTE4LjAzMi0zMC43MTYtLjA0OC0uMjYyIDE0LjkzMyAzLjA2IDI1LjU1NiA1LjQ1IDAgMCA1LjQ2NiAxLjI2NSAxMy40NTggMi43MjItNy42NzMtOC45OTQtMTIuMjMtMjAuNDI4LTEyLjIzLTMyLjExNiAwLTI1LjY1OCAxOS42OC00OC4wNzkgMTIuNTgtNjYuMjAxIDYuOTEuNTYyIDE0LjMgMTQuNTgzIDE0LjggMzYuNTA1IDcuMzQ2LTEwLjE1MiAxMC40Mi0yOC42OSAxMC40Mi00MC4wNTYgMC0xMS43NjkgNy43NTUtMjUuNDQgMTUuNTEyLTI1LjkwNy02LjkxNSAxMS4zOTYgMS43OSAyMS4xNjUgOS41MyA0NS40IDIuOTAyIDkuMTAzIDIuNTMyIDI0LjQyMyA0Ljc3MiAzNC4xMzguNzQ0LTIwLjE3OCA0LjIxMy00OS42MiAxNy4wMTQtNTkuNzg0LTUuNjQ3IDEyLjguODM2IDI4LjgxOCA1LjI3IDM2LjUxOCA3LjE1NCAxMi40MjQgMTEuNDkgMjEuODM2IDExLjQ5IDM5LjYzOCAwIDExLjkzNi00LjQwNyAyMy4xNzMtMTEuODQgMzEuOTU4IDguNDUyLTEuNTg2IDE0LjI4OS0zLjAxNiAxNC4yODktMy4wMTZsMjcuNDUtNS4zNTVjLjAwMi0uMDAyLTMuOTg3IDE2LjQwMS0xOS4zMTQgMzIuMTk3eiIgZmlsbD0iI0RBNEUzMSIvPjwvc3ZnPg==
          mediatype: image/svg+xml
      
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: prometheus-k8s
              rules:
              - apiGroups: [""]
                resources:
                - nodes
                - services
                - endpoints
                - pods
                verbs: ["get", "list", "watch"]
              - apiGroups: [""]
                resources:
                - configmaps
                verbs: ["get"]
            - serviceAccountName: prometheus-operator-0-22-2
              rules:
              - apiGroups:
                - apiextensions.k8s.io
                resources:
                - customresourcedefinitions
                verbs:
                - '*'
              - apiGroups:
                - monitoring.coreos.com
                resources:
                - alertmanagers
                - prometheuses
                - prometheuses/finalizers
                - alertmanagers/finalizers
                - servicemonitors
                - prometheusrules
                verbs:
                - '*'
              - apiGroups:
                - apps
                resources:
                - statefulsets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - configmaps
                - secrets
                verbs:
                - '*'
              - apiGroups:
                - ""
                resources:
                - pods
                verbs:
                - list
                - delete
              - apiGroups:
                - ""
                resources:
                - services
                - endpoints
                verbs:
                - get
                - create
                - update
              - apiGroups:
                - ""
                resources:
                - nodes
                verbs:
                - list
                - watch
              - apiGroups:
                - ""
                resources:
                - namespaces
                verbs:
                - list
                - watch
            deployments:
            - name: prometheus-operator
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    k8s-app: prometheus-operator
                template:
                  metadata:
                    labels:
                      k8s-app: prometheus-operator
                  spec:
                    serviceAccount: prometheus-operator-0-22-2
                    containers:
                    - name: prometheus-operator
                      image: quay.io/coreos/prometheus-operator@sha256:3daa69a8c6c2f1d35dcf1fe48a7cd8b230e55f5229a1ded438f687debade5bcf
                      args:
                      - -namespace=$(K8S_NAMESPACE)
                      - -manage-crds=false
                      - -logtostderr=true
                      - --config-reloader-image=quay.io/coreos/configmap-reload:v0.0.1
                      - --prometheus-config-reloader=quay.io/coreos/prometheus-config-reloader:v0.22.2
                      env:
                      - name: K8S_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      ports:
                      - containerPort: 8080
                        name: http
                      resources:
                        limits:
                          cpu: 200m
                          memory: 100Mi
                        requests:
                          cpu: 100m
                          memory: 50Mi
                      securityContext:
                        allowPrivilegeEscalation: false
                        readOnlyRootFilesystem: true
                    nodeSelector:
                      beta.kubernetes.io/os: linux
        maturity: beta
        version: 0.22.2
        customresourcedefinitions:
          owned:
          - name: prometheuses.monitoring.coreos.com
            version: v1
            kind: Prometheus
            displayName: Prometheus
            description: A running Prometheus instance
            resources:
            - kind: StatefulSet
              version: v1beta2
            - kind: Pod
              version: v1
            - kind: ConfigMap
              version: v1
            - kind: Service
              version: v1
            specDescriptors:
            - description: Desired number of Pods for the cluster
              displayName: Size
              path: replicas
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            - description: A selector for the ConfigMaps from which to load rule files
              displayName: Rule Config Map Selector
              path: ruleSelector
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:selector:core:v1:ConfigMap'
            - description: ServiceMonitors to be selected for target discovery
              displayName: Service Monitor Selector
              path: serviceMonitorSelector
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:selector:monitoring.coreos.com:v1:ServiceMonitor'
            - description: The ServiceAccount to use to run the Prometheus pods
              displayName: Service Account
              path: serviceAccountName
              x-descriptors:
              - 'urn:alm:descriptor:io.kubernetes:ServiceAccount'
            - description: Limits describes the minimum/maximum amount of compute resources required/allowed
              displayName: Resource Requirements
              path: resources
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
          - name: prometheusrules.monitoring.coreos.com
            version: v1
            kind: PrometheusRule
            displayName: Prometheus Rule
            description: A Prometheus Rule configures groups of sequentially evaluated recording and alerting rules.
          - name: servicemonitors.monitoring.coreos.com
            version: v1
            kind: ServiceMonitor
            displayName: Service Monitor
            description: Configures prometheus to monitor a particular k8s service
            resources:
            - kind: Pod
              version: v1
            specDescriptors:
            - description: The label to use to retrieve the job name from
              displayName: Job Label
              path: jobLabel
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:label'
            - description: A list of endpoints allowed as part of this ServiceMonitor
              displayName: Endpoints
              path: endpoints
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:endpointList'
          - name: alertmanagers.monitoring.coreos.com
            version: v1
            kind: Alertmanager
            displayName: Alertmanager
            description: Configures an Alertmanager for the namespace
            resources:
            - kind: StatefulSet
              version: v1beta2
            - kind: Pod
              version: v1
            - kind: Service
              version: v1
            specDescriptors:
            - description: Desired number of Pods for the cluster
              displayName: Size
              path: replicas
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:podCount'
            - description: Limits describes the minimum/maximum amount of compute resources required/allowed
              displayName: Resource Requirements
              path: resources
              x-descriptors:
              - 'urn:alm:descriptor:com.tectonic.ui:resourceRequirements'
      
    - #! validate-crd: deploy/chart/templates/0000_30_02-clusterserviceversion.crd.yaml
      #! parse-kind: ClusterServiceVersion
      apiVersion: operators.coreos.com/v1alpha1
      kind: ClusterServiceVersion
      metadata:
        name: svcat.v0.1.34
        namespace: placeholder
      spec:
        displayName: Service Catalog
        description: Service Catalog lets you provision cloud services directly from the comfort of native Kubernetes tooling. This project is in incubation to bring integration with service brokers to the Kubernetes ecosystem via the Open Service Broker API.
        keywords: ['catalog', 'service', 'svcat', 'osb', 'broker']
        maintainers:
        - name: Red Hat
          email: openshift-operators@redhat.com
        provider:
          name: Red Hat
        links:
        - name: Documentation
          url: https://svc-cat.io/docs
        - name: Service Catalog
          url: https://github.com/kubernetes-incubator/service-catalog
        install:
          strategy: deployment
          spec:
            permissions:
            - serviceAccountName: service-catalog-controller
              rules:
              - apiGroups:     [""]
                resources:     ["configmaps"]
                resourceNames: ["cluster-info"]
                verbs:         ["get","create","list","watch","update"]
              - apiGroups:     [""]
                resources:     ["configmaps"]
                verbs:         ["create", "list", "watch", "get", "update"]
              - apiGroups:     [""]
                resources:     ["configmaps"]
                resourceNames: ["service-catalog-controller-manager"]
                verbs:         ["get","update"]
            clusterPermissions:
            - serviceAccountName: service-catalog-controller
              rules:
              - apiGroups: [""]
                resources: ["events"]
                verbs:     ["create","patch","update"]
              - apiGroups: [""]
                resources: ["secrets"]
                verbs:     ["get","create","update","delete","list","watch","patch"]
              - apiGroups: [""]
                resources: ["pods"]
                verbs:     ["get","list","update", "patch", "watch", "delete", "initialize"]
              - apiGroups: [""]
                resources: ["namespaces"]
                verbs:     ["get","list","watch"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["clusterserviceclasses"]
                verbs:     ["get","list","watch","create","patch","update","delete"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["clusterserviceplans"]
                verbs:     ["get","list","watch","create","patch","update","delete"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["clusterservicebrokers"]
                verbs:     ["get","list","watch"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["serviceinstances","servicebindings"]
                verbs:     ["get","list","watch", "update"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["clusterservicebrokers/status","clusterserviceclasses/status","clusterserviceplans/status","serviceinstances/status","serviceinstances/reference","servicebindings/status","servicebindings/finalizers"]
                verbs:     ["update"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["serviceclasses"]
                verbs:     ["get","list","watch","create","patch","update","delete"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["serviceplans"]
                verbs:     ["get","list","watch","create","patch","update","delete"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["servicebrokers"]
                verbs:     ["get","list","watch"]
              - apiGroups: ["servicecatalog.k8s.io"]
                resources: ["servicebrokers/status","serviceclasses/status","serviceplans/status"]
                verbs:     ["update"]
            - serviceAccountName: service-catalog-apiserver
              rules:
              - apiGroups:     [""]
                resources:     ["configmaps"]
                resourceNames: ["extension-apiserver-authentication"]
                verbs:         ["get"]
              - apiGroups: [""]
                resources: ["namespaces"]
                verbs:     ["get", "list", "watch"]
              - apiGroups: ["admissionregistration.k8s.io"]
                resources: ["validatingwebhookconfigurations"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["admissionregistration.k8s.io"]
                resources: ["mutatingwebhookconfigurations"]
                verbs: ["get", "list", "watch"]
              - apiGroups: ["authentication.k8s.io"]
                resources: ["tokenreviews"]
                verbs: ["create"]
              - apiGroups: ["authorization.k8s.io"]
                resources: ["subjectaccessreviews"]
                verbs: ["create"]
            deployments:
            - name: apiserver
              spec:
                replicas: 1
                strategy:
                  type: RollingUpdate
                selector:
                  matchLabels:
                    app: apiserver
                template:
                  metadata:
                    labels:
                      app: apiserver
                  spec:
                    serviceAccountName: service-catalog-apiserver
                    containers:
                    - name: apiserver
                      image: quay.io/openshift/origin-service-catalog:v4.0.0
                      imagePullPolicy: IfNotPresent
                      command: ["/usr/bin/service-catalog"]
                      resources:
                        limits:
                          cpu: 100m
                          memory: 60Mi
                        requests:
                          cpu: 100m
                          memory: 40Mi
                      args:
                      - apiserver
                      - --enable-admission-plugins
                      - "NamespaceLifecycle,DefaultServicePlan,ServiceBindingsLifecycle,ServicePlanChangeValidator,BrokerAuthSarCheck"
                      - --secure-port
                      - "5443"
                      - --etcd-servers
                      - http://localhost:2379
                      - -v
                      - "3"
                      - --feature-gates
                      - OriginatingIdentity=true
                      - --feature-gates
                      - NamespacedServiceBroker=true
                      ports:
                      - containerPort: 5443
                      volumeMounts:
                      - name: apiservice-cert
                        mountPath: /var/run/kubernetes-service-catalog
                      readinessProbe:
                        httpGet:
                          port: 5443
                          path: /healthz
                          scheme: HTTPS
                        failureThreshold: 1
                        initialDelaySeconds: 30
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 5
                      livenessProbe:
                        httpGet:
                          port: 5443
                          path: /healthz
                          scheme: HTTPS
                        failureThreshold: 3
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                    - name: etcd
                      image: quay.io/coreos/etcd:latest
                      imagePullPolicy: Always
                      resources:
                        limits:
                          cpu: 100m
                          memory: 150Mi
                        requests:
                          cpu: 100m
                          memory: 50Mi
                      env:
                      - name: ETCD_DATA_DIR
                        value: /etcd-data-dir
                      command:
                      - /usr/local/bin/etcd
                      - --listen-client-urls
                      - http://0.0.0.0:2379
                      - --advertise-client-urls
                      - http://localhost:2379
                      ports:
                      - containerPort: 2379
                      volumeMounts:
                      - name: etcd-data-dir
                        mountPath: /etcd-data-dir
                      readinessProbe:
                        httpGet:
                          port: 2379
                          path: /health
                        failureThreshold: 1
                        initialDelaySeconds: 30
                        periodSeconds: 5
                        successThreshold: 1
                        timeoutSeconds: 5
                      livenessProbe:
                        httpGet:
                          port: 2379
                          path: /health
                        failureThreshold: 3
                        initialDelaySeconds: 30
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 5
                    volumes:
                    - name: etcd-data-dir
                      emptyDir: {}
            - name: controller-manager
              spec:
                replicas: 1
                strategy:
                  type: RollingUpdate
                selector:
                  matchLabels:
                    app: controller-manager
                template:
                  metadata:
                    labels:
                      app: controller-manager
                  spec:
                    serviceAccountName: service-catalog-controller
                    containers:
                    - name: controller-manager
                      image: quay.io/openshift/origin-service-catalog:v4.0.0
                      imagePullPolicy: IfNotPresent
                      command: ["/usr/bin/service-catalog"]
                      resources:
                        limits:
                          cpu: 100m
                          memory: 60Mi
                        requests:
                          cpu: 100m
                          memory: 40Mi
                      env:
                      - name: K8S_NAMESPACE
                        valueFrom:
                          fieldRef:
                            fieldPath: metadata.namespace
                      args:
                      - controller-manager
                      - --secure-port
                      - "8444"
                      - -v
                      - "3"
                      - --leader-election-namespace
                      - kube-service-catalog
                      - --leader-elect-resource-lock
                      - configmaps
                      - --cluster-id-configmap-namespace=kube-service-catalog
                      - --broker-relist-interval
                      - "5m"
                      - --feature-gates
                      - "OriginatingIdentity=true"
                      - --feature-gates
                      - "AsyncBindingOperations=true"
                      - --feature-gates
                      - "NamespacedServiceBroker=true"
                      ports:
                      - containerPort: 8444
                      readinessProbe:
                        httpGet:
                          port: 8444
                          path: /healthz
                          scheme: HTTPS
                        failureThreshold: 1
                        initialDelaySeconds: 20
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 2
                      livenessProbe:
                        httpGet:
                          port: 8444
                          path: /healthz
                          scheme: HTTPS
                        failureThreshold: 3
                        initialDelaySeconds: 20
                        periodSeconds: 10
                        successThreshold: 1
                        timeoutSeconds: 2
                      # The following apiservice-cert is borrowed from the apiservice - it should be
                      # replaced with one specific for the controller manager.  How to create service
                      # for controller manager??
                      volumeMounts:
                      - name: apiservice-cert
                        mountPath: /var/run/kubernetes-service-catalog
                    volumes:
                    - name: apiservice-cert
                      secret:
                        defaultMode: 420
                        items:
                        - key: tls.crt
                          path: apiserver.crt
                        - key: tls.key
                          path: apiserver.key
                        secretName: v1beta1.servicecatalog.k8s.io-cert
        maturity: alpha
        version: 0.1.34
        apiservicedefinitions:
          owned:
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ClusterServiceClass
            name: clusterserviceclasses
            displayName: ClusterServiceClass
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ClusterServicePlan
            name: clusterserviceplans
            displayName: ClusterServicePlan
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ClusterServiceBroker
            name: clusterservicebrokers
            displayName: ClusterServiceBroker
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ServiceInstance
            name: serviceinstances
            displayName: ServiceInstance
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ServiceBinding
            name: servicebindings
            displayName: ServiceBinding
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ServiceClass
            name: serviceclasses
            displayName: ServiceClass
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ServicePlan
            name: serviceplans
            displayName: ServicePlan
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
          - group: servicecatalog.k8s.io
            version: v1beta1
            kind: ServiceBroker
            name: servicebrokers
            displayName: ServiceBroker
            description: A service catalog resource
            deploymentName: apiserver
            containerPort: 5443
      
  packages: |-
    - #! package-manifest: deploy/chart/catalog_resources/rh-operators/amq-streams.v1.0.0.clusterserviceversion.yaml
      packageName: amq-streams
      channels:
      - name: preview
        currentCSV: amqstreams.v1.0.0.beta
      
    - #! package-manifest: ./deploy/chart/catalog_resources/rh-operators/clusterlogging.v0.0.1.clusterserviceversion.yaml
      packageName: cluster-logging
      channels:
      - name: preview
        currentCSV: clusterlogging.v0.0.1
      
    - packageName: descheduler
      channels:
      - name: alpha
        currentCSV: descheduler.v0.0.1
      
    - #! package-manifest: deploy/chart/catalog_resources/rh-operators/etcdoperator.v0.9.2.clusterserviceversion.yaml
      packageName: etcd
      channels:
      - name: alpha
        currentCSV: etcdoperator.v0.9.2
      
    - packageName: federationv2
      channels:
      - name: alpha
        currentCSV: federationv2.v0.0.2
      
    - #! package-manifest: deploy/chart/catalog_resources/rh-operators/marketplace.v0.0.1.clusterserviceversion.yaml
      packageName: marketplace
      channels:
      - name: alpha
        currentCSV: marketplace-operator.v0.0.1
      
    - #! package-manifest: deploy/chart/catalog_resources/rh-operators/prometheusoperator.0.22.2.clusterserviceversion.yaml
      packageName: prometheus
      channels:
      - name: preview
        currentCSV: prometheusoperator.0.22.2
      
    - #! package-manifest: deploy/chart/catalog_resources/rh-operators/svcat.v0.1.34.clusterserviceversion.yaml
      packageName: svcat
      channels:
      - name: alpha
        currentCSV: svcat.v0.1.34
      

