// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// CustomFeatureGatesApplyConfiguration represents an declarative configuration of the CustomFeatureGates type for use
// with apply.
type CustomFeatureGatesApplyConfiguration struct {
	Enabled  []string `json:"enabled,omitempty"`
	Disabled []string `json:"disabled,omitempty"`
}

// CustomFeatureGatesApplyConfiguration constructs an declarative configuration of the CustomFeatureGates type for use with
// apply.
func CustomFeatureGates() *CustomFeatureGatesApplyConfiguration {
	return &CustomFeatureGatesApplyConfiguration{}
}

// WithEnabled adds the given value to the Enabled field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Enabled field.
func (b *CustomFeatureGatesApplyConfiguration) WithEnabled(values ...string) *CustomFeatureGatesApplyConfiguration {
	for i := range values {
		b.Enabled = append(b.Enabled, values[i])
	}
	return b
}

// WithDisabled adds the given value to the Disabled field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the Disabled field.
func (b *CustomFeatureGatesApplyConfiguration) WithDisabled(values ...string) *CustomFeatureGatesApplyConfiguration {
	for i := range values {
		b.Disabled = append(b.Disabled, values[i])
	}
	return b
}
