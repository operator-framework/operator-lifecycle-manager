// Code generated by applyconfiguration-gen. DO NOT EDIT.

package v1

// BareMetalPlatformStatusApplyConfiguration represents an declarative configuration of the BareMetalPlatformStatus type for use
// with apply.
type BareMetalPlatformStatusApplyConfiguration struct {
	APIServerInternalIP  *string  `json:"apiServerInternalIP,omitempty"`
	APIServerInternalIPs []string `json:"apiServerInternalIPs,omitempty"`
	IngressIP            *string  `json:"ingressIP,omitempty"`
	IngressIPs           []string `json:"ingressIPs,omitempty"`
	NodeDNSIP            *string  `json:"nodeDNSIP,omitempty"`
}

// BareMetalPlatformStatusApplyConfiguration constructs an declarative configuration of the BareMetalPlatformStatus type for use with
// apply.
func BareMetalPlatformStatus() *BareMetalPlatformStatusApplyConfiguration {
	return &BareMetalPlatformStatusApplyConfiguration{}
}

// WithAPIServerInternalIP sets the APIServerInternalIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the APIServerInternalIP field is set to the value of the last call.
func (b *BareMetalPlatformStatusApplyConfiguration) WithAPIServerInternalIP(value string) *BareMetalPlatformStatusApplyConfiguration {
	b.APIServerInternalIP = &value
	return b
}

// WithAPIServerInternalIPs adds the given value to the APIServerInternalIPs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the APIServerInternalIPs field.
func (b *BareMetalPlatformStatusApplyConfiguration) WithAPIServerInternalIPs(values ...string) *BareMetalPlatformStatusApplyConfiguration {
	for i := range values {
		b.APIServerInternalIPs = append(b.APIServerInternalIPs, values[i])
	}
	return b
}

// WithIngressIP sets the IngressIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the IngressIP field is set to the value of the last call.
func (b *BareMetalPlatformStatusApplyConfiguration) WithIngressIP(value string) *BareMetalPlatformStatusApplyConfiguration {
	b.IngressIP = &value
	return b
}

// WithIngressIPs adds the given value to the IngressIPs field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the IngressIPs field.
func (b *BareMetalPlatformStatusApplyConfiguration) WithIngressIPs(values ...string) *BareMetalPlatformStatusApplyConfiguration {
	for i := range values {
		b.IngressIPs = append(b.IngressIPs, values[i])
	}
	return b
}

// WithNodeDNSIP sets the NodeDNSIP field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the NodeDNSIP field is set to the value of the last call.
func (b *BareMetalPlatformStatusApplyConfiguration) WithNodeDNSIP(value string) *BareMetalPlatformStatusApplyConfiguration {
	b.NodeDNSIP = &value
	return b
}
