# Generated from .gitlab-ci.jsonnet 
#     DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN 
---
container-base-build:
  before_script:
  - docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  image: docker:git
  only:
  - schedules
  - tags
  script:
  - 'docker build --build-arg sshkey=$OPERATORCLENT_RSA_B64 --no-cache -f base.Dockerfile -t quay.io/coreos/alm-ci:base . '
  - docker push quay.io/coreos/alm-ci:base
  stage: docker_base
  tags:
  - kubernetes
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker-host.gitlab.svc.cluster.local:2375
container-build:
  before_script:
  - docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  - mkdir -p $PWD/bin
  image: docker:git
  script:
  - docker build -f Dockerfile .
  - "docker tag $(docker images --filter 'label=broker=true' --format '{{.CreatedAt}}\t{{.ID}}' | sort -nr | head -n 1 | cut -f2) quay.io/coreos/alm-service-broker-ci:${CI_COMMIT_REF_SLUG}-pre"
  - "docker tag $(docker images --filter 'label=builder=true' --format '{{.CreatedAt}}\t{{.ID}}' | sort -nr | head -n 1 | cut -f2) quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}"
  - "docker tag $(docker images --filter 'label=catalog=true' --format '{{.CreatedAt}}\t{{.ID}}' | sort -nr | head -n 1 | cut -f2) quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre"
  - "docker tag $(docker images --filter 'label=e2e=true' --format '{{.CreatedAt}}\t{{.ID}}' | sort -nr | head -n 1 | cut -f2) quay.io/coreos/alm-e2e:${CI_COMMIT_REF_SLUG}-${SHA8}"
  - "docker tag $(docker images --filter 'label=olm=true' --format '{{.CreatedAt}}\t{{.ID}}' | sort -nr | head -n 1 | cut -f2) quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre"
  - docker push quay.io/coreos/alm-service-broker-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker push quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}
  - docker push quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker push quay.io/coreos/alm-e2e:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker push quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker run  quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG} make verify-codegen verify-catalog
  stage: docker_build
  tags:
  - kubernetes
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker-host.gitlab.svc.cluster.local:2375
container-release:
  before_script:
  - docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  - mkdir -p $PWD/bin
  image: docker:git
  only:
  - master
  - tags
  script:
  - docker pull quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker tag quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre quay.io/coreos/olm:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker push quay.io/coreos/olm:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker pull quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker tag quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre quay.io/coreos/catalog:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker push quay.io/coreos/catalog:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker pull quay.io/coreos/alm-service-broker-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker tag quay.io/coreos/alm-service-broker-ci:${CI_COMMIT_REF_SLUG}-pre quay.io/coreos/alm-service-broker:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker push quay.io/coreos/alm-service-broker:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker pull quay.io/coreos/alm-e2e:${CI_COMMIT_REF_SLUG}-${SHA8}
  - docker tag quay.io/coreos/alm-e2e:${CI_COMMIT_REF_SLUG}-${SHA8} quay.io/coreos/alm-e2e:latest
  - docker push quay.io/coreos/alm-e2e:latest
  stage: docker_release
  tags:
  - kubernetes
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker-host.gitlab.svc.cluster.local:2375
deploy-preview:
  before_script:
  - 'echo "version: 1.0.0-${CI_COMMIT_REF_SLUG}-pre" >> deploy/chart/Chart.yaml'
  - 'echo "{\"alm.image.ref\": \"quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre\", \"catalog.image.ref\": \"quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre\", \"catalog_namespace\": \"tectonic-system\",
    \"namespace\": \"ci-alm-${CI_COMMIT_REF_SLUG}\", \"watchedNamespaces\": \"ci-alm-${CI_COMMIT_REF_SLUG}\"}" > params.json'
  - cat params.json
  environment:
    name: review/ci-alm-${CI_COMMIT_REF_SLUG}
    on_stop: stop-preview
    url: https://alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
  except:
  - master
  - tags
  image: quay.io/coreos/alm-ci-build:latest
  only:
  - branches
  script:
  - echo $CD_KUBECONFIG | base64 -d > kubeconfig
  - export KUBECONFIG=./kubeconfig
  - kubectl create ns ci-alm-${CI_COMMIT_REF_SLUG} || true
  - kubectl create secret docker-registry coreos-pull-secret --docker-server quay.io --docker-username $DOCKER_USER --docker-password $DOCKER_PASS --docker-email ignored@example.com --namespace=ci-alm-${CI_COMMIT_REF_SLUG}
    || true
  - charttmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'charttmpdir'`;mkdir -p ${charttmpdir};pushd deploy/chart/templates;filenames=$(ls *.yaml);popd;for f in ${filenames};do helm template --set namespace=ci-alm-${CI_COMMIT_REF_SLUG}
    deploy/chart -x templates/${f} --set alm.image.ref=quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre --set catalog.image.ref=quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre --set catalog_namespace=tectonic-system
    --set namespace=ci-alm-${CI_COMMIT_REF_SLUG} --set watchedNamespaces=ci-alm-${CI_COMMIT_REF_SLUG} > ${charttmpdir}/${f};done;kubectl apply -f ${charttmpdir}
  - kubectl rollout status -w deployment/alm-operator --namespace=ci-alm-${CI_COMMIT_REF_SLUG}
  - kubectl rollout status -w deployment/catalog-operator --namespace=ci-alm-${CI_COMMIT_REF_SLUG}
  stage: deploy_preview
  tags:
  - kubernetes
  variables:
    ALM_DOMAIN: alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
    K8S_NAMESPACE: ci-alm-${CI_COMMIT_REF_SLUG}
  when: manual
deploy-staging:
  before_script:
  - 'echo "version: 1.0.0-${CI_COMMIT_REF_SLUG}-pre" >> deploy/chart/Chart.yaml'
  - 'echo "{\"alm.image.ref\": \"quay.io/coreos/olm:${CI_COMMIT_REF_SLUG}-${SHA8}\", \"catalog.image.ref\": \"quay.io/coreos/catalog:${CI_COMMIT_REF_SLUG}-${SHA8}\", \"catalog_namespace\": \"tectonic-system\",
    \"namespace\": \"ci-alm-staging\", \"watchedNamespaces\": \"ci-alm-staging\"}" > params.json'
  - cat params.json
  environment:
    name: staging
    url: https://alm-staging.k8s.devtable.com
  image: quay.io/coreos/alm-ci-build:latest
  only:
  - master
  script:
  - echo $CD_KUBECONFIG | base64 -d > kubeconfig
  - export KUBECONFIG=./kubeconfig
  - kubectl create ns ci-alm-staging || true
  - kubectl create secret docker-registry coreos-pull-secret --docker-server quay.io --docker-username $DOCKER_USER --docker-password $DOCKER_PASS --docker-email ignored@example.com --namespace=ci-alm-staging
    || true
  - charttmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'charttmpdir'`;mkdir -p ${charttmpdir};pushd deploy/chart/templates;filenames=$(ls *.yaml);popd;for f in ${filenames};do helm template --set namespace=ci-alm-staging
    deploy/chart -x templates/${f} --set alm.image.ref=quay.io/coreos/olm:${CI_COMMIT_REF_SLUG}-${SHA8} --set catalog.image.ref=quay.io/coreos/catalog:${CI_COMMIT_REF_SLUG}-${SHA8} --set catalog_namespace=tectonic-system
    --set namespace=ci-alm-staging --set watchedNamespaces=ci-alm-staging > ${charttmpdir}/${f};done;kubectl apply -f ${charttmpdir}
  - kubectl rollout status -w deployment/alm-operator --namespace=ci-alm-staging
  - kubectl rollout status -w deployment/catalog-operator --namespace=ci-alm-staging
  stage: deploy_staging
  tags:
  - kubernetes
  variables:
    ALM_DOMAIN: alm-staging.k8s.devtable.com
    K8S_NAMESPACE: ci-alm-staging
deploy-teamui:
  before_script:
  - 'echo "version: 1.0.0-${CI_COMMIT_REF_SLUG}-pre" >> deploy/chart/Chart.yaml'
  - 'echo "{\"alm.image.ref\": \"quay.io/coreos/olm:${CI_COMMIT_REF_SLUG}-${SHA8}\", \"catalog.image.ref\": \"quay.io/coreos/catalog:${CI_COMMIT_REF_SLUG}-${SHA8}\", \"catalog_namespace\": \"tectonic-system\",
    \"namespace\": \"tectonic-system\", \"watchedNamespaces\": \"\"}" > params.json'
  - cat params.json
  environment:
    name: teamui
    url: https://teamui18.console.team.coreos.systems
  image: quay.io/coreos/alm-ci-build:latest
  only:
  - master
  script:
  - echo $TEAMUI_KUBECONFIG | base64 -d > kubeconfig
  - export KUBECONFIG=./kubeconfig
  - kubectl create ns tectonic-system || true
  - kubectl create secret docker-registry coreos-pull-secret --docker-server quay.io --docker-username $DOCKER_USER --docker-password $DOCKER_PASS --docker-email ignored@example.com --namespace=tectonic-system
    || true
  - charttmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'charttmpdir'`;mkdir -p ${charttmpdir};pushd deploy/chart/templates;filenames=$(ls *.yaml);popd;for f in ${filenames};do helm template --set namespace=tectonic-system
    deploy/chart -x templates/${f} --set alm.image.ref=quay.io/coreos/olm:${CI_COMMIT_REF_SLUG}-${SHA8} --set catalog.image.ref=quay.io/coreos/catalog:${CI_COMMIT_REF_SLUG}-${SHA8} --set catalog_namespace=tectonic-system
    --set namespace=tectonic-system --set watchedNamespaces= > ${charttmpdir}/${f};done;kubectl apply -f ${charttmpdir}
  - kubectl rollout status -w deployment/alm-operator --namespace=tectonic-system
  - kubectl rollout status -w deployment/catalog-operator --namespace=tectonic-system
  - 'curl -X POST --data-urlencode "payload={\"text\": \"New OLM Operator quay.io/coreos/olm:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHA} deployed to ${TEAMUI_HOST}/k8s/ns/tectonic-system/deployments/alm-operator\"}"
    ${TEAMUI_SLACK_URL}'
  stage: deploy_staging
  tags:
  - kubernetes
  variables:
    ALM_DOMAIN: teamui18.console.team.coreos.systems
    K8S_NAMESPACE: tectonic-system
e2e-setup:
  before_script:
  - 'echo "version: 1.0.0-${CI_COMMIT_REF_SLUG}-pre" >> deploy/chart/Chart.yaml'
  - 'echo "{\"alm.image.ref\": \"quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre\", \"catalog.image.ref\": \"quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre\", \"catalog_namespace\": \"e2e-${CI_COMMIT_REF_SLUG}-${SHA8}\",
    \"namespace\": \"e2e-${CI_COMMIT_REF_SLUG}-${SHA8}\", \"watchedNamespaces\": \"e2e-${CI_COMMIT_REF_SLUG}-${SHA8}\"}" > params.json'
  - cat params.json
  environment:
    name: review/e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    url: https://alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
  image: quay.io/coreos/alm-ci-build:latest
  script:
  - echo $CD_KUBECONFIG | base64 -d > kubeconfig
  - export KUBECONFIG=./kubeconfig
  - kubectl create ns e2e-${CI_COMMIT_REF_SLUG}-${SHA8} || true
  - kubectl create secret docker-registry coreos-pull-secret --docker-server quay.io --docker-username $DOCKER_USER --docker-password $DOCKER_PASS --docker-email ignored@example.com --namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    || true
  - charttmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'charttmpdir'`;mkdir -p ${charttmpdir};pushd deploy/chart/templates;filenames=$(ls *.yaml);popd;for f in ${filenames};do helm template --set namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    deploy/chart -x templates/${f} --set alm.image.ref=quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre --set catalog.image.ref=quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre --set catalog_namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    --set namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8} --set watchedNamespaces=e2e-${CI_COMMIT_REF_SLUG}-${SHA8} > ${charttmpdir}/${f};done;kubectl apply -f ${charttmpdir}
  - kubectl rollout status -w deployment/alm-operator --namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
  - kubectl rollout status -w deployment/catalog-operator --namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
  stage: test_setup
  tags:
  - kubernetes
  variables:
    ALM_DOMAIN: alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
    K8S_NAMESPACE: e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
e2e-teardown:
  before_script: []
  environment:
    action: stop
    name: review/e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    url: https://alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
  image: quay.io/coreos/alm-ci-build:latest
  script:
  - echo $CD_KUBECONFIG | base64 -d > kubeconfig
  - export KUBECONFIG=./kubeconfig
  - kubectl delete ns --ignore-not-found=true e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
  - kubectl get pods -o wide -n e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
  stage: test_teardown
  tags:
  - kubernetes
  variables:
    ALM_DOMAIN: alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
    GIT_STRATEGY: none
    K8S_NAMESPACE: e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
e2e_tests:
  image: quay.io/coreos/alm-ci-build:latest
  script:
  - echo $CD_KUBECONFIG | base64 -d > kubeconfig
  - export KUBECONFIG=./kubeconfig
  - kubectl create secret docker-registry coreos-pull-secret --docker-server quay.io --docker-username $DOCKER_USER --docker-password $DOCKER_PASS --docker-email ignored@example.com --namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    || true
  - 'kubectl -n e2e-${CI_COMMIT_REF_SLUG}-${SHA8} patch serviceaccount default -p ''{"imagePullSecrets": [{"name": "coreos-pull-secret"}]}'' || true'
  - kubectl -n e2e-${CI_COMMIT_REF_SLUG}-${SHA8} create rolebinding e2e-admin-rb --clusterrole=cluster-admin --serviceaccount=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}:default --namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    || true
  - charttmpdir=`mktemp -d 2>/dev/null || mktemp -d -t 'charttmpdir'`;mkdir -p ${charttmpdir};pushd test/e2e/chart/templates;filenames=$(ls *.yaml);popd;for f in ${filenames};do helm template --set namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    test/e2e/chart -x templates/${f} --set e2e.image.ref=quay.io/coreos/alm-e2e:${CI_COMMIT_REF_SLUG}-${SHA8} --set job_name=e2e-${CI_COMMIT_REF_SLUG}-${SHA8} --set namespace=e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    > ${charttmpdir}/${f};done;kubectl apply -f ${charttmpdir}
  - until kubectl -n e2e-${CI_COMMIT_REF_SLUG}-${SHA8} logs job/e2e-${CI_COMMIT_REF_SLUG}-${SHA8} | grep -v 'ContainerCreating'; do echo 'waiting for job to run' && sleep 1; done
  - kubectl -n e2e-${CI_COMMIT_REF_SLUG}-${SHA8} logs job/e2e-${CI_COMMIT_REF_SLUG}-${SHA8} -f
  - kubectl -n e2e-${CI_COMMIT_REF_SLUG}-${SHA8} logs job/e2e-${CI_COMMIT_REF_SLUG}-${SHA8} > e2e.log
  - if cat e2e.log | grep -q '^not'; then echo 'err' && exit 1; else echo 'no err' && exit 0; fi
  stage: tests
  tags:
  - kubernetes
  variables:
    K8S_NAMESPACE: e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
    NAMESPACE: e2e-${CI_COMMIT_REF_SLUG}-${SHA8}
stages:
- docker_base
- docker_build
- deploy_preview
- test_setup
- tests
- test_teardown
- integration
- docker_release
- tag_release
- deploy_staging
- teardown
stop-preview:
  before_script: []
  environment:
    action: stop
    name: review/ci-alm-${CI_COMMIT_REF_SLUG}
    url: https://alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
  except:
  - master
  - tags
  image: quay.io/coreos/alm-ci-build:latest
  only:
  - branches
  script:
  - echo $CD_KUBECONFIG | base64 -d > kubeconfig
  - export KUBECONFIG=./kubeconfig
  - kubectl delete ns --ignore-not-found=true ci-alm-${CI_COMMIT_REF_SLUG}
  - kubectl get pods -o wide -n ci-alm-${CI_COMMIT_REF_SLUG}
  stage: deploy_preview
  tags:
  - kubernetes
  variables:
    ALM_DOMAIN: alm-${CI_COMMIT_REF_SLUG}.k8s.devtable.com
    GIT_STRATEGY: none
    K8S_NAMESPACE: ci-alm-${CI_COMMIT_REF_SLUG}
  when: manual
tag-release:
  before_script:
  - docker login -u $DOCKER_USER -p $DOCKER_PASS quay.io
  - mkdir -p $PWD/bin
  image: docker:git
  only:
  - tags
  script:
  - docker pull quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker tag quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}-pre quay.io/coreos/olm:${CI_COMMIT_TAG}
  - docker push quay.io/coreos/olm:${CI_COMMIT_TAG}
  - docker pull quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker tag quay.io/coreos/catalog-ci:${CI_COMMIT_REF_SLUG}-pre quay.io/coreos/catalog:${CI_COMMIT_TAG}
  - docker push quay.io/coreos/catalog:${CI_COMMIT_TAG}
  - docker pull quay.io/coreos/alm-service-broker-ci:${CI_COMMIT_REF_SLUG}-pre
  - docker tag quay.io/coreos/alm-service-broker-ci:${CI_COMMIT_REF_SLUG}-pre quay.io/coreos/alm-service-broker:${CI_COMMIT_TAG}
  - docker push quay.io/coreos/alm-service-broker:${CI_COMMIT_TAG}
  - docker pull quay.io/coreos/alm-e2e:latest
  - docker tag quay.io/coreos/alm-e2e:latest quay.io/coreos/alm-e2e:${CI_COMMIT_TAG}
  - docker push quay.io/coreos/alm-e2e:${CI_COMMIT_TAG}
  stage: tag_release
  tags:
  - kubernetes
  variables:
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker-host.gitlab.svc.cluster.local:2375
unit-tests:
  before_script:
  - mkdir -p $GOPATH/src/github.com/operator-framework/operator-lifecycle-manager
  - cp -a $CI_PROJECT_DIR/* $GOPATH/src/github.com/operator-framework/operator-lifecycle-manager
  - cd $GOPATH/src/github.com/operator-framework/operator-lifecycle-manager
  coverage: /\d\d\.\d.$/
  image: quay.io/coreos/alm-ci:${CI_COMMIT_REF_SLUG}
  script:
  - make vendor
  - make verify-catalog
  - make verify-codegen
  - make coverage
  stage: tests
  tags:
  - kubernetes
variables:
  FAILFASTCI_NAMESPACE: operator-framework
  GET_SOURCES_ATTEMPTS: '10'
