// Code generated by MockGen. DO NOT EDIT.
// Source: pkg/client/installplan_client.go

// Package client is a generated GoMock package.
package client

import (
	v1alpha1 "github.com/coreos-inc/alm/pkg/apis/installplan/v1alpha1"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockInstallPlanInterface is a mock of InstallPlanInterface interface
type MockInstallPlanInterface struct {
	ctrl     *gomock.Controller
	recorder *MockInstallPlanInterfaceMockRecorder
}

// MockInstallPlanInterfaceMockRecorder is the mock recorder for MockInstallPlanInterface
type MockInstallPlanInterfaceMockRecorder struct {
	mock *MockInstallPlanInterface
}

// NewMockInstallPlanInterface creates a new mock instance
func NewMockInstallPlanInterface(ctrl *gomock.Controller) *MockInstallPlanInterface {
	mock := &MockInstallPlanInterface{ctrl: ctrl}
	mock.recorder = &MockInstallPlanInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockInstallPlanInterface) EXPECT() *MockInstallPlanInterfaceMockRecorder {
	return m.recorder
}

// UpdateInstallPlan mocks base method
func (m *MockInstallPlanInterface) UpdateInstallPlan(arg0 *v1alpha1.InstallPlan) (*v1alpha1.InstallPlan, error) {
	ret := m.ctrl.Call(m, "UpdateInstallPlan", arg0)
	ret0, _ := ret[0].(*v1alpha1.InstallPlan)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// UpdateInstallPlan indicates an expected call of UpdateInstallPlan
func (mr *MockInstallPlanInterfaceMockRecorder) UpdateInstallPlan(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateInstallPlan", reflect.TypeOf((*MockInstallPlanInterface)(nil).UpdateInstallPlan), arg0)
}
